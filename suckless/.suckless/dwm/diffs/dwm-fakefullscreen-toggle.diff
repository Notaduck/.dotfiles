Only in fakefulldwm/: config.h
Only in fakefulldwm/: drw.o
Only in fakefulldwm/: dwm
Only in fakefulldwm/: dwm-fakefullscreen-20170508-ceac8c9.diff
diff -bur dwm-6.2/dwm.c fakefulldwm/dwm.c
--- dwm-6.2/dwm.c	2019-02-02 13:55:28.000000000 +0100
+++ fakefulldwm/dwm.c	2019-07-31 19:03:18.167994183 +0200
@@ -233,6 +233,7 @@
 static int xerrordummy(Display *dpy, XErrorEvent *ee);
 static int xerrorstart(Display *dpy, XErrorEvent *ee);
 static void zoom(const Arg *arg);
+static void togglefullscreen(const Arg *arg);
 
 /* variables */
 static const char broken[] = "broken";
@@ -521,7 +522,7 @@
 		if (cme->data.l[1] == netatom[NetWMFullscreen]
 		|| cme->data.l[2] == netatom[NetWMFullscreen])
 			setfullscreen(c, (cme->data.l[0] == 1 /* _NET_WM_STATE_ADD    */
-				|| (cme->data.l[0] == 2 /* _NET_WM_STATE_TOGGLE */ && !c->isfullscreen)));
+				|| cme->data.l[0] == 2 /* _NET_WM_STATE_TOGGLE */));
 	} else if (cme->message_type == netatom[NetActiveWindow]) {
 		if (c != selmon->sel && !c->isurgent)
 			seturgent(c, 1);
@@ -551,7 +552,6 @@
 configurenotify(XEvent *e)
 {
 	Monitor *m;
-	Client *c;
 	XConfigureEvent *ev = &e->xconfigure;
 	int dirty;
 
@@ -564,9 +564,6 @@
 			drw_resize(drw, sw, bh);
 			updatebars();
 			for (m = mons; m; m = m->next) {
-				for (c = m->clients; c; c = c->next)
-					if (c->isfullscreen)
-						resizeclient(c, m->mx, m->my, m->mw, m->mh);
 				XMoveResizeWindow(dpy, m->barwin, m->wx, m->by, m->ww, bh);
 			}
 			focus(NULL);
@@ -1143,8 +1140,6 @@
 
 	if (!(c = selmon->sel))
 		return;
-	if (c->isfullscreen) /* no support moving fullscreen windows by mouse */
-		return;
 	restack(selmon);
 	ocx = c->x;
 	ocy = c->y;
@@ -1298,8 +1293,6 @@
 
 	if (!(c = selmon->sel))
 		return;
-	if (c->isfullscreen) /* no support resizing fullscreen windows by mouse */
-		return;
 	restack(selmon);
 	ocx = c->x;
 	ocy = c->y;
@@ -1469,6 +1462,19 @@
 	sendevent(c, wmatom[WMTakeFocus]);
 }
 
+/*void*/
+/*setfullscreen(Client *c, int fullscreen)*/
+/*{*/
+	/*if (fullscreen && !c->isfullscreen) {*/
+		/*XChangeProperty(dpy, c->win, netatom[NetWMState], XA_ATOM, 32,*/
+			/*PropModeReplace, (unsigned char*)&netatom[NetWMFullscreen], 1);*/
+		/*c->isfullscreen = 1;*/
+	/*} else if (!fullscreen && c->isfullscreen){*/
+		/*XChangeProperty(dpy, c->win, netatom[NetWMState], XA_ATOM, 32,*/
+			/*PropModeReplace, (unsigned char*)0, 0);*/
+		/*c->isfullscreen = 0;*/
+	/*}*/
+/*}*/
 void
 setfullscreen(Client *c, int fullscreen)
 {
@@ -1618,7 +1624,7 @@
 	if (ISVISIBLE(c)) {
 		/* show clients top down */
 		XMoveWindow(dpy, c->win, c->x, c->y);
-		if ((!c->mon->lt[c->mon->sellt]->arrange || c->isfloating) && !c->isfullscreen)
+		if (!c->mon->lt[c->mon->sellt]->arrange || c->isfloating)
 			resize(c, c->x, c->y, c->w, c->h, 0);
 		showhide(c->snext);
 	} else {
@@ -1710,8 +1716,6 @@
 {
 	if (!selmon->sel)
 		return;
-	if (selmon->sel->isfullscreen) /* no support for fullscreen windows */
-		return;
 	selmon->sel->isfloating = !selmon->sel->isfloating || selmon->sel->isfixed;
 	if (selmon->sel->isfloating)
 		resize(selmon->sel, selmon->sel->x, selmon->sel->y,
@@ -2147,3 +2151,11 @@
 	XCloseDisplay(dpy);
 	return EXIT_SUCCESS;
 }
+void
+togglefullscreen(const Arg *arg) {
+    if (!selmon->sel)
+        return;
+
+    setfullscreen(selmon->sel, !selmon->sel->isfullscreen);
+}
+
Only in fakefulldwm/: dwm.c.orig
Only in fakefulldwm/: dwm.o
Only in fakefulldwm/: util.o
