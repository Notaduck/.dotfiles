"use strict";var m=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var E=Object.prototype.hasOwnProperty;var S=(t,e)=>{for(var r in e)m(t,r,{get:e[r],enumerable:!0})},b=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of H(e))!E.call(t,i)&&i!==r&&m(t,i,{get:()=>e[i],enumerable:!(o=v(e,i))||o.enumerable});return t};var T=t=>b(m({},"__esModule",{value:!0}),t);var F={};S(F,{default:()=>A});module.exports=T(F);var s=require("@raycast/api");var a=[];for(let t=0;t<256;++t)a.push((t+256).toString(16).slice(1));function g(t,e=0){return(a[t[e+0]]+a[t[e+1]]+a[t[e+2]]+a[t[e+3]]+"-"+a[t[e+4]]+a[t[e+5]]+"-"+a[t[e+6]]+a[t[e+7]]+"-"+a[t[e+8]]+a[t[e+9]]+"-"+a[t[e+10]]+a[t[e+11]]+a[t[e+12]]+a[t[e+13]]+a[t[e+14]]+a[t[e+15]]).toLowerCase()}var U=require("crypto"),d=new Uint8Array(256),l=d.length;function y(){return l>d.length-16&&((0,U.randomFillSync)(d),l=0),d.slice(l,l+=16)}var h=require("crypto"),c={randomUUID:h.randomUUID};function V(t,e,r){if(c.randomUUID&&!e&&!t)return c.randomUUID();t=t||{};let o=t.random??t.rng?.()??y();if(o.length<16)throw new Error("Random bytes length must be >= 16");if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,e){if(r=r||0,r<0||r+16>e.length)throw new RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`);for(let i=0;i<16;++i)e[r+i]=o[i];return e}return g(o)}var p=V;var u=require("@raycast/api");var x=async(t,e)=>{try{let r=await u.LocalStorage.getItem("uuidHistory");if(r||(r="[]"),typeof r!="string")return;let o=JSON.parse(r);o.push({uuid:t,timestamp:new Date,type:e}),await u.LocalStorage.setItem("uuidHistory",JSON.stringify(o))}catch{await(0,u.showToast)({style:u.Toast.Style.Failure,title:"Error saving history",message:"Failed to save history to local storage"})}};async function w(t,e,r=!1,o="uuidV4"){let i=Array.from(Array(e)).map(()=>{let n=t();return r?n.toUpperCase():n});for(let n of i)await x(n,o);return i}var I=1e4,A=async t=>{let{numberOfUUIDsToGenerate:e}=t.arguments,{upperCaseLetters:r,defaultAction:o}=(0,s.getPreferenceValues)();e||(e="1");try{let i=parseInt(e,10);if(isNaN(i))throw new Error("INVALID_NUMBER");if(i<=I){let n=await w(p,i,r,"uuidV4");o==="copy"?await s.Clipboard.copy(n.join(`\r
`)):o==="paste"&&await s.Clipboard.paste(n.join(`\r
`));let f=o==="copy"?"Copied":"Pasted",D=n.length>1?`${f} ${n.length} new UUIDs.`:`${f} new UUID: ${n}`;await(0,s.showHUD)(`\u2705 ${D}`)}else await(0,s.showToast)({style:s.Toast.Style.Failure,title:"Too many UUIDs requested.",message:`${i} exceeds maximum UUIDs of ${I}. Try a lower number.`})}catch{await(0,s.showToast)({style:s.Toast.Style.Failure,title:"Invalid number.",message:"An invalid number has been provided. Try an actual number."})}};
