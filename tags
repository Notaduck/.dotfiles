!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
$(COBJ)	suckless/.suckless/surf/Makefile	/^$(COBJ): config.h common.h config.mk$/;"	t
$(OBJ)	suckless/.suckless/dmenu/Makefile	/^$(OBJ): arg.h config.h config.mk drw.h$/;"	t
$(OBJ)	suckless/.suckless/st/Makefile	/^$(OBJ): config.h config.mk$/;"	t
$(OBJ)	suckless/.suckless/surf/Makefile	/^$(OBJ): config.h common.h config.mk$/;"	t
$(WEBEXTOBJ)	suckless/.suckless/surf/Makefile	/^$(WEBEXTOBJ): $(WEBEXTSRC)$/;"	t
$(WEBEXTOBJ)	suckless/.suckless/surf/Makefile	/^$(WEBEXTOBJ): config.h common.h config.mk$/;"	t
$NVIM_TUI_ENABLE_TRUE_COLOR	config/.config/nvim/init.vim	/^  let $NVIM_TUI_ENABLE_TRUE_COLOR=1$/;"	v
${OBJ}	suckless/.suckless/dwm/Makefile	/^${OBJ}: config.h config.mk$/;"	t
${OBJ}	suckless/.suckless/tabbed/Makefile	/^${OBJ}: config.h config.mk$/;"	t
-0,0 +1,65	suckless/.suckless/dwm/diffs/dwm-r1615-selfrestart.diff	/^@@ -0,0 +1,65 @@$/;"	h	newFile:b/selfrestart.c
-0,0 +1,66	suckless/.suckless/dwm/diffs/dwm-fibonacci-5.8.2.diff	/^@@ -0,0 +1,66 @@$/;"	h	newFile:b/fibonacci.c
-1018,7 +1129,7	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1018,7 +1129,7 @@ killclient(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1019,12 +1078,13	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -1019,12 +1078,13 @@ killclient(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-102,7 +102,6	suckless/.suckless/dwm/diffs/dwm-notitle-6.2.diff	/^@@ -102,7 +102,6 @@ static Button buttons[] = {$/;"	h	modifiedFile:a/config.def.h
-1028,6 +1260,7	suckless/.suckless/surf/diffs/surf-0.1-chromebar.diff	/^@@ -1028,6 +1260,7 @@ setup(void) {$/;"	h	modifiedFile:a/surf.c
-1039,6 +1099,7	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -1039,6 +1099,7 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-1042,13 +1052,53	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -1042,13 +1052,53 @@ tswapscreen(void)$/;"	h	modifiedFile:a/st.c
-1051,6 +1054,13	suckless/.suckless/dwm/diffs/dwm-scratchpad-20170207-bb3bd6f.diff	/^@@ -1051,6 +1054,13 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-1058,6 +1058,11	suckless/.suckless/st/diffs/st-scrollback-mouse-altscreen-20190131-e23acb9.diff	/^@@ -1058,6 +1058,11 @@ tnew(int col, int row)$/;"	h	modifiedFile:a/st.c
-1062,13 +1112,23	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -1062,13 +1112,23 @@ tscrolldown(int orig, int n)$/;"	h	modifiedFile:a/st.c
-1075,6 +1136,8	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -1075,6 +1136,8 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-108,4 +111,3	suckless/.suckless/dwm/diffs/dwm-r1615-selfrestart.diff	/^@@ -108,4 +111,3 @@$/;"	h	modifiedFile:a/config.def.h
-1105,6 +1216,12	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1105,6 +1216,12 @@ maprequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1117,7 +1177,7	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -1117,7 +1177,7 @@ tnewline(int first_col)$/;"	h	modifiedFile:a/st.c
-112,6 +112,7	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -112,6 +112,7 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-1123,12 +1184,12	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1123,12 +1184,12 @@ monocle(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c.orig
-1143,8 +1140,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -1143,8 +1140,6 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1145,8 +1141,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^@@ -1145,8 +1141,6 @@ movemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-117,6 +121,9	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -117,6 +121,9 @@ typedef struct {$/;"	h	modifiedFile:a/st.c
-1173,6 +1178,21	suckless/.suckless/surf/diffs/surf-git-20160127-searchengines.diff	/^@@ -1173,6 +1178,21 @@ menuactivate(GtkMenuItem *item, Client *c)$/;"	h	modifiedFile:a/surf.c
-1173,6 +1178,21	suckless/.suckless/surf/surf-git-20160127-searchengines.diff	/^@@ -1173,6 +1178,21 @@ menuactivate(GtkMenuItem *item, Client *c)$/;"	h	modifiedFile:a/surf.c
-1205,6 +1212,21	suckless/.suckless/surf/diffs/surf-0.7-webkit2-searchengines.diff	/^@@ -1205,6 +1212,21 @@ destroywin(GtkWidget* w, Client *c)$/;"	h	modifiedFile:a/surf.c
-1213,9 +1274,9	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1213,9 +1274,9 @@ movemouse(const Arg *arg)$/;"	h	modifiedFile:dwm/dwm.c.orig
-122,3 +129,4	suckless/.suckless/st/diffs/st-scrollback-mouse-0.8.2.diff	/^@@ -122,3 +129,4 @@ extern char *termname;$/;"	h	modifiedFile:a/st.h
-1232,6 +1349,16	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1232,6 +1349,16 @@ propertynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1235,11 +1226,8	suckless/.suckless/dwm/diffs/dwm-notitle-6.2.diff	/^@@ -1235,11 +1226,8 @@ propertynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-124,6 +130,7	suckless/.suckless/surf/diffs/surf-0.7-webkit2-searchengines.diff	/^@@ -124,6 +130,7 @@ static void newwindow(Client *c, const Arg *a, int noembed);$/;"	h	modifiedFile:a/surf.c
-125,9 +126,8	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -125,9 +126,8 @@ struct Monitor {$/;"	h	modifiedFile:dwm/dwm.c.orig
-1273,7 +1283,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -1273,7 +1283,7 @@ movemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1282,14 +1342,14	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -1282,14 +1342,14 @@ void$/;"	h	modifiedFile:a/st.c
-1283,6 +1410,19	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1283,6 +1410,19 @@ recttomon(int x, int y, int w, int h)$/;"	h	modifiedFile:a/dwm.c
-129,6 +129,11	suckless/.suckless/surf/diffs/surf-git-20170323-webkit2-searchengines.diff	/^@@ -129,6 +129,11 @@ typedef struct {$/;"	h	modifiedFile:a/surf.c
-1290,6 +1430,14	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1290,6 +1430,14 @@ resize(Client *c, int x, int y, int w, i$/;"	h	modifiedFile:a/dwm.c
-1293,12 +1293,36	suckless/.suckless/dwm/diffs/dwm-uselessgap-6.1.diff	/^@@ -1293,12 +1293,36 @@ void$/;"	h	modifiedFile:dwm/dwm.c.orig
-1298,8 +1293,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -1298,8 +1293,6 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-13,6 +13,10	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -13,6 +13,10 @@ static const char selbgcolor[]      = "#$/;"	h	modifiedFile:a/config.def.h
-1300,8 +1294,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^@@ -1300,8 +1294,6 @@ resizemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-131,6 +132,7	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -131,6 +132,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1362,6 +1510,18	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1362,6 +1510,18 @@ resizemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1379,8 +1440,8	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1379,8 +1440,8 @@ restack(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c.orig
-139,6 +143,8	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -139,6 +143,8 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-141,6 +148,9	suckless/.suckless/surf/diffs/surf-0.1-chromebar.diff	/^@@ -141,6 +148,9 @@ static void loaduri(Client *c, const Arg *arg);$/;"	h	modifiedFile:a/surf.c
-141,6 +159,12	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -141,6 +159,12 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-142,12 +142,18	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -142,12 +142,18 @@ typedef struct {$/;"	h	modifiedFile:dwm/dwm.c.orig
-1428,8 +1438,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -1428,8 +1438,6 @@ resizemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1433,11 +1494,9	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1433,11 +1494,9 @@ sendmon(Client *c, Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c.orig
-1450,26 +1610,36	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1450,26 +1610,36 @@ setclientstate(Client *c, long state)$/;"	h	modifiedFile:a/dwm.c
-1461,6 +1467,22	suckless/.suckless/surf/diffs/surf-git-20170323-webkit2-searchengines.diff	/^@@ -1461,6 +1467,22 @@ destroywin(GtkWidget* w, Client *c)$/;"	h	modifiedFile:a/surf.c
-1469,6 +1462,19	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -1469,6 +1462,19 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1478,24 +1470,10	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^@@ -1478,24 +1470,10 @@ setfullscreen(Client *c, int fullscreen)$/;"	h	modifiedFile:a/dwm.c
-1483,7 +1653,7	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1483,7 +1653,7 @@ setfocus(Client *c)$/;"	h	modifiedFile:a/dwm.c
-15,3 +15,5	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^@@ -15,3 +15,5 @@ static const char *outbgcolor  = "#00fff$/;"	h	modifiedFile:dmenu-4.6/config.def.h
-1503,9 +1529,9	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -1503,9 +1529,9 @@ void$/;"	h	modifiedFile:a/dwm.c
-1524,7 +1550,7	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -1524,7 +1550,7 @@ setmfact(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1558,6 +1617,8	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1558,6 +1617,8 @@ setup(void)$/;"	h	modifiedFile:dwm/dwm.c.orig
-156,8 +156,14	suckless/.suckless/st/diffs/st-scrollback-mouse-0.8.2.diff	/^@@ -156,8 +156,14 @@ static unsigned int defaultattr = 11;$/;"	h	modifiedFile:a/config.def.h
-1569,12 +1739,18	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1569,12 +1739,18 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-157,6 +157,7	suckless/.suckless/dwm/diffs/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -157,6 +157,7 @@ static void configure(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1586,6 +1762,8	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1586,6 +1762,8 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1607,7 +1668,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1607,7 +1668,7 @@ showhide(Client *c)$/;"	h	modifiedFile:dwm/dwm.c.orig
-1612,24 +1620,28	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -1612,24 +1620,28 @@ setfullscreen(Client *c, int fullscreen)$/;"	h	modifiedFile:a/dwm.c
-1618,7 +1624,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -1618,7 +1624,7 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-162,8 +162,8	suckless/.suckless/st/diffs/st-scrollback-mouse-altscreen-20190131-e23acb9.diff	/^@@ -162,8 +162,8 @@ static MouseShortcut mshortcuts[] = {$/;"	h	modifiedFile:a/config.def.h
-1620,7 +1598,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^@@ -1620,7 +1598,7 @@ showhide(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1645,6 +1823,22	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1645,6 +1823,22 @@ spawn(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1647,7 +1708,22	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1647,7 +1708,22 @@ spawn(const Arg *arg)$/;"	h	modifiedFile:dwm/dwm.c.orig
-166,6 +176,7	suckless/.suckless/surf/diffs/surf-0.1-chromebar.diff	/^@@ -166,6 +176,7 @@ static void togglescrollbars(Client *c, const Arg *arg);$/;"	h	modifiedFile:a/surf.c
-1668,7 +1744,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1668,7 +1744,7 @@ tile(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c.orig
-1676,7 +1752,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1676,7 +1752,7 @@ tile(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c.orig
-1694,7 +1888,18	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1694,7 +1888,18 @@ togglebar(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-17,6 +17,7	suckless/.suckless/surf/diffs/surf-0.1-chromebar.diff	/^@@ -17,6 +17,7 @@$/;"	h	modifiedFile:a/surf.c
-170,8 +194,10	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -170,8 +194,10 @@ static void focus(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1701,7 +1727,7	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -1701,7 +1727,7 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1710,8 +1716,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -1710,8 +1716,6 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-1712,8 +1690,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^@@ -1712,8 +1690,6 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1714,12 +1790,17	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1714,12 +1790,17 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:dwm/dwm.c.orig
-1720,11 +1780,11	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -1720,11 +1780,11 @@ csihandle(void)$/;"	h	modifiedFile:a/st.c
-1724,6 +1734,28	suckless/.suckless/dwm/diffs/dwm-scratchpad-20170207-bb3bd6f.diff	/^@@ -1724,6 +1734,28 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1729,12 +1810,17	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1729,12 +1810,17 @@ toggletag(const Arg *arg)$/;"	h	modifiedFile:dwm/dwm.c.orig
-1740,9 +1766,33	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -1740,9 +1766,33 @@ void$/;"	h	modifiedFile:a/dwm.c
-1767,6 +1830,20	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -1767,6 +1830,20 @@ unmanage(Client *c, int destroyed)$/;"	h	modifiedFile:a/dwm.c
-1767,7 +1779,9	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -1767,7 +1779,9 @@ showhide(Client *c)$/;"	h	modifiedFile:a/dwm.c
-178,6 +178,8	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -178,6 +178,8 @@ static Shortcut shortcuts[] = {$/;"	h	modifiedFile:a/config.def.h
-1781,9 +1858,12	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -1781,9 +1858,12 @@ unmanage(Client *c, int destroyed)$/;"	h	modifiedFile:a/dwm.c
-179,6 +184,7	suckless/.suckless/surf/diffs/surf-git-20160127-searchengines.diff	/^@@ -179,6 +184,7 @@ static void loaduri(Client *c, const Arg *arg);$/;"	h	modifiedFile:a/surf.c
-179,6 +184,7	suckless/.suckless/surf/surf-git-20160127-searchengines.diff	/^@@ -179,6 +184,7 @@ static void loaduri(Client *c, const Arg *arg);$/;"	h	modifiedFile:a/surf.c
-1790,11 +1995,17	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1790,11 +1995,17 @@ unmapnotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1804,10 +2015,15	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1804,10 +2015,15 @@ updatebars(void)$/;"	h	modifiedFile:a/dwm.c
-1832,7 +1918,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1832,7 +1918,7 @@ updateclientlist()$/;"	h	modifiedFile:dwm/dwm.c.orig
-184,8 +191,8	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -184,8 +191,8 @@ static void tnewline(int);$/;"	h	modifiedFile:a/st.c
-185,7 +191,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -185,7 +191,7 @@ static void maprequest(XEvent *e);$/;"	h	modifiedFile:dwm/dwm.c.orig
-1859,7 +1873,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -1859,7 +1873,7 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1862,8 +1948,10	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1862,8 +1948,10 @@ updategeom(void)$/;"	h	modifiedFile:dwm/dwm.c.orig
-1884,17 +1972,13	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -1884,17 +1972,13 @@ updategeom(void)$/;"	h	modifiedFile:dwm/dwm.c.orig
-189,13 +215,16	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -189,13 +215,16 @@ static void pop(Client *);$/;"	h	modifiedFile:a/dwm.c
-19,6 +19,8	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -19,6 +19,8 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.h
-1914,6 +1914,59	suckless/.suckless/st/diffs/st-externalpipe-0.8.2.diff	/^@@ -1914,6 +1914,59 @@ strparse(void)$/;"	h	modifiedFile:a/st.c
-1998,6 +2214,117	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -1998,6 +2214,117 @@ updatestatus(void)$/;"	h	modifiedFile:a/dwm.c
-202,6 +207,7	suckless/.suckless/surf/diffs/surf-git-20170323-webkit2-searchengines.diff	/^@@ -202,6 +207,7 @@ static void responsereceived(WebKitDownload *d, GParamSpec *ps, Client *c);$/;"	h	modifiedFile:a/surf.c
-2030,13 +2114,31	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -2030,13 +2114,31 @@ updatewmhints(Client *c)$/;"	h	modifiedFile:dwm/dwm.c.orig
-2036,11 +2086,37	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -2036,11 +2086,37 @@ updatewmhints(Client *c)$/;"	h	modifiedFile:a/dwm.c
-2045,6 +2125,103	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -2045,6 +2125,103 @@ view(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-2046,7 +2148,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -2046,7 +2148,7 @@ wintoclient(Window w)$/;"	h	modifiedFile:dwm/dwm.c.orig
-206,6 +235,7	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -206,6 +235,7 @@ static void setup(void);$/;"	h	modifiedFile:a/dwm.c
-2070,6 +2397,16	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -2070,6 +2397,16 @@ wintomon(Window w)$/;"	h	modifiedFile:a/dwm.c
-2113,8 +2215,8	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -2113,8 +2215,8 @@ zoom(const Arg *arg)$/;"	h	modifiedFile:dwm/dwm.c.orig
-212,6 +212,7	suckless/.suckless/dwm/diffs/dwm-scratchpad-20170207-bb3bd6f.diff	/^@@ -212,6 +212,7 @@ static void tagmon(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-2136,6 +2313,8	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -2136,6 +2313,8 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-2147,3 +2151,11	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -2147,3 +2151,11 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-22,7 +22,7	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -22,7 +22,7 @@ FREETYPEINC = \/usr\/include\/freetype2$/;"	h	modifiedFile:a/config.mk
-2227,7 +2287,7	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -2227,7 +2287,7 @@ eschandle(uchar ascii)$/;"	h	modifiedFile:a/st.c
-223,18 +253,24	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -223,18 +253,24 @@ static void updateclientlist(void);$/;"	h	modifiedFile:a/dwm.c
-2240,7 +2300,7	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -2240,7 +2300,7 @@ eschandle(uchar ascii)$/;"	h	modifiedFile:a/st.c
-233,6 +233,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -233,6 +233,7 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-235,6 +241,13	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -235,6 +241,13 @@ static int xerrordummy(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-237,6 +237,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -237,6 +237,7 @@ static int xerror(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-2458,7 +2518,7	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -2458,7 +2518,7 @@ twrite(const char *buf, int buflen, int show_ctrl)$/;"	h	modifiedFile:a/st.c
-2495,6 +2555,14	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -2495,6 +2555,14 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-253,6 +254,84	suckless/.suckless/dmenu/diffs/dmenu-fuzzymatch-4.6.diff	/^@@ -253,6 +254,84 @@ match(void)$/;"	h	modifiedFile:a/dmenu.c
-2552,7 +2620,7	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -2552,7 +2620,7 @@ drawregion(int x1, int y1, int x2, int y2)$/;"	h	modifiedFile:a/st.c
-256,9 +292,10	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -256,9 +292,10 @@ static void (*handler[LASTEvent]) (XEven$/;"	h	modifiedFile:a/dwm.c
-2573,8 +2641,9	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -2573,8 +2641,9 @@ draw(void)$/;"	h	modifiedFile:a/st.c
-26,9 +26,10	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -26,9 +26,10 @@ static const Rule rules[] = {$/;"	h	modifiedFile:a/config.def.h
-263,7 +342,7	suckless/.suckless/dmenu/diffs/dmenu-fuzzymatch-4.6.diff	/^@@ -263,7 +342,7 @@ insert(const char *str, ssize_t n)$/;"	h	modifiedFile:a/dmenu.c
-268,6 +274,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -268,6 +274,7 @@ static Display *dpy;$/;"	h	modifiedFile:dwm/dwm.c.orig
-269,6 +282,8	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -269,6 +282,8 @@ static Drw *drw;$/;"	h	modifiedFile:a/dwm.c
-272,6 +273,8	suckless/.suckless/dwm/diffs/dwm-scratchpad-20170207-bb3bd6f.diff	/^@@ -272,6 +273,8 @@ static Window root, wmcheckwin;$/;"	h	modifiedFile:a/dwm.c
-272,6 +274,15	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -272,6 +274,15 @@ static Window root, wmcheckwin;$/;"	h	modifiedFile:a/dwm.c
-278,6 +279,11	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -278,6 +279,11 @@ static Window root, wmcheckwin;$/;"	h	modifiedFile:a/dwm.c
-278,6 +282,105	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^@@ -278,6 +282,105 @@ nextrune(int inc)$/;"	h	modifiedFile:dmenu-4.6/dmenu.c
-29,1 +29,2	suckless/.suckless/dwm/diffs/dwm-fibonacci-5.8.2.diff	/^@@ -29,1 +29,2 @@$/;"	h	modifiedFile:a/config.def.h
-298,6 +313,7	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -298,6 +313,7 @@ applyrules(Client *c)$/;"	h	modifiedFile:a/dwm.c
-300,7 +307,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -300,7 +307,7 @@ applyrules(Client *c)$/;"	h	modifiedFile:dwm/dwm.c.orig
-308,7 +387,7	suckless/.suckless/dmenu/diffs/dmenu-fuzzymatch-4.6.diff	/^@@ -308,7 +387,7 @@ keypress(XKeyEvent *ev)$/;"	h	modifiedFile:a/dmenu.c
-32,6 +32,7	suckless/.suckless/dmenu/diffs/dmenu-fuzzymatch-4.6.diff	/^@@ -32,6 +32,7 @@ struct item {$/;"	h	modifiedFile:a/dmenu.c
-34,3 +35,5	suckless/.suckless/dwm/diffs/dwm-fibonacci-5.8.2.diff	/^@@ -34,3 +35,5 @@$/;"	h	modifiedFile:a/config.def.h
-341,6 +444,8	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^@@ -341,6 +444,8 @@ keypress(XKeyEvent *ev)$/;"	h	modifiedFile:dmenu-4.6/dmenu.c
-35,6 +35,7	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -35,6 +35,7 @@$/;"	h	modifiedFile:a/st.c
-350,13 +357,13	suckless/.suckless/surf/diffs/surf-0.7-webkit2-searchengines.diff	/^@@ -350,13 +357,13 @@ loaduri(Client *c, const Arg *a)$/;"	h	modifiedFile:a/surf.c
-382,9 +389,9	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -382,9 +389,9 @@ void$/;"	h	modifiedFile:dwm/dwm.c.orig
-40,6 +40,8	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -40,6 +40,8 @@$/;"	h	modifiedFile:a/dwm.c
-403,15 +410,48	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -403,15 +410,48 @@ arrangemon(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c.orig
-409,10 +416,10	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -409,10 +416,10 @@ tlinelen(int y)$/;"	h	modifiedFile:a/st.c
-409,6 +409,7	suckless/.suckless/st/diffs/st-scrollback-mouse-0.8.2.diff	/^@@ -409,6 +409,7 @@ bpress(XEvent *e)$/;"	h	modifiedFile:a/x.c
-41,6 +41,7	suckless/.suckless/dwm/diffs/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -41,6 +41,7 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-414,6 +430,47	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -414,6 +430,47 @@ attachstack(Client *c)$/;"	h	modifiedFile:a/dwm.c
-416,6 +521,8	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^@@ -416,6 +521,8 @@ keypress(XKeyEvent *ev)$/;"	h	modifiedFile:dmenu-4.6/dmenu.c
-417,11 +417,13	suckless/.suckless/st/diffs/st-scrollback-mouse-altscreen-20190131-e23acb9.diff	/^@@ -417,11 +417,13 @@ bpress(XEvent *e)$/;"	h	modifiedFile:a/x.c
-42,6 +43,9	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -42,6 +43,9 @@$/;"	h	modifiedFile:a/st.c
-424,6 +425,14	suckless/.suckless/st/diffs/st-scrollback-mouse-0.8.2.diff	/^@@ -424,6 +425,14 @@ bpress(XEvent *e)$/;"	h	modifiedFile:a/x.c
-438,7 +475,7	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -438,7 +475,7 @@ buttonpress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-439,10 +439,8	suckless/.suckless/dwm/diffs/dwm-notitle-6.2.diff	/^@@ -439,10 +439,8 @@ buttonpress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-444,7 +523,7	suckless/.suckless/dmenu/diffs/dmenu-fuzzymatch-4.6.diff	/^@@ -444,7 +523,7 @@ keypress(XKeyEvent *ev)$/;"	h	modifiedFile:a/dmenu.c
-476,8 +516,8	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -476,8 +516,8 @@ cleanup(void)$/;"	h	modifiedFile:dwm/dwm.c.orig
-477,7 +483,7	suckless/.suckless/surf/diffs/surf-git-20170323-webkit2-searchengines.diff	/^@@ -477,7 +483,7 @@ loaduri(Client *c, const Arg *a)$/;"	h	modifiedFile:a/surf.c
-479,6 +516,11	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -479,6 +516,11 @@ cleanup(void)$/;"	h	modifiedFile:a/dwm.c
-49,7 +49,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -49,7 +49,7 @@$/;"	h	modifiedFile:dwm/dwm.c.orig
-52,6 +52,10	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^@@ -52,6 +52,10 @@ static XIC xic;$/;"	h	modifiedFile:dmenu-4.6/dmenu.c
-52,8 +52,8	suckless/.suckless/dwm/diffs/dwm-uselessgap-6.1.diff	/^@@ -52,8 +52,8 @@$/;"	h	modifiedFile:dwm/dwm.c.orig
-521,7 +522,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -521,7 +522,7 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-521,7 +528,7	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -521,7 +528,7 @@ selsnap(int *x, int *y, int direction)$/;"	h	modifiedFile:a/st.c
-522,7 +522,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^@@ -522,7 +522,7 @@ clientmessage(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-524,9 +566,50	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -524,9 +566,50 @@ clearurgent(Client *c)$/;"	h	modifiedFile:a/dwm.c
-525,7 +531,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -525,7 +531,7 @@ clientmessage(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-533,7 +573,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -533,7 +573,7 @@ clientmessage(XEvent *e)$/;"	h	modifiedFile:dwm/dwm.c.orig
-536,14 +543,14	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -536,14 +543,14 @@ selsnap(int *x, int *y, int direction)$/;"	h	modifiedFile:a/st.c
-54,6 +54,8	suckless/.suckless/dwm/diffs/dwm-r1615-selfrestart.diff	/^@@ -54,6 +54,8 @@$/;"	h	modifiedFile:a/config.def.h
-551,7 +552,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -551,7 +552,6 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-552,7 +552,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^@@ -552,7 +552,6 @@ void$/;"	h	modifiedFile:a/dwm.c
-555,7 +561,8	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -555,7 +561,8 @@ void$/;"	h	modifiedFile:a/dwm.c
-564,14 +571,14	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -564,14 +571,14 @@ selsnap(int *x, int *y, int direction)$/;"	h	modifiedFile:a/st.c
-564,9 +564,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^@@ -564,9 +564,6 @@$/;"	h	modifiedFile:dwm-6.2/dwm.c
-565,9 +564,6	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^@@ -565,9 +564,6 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-568,10 +575,13	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -568,10 +575,13 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-57,12 +57,30	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -57,12 +57,30 @@$/;"	h	modifiedFile:a/dwm.c
-576,8 +659,7	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -576,8 +659,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-577,7 +617,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -577,7 +617,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:dwm/dwm.c.orig
-58,11 +58,14	suckless/.suckless/dwm/diffs/dwm-scratchpad-20170207-bb3bd6f.diff	/^@@ -58,11 +58,14 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-586,7 +665,7	suckless/.suckless/dmenu/diffs/dmenu-fuzzymatch-4.6.diff	/^@@ -586,7 +665,7 @@ setup(void)$/;"	h	modifiedFile:a/dmenu.c
-602,13 +609,13	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -602,13 +609,13 @@ getsel(void)$/;"	h	modifiedFile:a/st.c
-608,7 +715,7	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^@@ -608,7 +715,7 @@ setup(void)$/;"	h	modifiedFile:dmenu-4.6/dmenu.c
-616,32 +627,63	suckless/.suckless/surf/diffs/surf-0.1-chromebar.diff	/^@@ -616,32 +627,63 @@ loadstatuschange(WebKitWebView *view, GParamSpec *pspec, Client *c) {$/;"	h	modifiedFile:a/surf.c
-623,7 +663,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -623,7 +663,7 @@ configurerequest(XEvent *e)$/;"	h	modifiedFile:dwm/dwm.c.orig
-632,6 +643,7	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -632,6 +643,7 @@ Monitor *$/;"	h	modifiedFile:a/dwm.c
-633,6 +740,8	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^@@ -633,6 +740,8 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:dmenu-4.6/dmenu.c
-64,8 +64,8	suckless/.suckless/dwm/diffs/dwm-notitle-6.2.diff	/^@@ -64,8 +64,8 @@ enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	h	modifiedFile:a/dwm.c
-642,6 +654,20	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -642,6 +654,20 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-643,10 +683,31	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -643,10 +683,31 @@ configurerequest(XEvent *e)$/;"	h	modifiedFile:dwm/dwm.c.orig
-645,6 +646,23	suckless/.suckless/dwm/diffs/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -645,6 +646,23 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-653,6 +709,9	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -653,6 +709,9 @@ destroynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-661,6 +743,11	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -661,6 +743,11 @@ destroynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-665,6 +774,7	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^@@ -665,6 +774,7 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:dmenu-4.6/dmenu.c
-672,7 +733,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -672,7 +733,7 @@ detach(Client *c)$/;"	h	modifiedFile:dwm/dwm.c.orig
-681,11 +742,11	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -681,11 +742,11 @@ detachstack(Client *c)$/;"	h	modifiedFile:dwm/dwm.c.orig
-69,6 +71,7	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^@@ -69,6 +71,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.h
-71,6 +72,12	suckless/.suckless/surf/diffs/surf-0.1-chromebar.diff	/^@@ -71,6 +72,12 @@ typedef struct {$/;"	h	modifiedFile:a/surf.c
-710,6 +797,7	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -710,6 +797,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-721,7 +782,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -721,7 +782,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:dwm/dwm.c.orig
-729,15 +727,8	suckless/.suckless/dwm/diffs/dwm-notitle-6.2.diff	/^@@ -729,15 +727,8 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-732,6 +820,9	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -732,6 +820,9 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-75,6 +75,13	suckless/.suckless/surf/diffs/surf-git-20160127-searchengines.diff	/^@@ -75,6 +75,13 @@ static SiteStyle styles[] = {$/;"	h	modifiedFile:a/config.def.h
-75,6 +75,13	suckless/.suckless/surf/surf-git-20160127-searchengines.diff	/^@@ -75,6 +75,13 @@ static SiteStyle styles[] = {$/;"	h	modifiedFile:a/config.def.h
-76,6 +76,13	suckless/.suckless/st/diffs/st-scrollback-mouse-0.8.2.diff	/^@@ -76,6 +76,13 @@ typedef union {$/;"	h	modifiedFile:a/st.h
-76,6 +77,8	suckless/.suckless/dwm/diffs/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -76,6 +77,8 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-760,6 +851,7	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -760,6 +851,7 @@ drawbars(void)$/;"	h	modifiedFile:a/dwm.c
-787,8 +879,11	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -787,8 +879,11 @@ expose(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-796,8 +857,8	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -796,8 +857,8 @@ expose(XEvent *e)$/;"	h	modifiedFile:dwm/dwm.c.orig
-80,6 +80,7	suckless/.suckless/st/diffs/st-externalpipe-0.8.2.diff	/^@@ -80,6 +80,7 @@ void die(const char *, ...);$/;"	h	modifiedFile:a/st.h
-80,6 +80,8	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -80,6 +80,8 @@ void die(const char *, ...);$/;"	h	modifiedFile:a/st.h
-83,6 +83,7	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -83,6 +83,7 @@ typedef struct {$/;"	h	modifiedFile:dwm/dwm.c.orig
-831,6 +838,9	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^@@ -831,6 +838,9 @@ void$/;"	h	modifiedFile:a/st.c
-840,8 +846,7	suckless/.suckless/surf/diffs/surf-git-20160127-searchengines.diff	/^@@ -840,8 +846,7 @@ loaduri(Client *c, const Arg *arg)$/;"	h	modifiedFile:a/surf.c
-840,8 +846,7	suckless/.suckless/surf/surf-git-20160127-searchengines.diff	/^@@ -840,8 +846,7 @@ loaduri(Client *c, const Arg *arg)$/;"	h	modifiedFile:a/surf.c
-852,16 +913,16	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^@@ -852,16 +913,16 @@ focusstack(const Arg *arg)$/;"	h	modifiedFile:dwm/dwm.c.orig
-875,10 +970,17	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -875,10 +970,17 @@ getatomprop(Client *c, Atom prop)$/;"	h	modifiedFile:a/dwm.c
-89,6 +91,7	suckless/.suckless/dwm/diffs/dwm-r1615-selfrestart.diff	/^@@ -89,6 +91,7 @@$/;"	h	modifiedFile:a/config.def.h
-912,6 +1014,15	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^@@ -912,6 +1014,15 @@ getstate(Window w)$/;"	h	modifiedFile:a/dwm.c
-912,6 +954,196	suckless/.suckless/surf/diffs/surf-0.1-chromebar.diff	/^@@ -912,6 +954,196 @@ popupactivate(GtkMenuItem *menu, Client *c) {$/;"	h	modifiedFile:a/surf.c
-92,6 +92,11	suckless/.suckless/surf/diffs/surf-git-20160127-searchengines.diff	/^@@ -92,6 +92,11 @@ typedef struct {$/;"	h	modifiedFile:a/surf.c
-92,6 +92,11	suckless/.suckless/surf/surf-git-20160127-searchengines.diff	/^@@ -92,6 +92,11 @@ typedef struct {$/;"	h	modifiedFile:a/surf.c
-92,6 +92,12	suckless/.suckless/dwm/diffs/dwm-cyclelayouts-20180524-6.2.diff	/^@@ -92,6 +92,12 @@ Sets monocle layout.$/;"	h	modifiedFile:a/dwm.1
-92,6 +92,12	suckless/.suckless/surf/diffs/surf-0.7-webkit2-searchengines.diff	/^@@ -92,6 +92,12 @@ typedef struct {$/;"	h	modifiedFile:a/surf.c
-93,9 +95,11	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^@@ -93,9 +95,11 @@ struct Client {$/;"	h	modifiedFile:a/dwm.c
-95,6 +95,7	suckless/.suckless/st/diffs/st-scrollback-mouse-altscreen-20190131-e23acb9.diff	/^@@ -95,6 +95,7 @@ void sendbreak(const Arg *);$/;"	h	modifiedFile:a/st.h
-968,7 +994,7	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^@@ -968,7 +994,7 @@ grabkeys(void)$/;"	h	modifiedFile:a/dwm.c
.c.o	suckless/.suckless/dmenu/Makefile	/^.c.o:$/;"	t
.c.o	suckless/.suckless/dwm/Makefile	/^.c.o:$/;"	t
.c.o	suckless/.suckless/st/Makefile	/^.c.o:$/;"	t
.c.o	suckless/.suckless/surf/Makefile	/^.c.o:$/;"	t
.c.o	suckless/.suckless/tabbed/Makefile	/^.c.o:$/;"	t
.o	suckless/.suckless/tabbed/Makefile	/^.o:$/;"	t
0	weechat/.weechat/weechat.conf	/^meta-0 = "\/buffer *10"$/;"	k	section:key
1	weechat/.weechat/weechat.conf	/^meta-1 = "\/buffer *1"$/;"	k	section:key
2	weechat/.weechat/weechat.conf	/^meta-2 = "\/buffer *2"$/;"	k	section:key
3	weechat/.weechat/weechat.conf	/^meta-3 = "\/buffer *3"$/;"	k	section:key
3A	weechat/.weechat/weechat.conf	/^meta-wmeta2-1;3A = "\/window up"$/;"	k	section:key
3A	weechat/.weechat/weechat.conf	/^meta2-1;3A = "\/buffer -1"$/;"	k	section:key
3A	weechat/.weechat/weechat.conf	/^meta2-1;3A = "\/cursor move area_up"$/;"	k	section:key_cursor
3B	weechat/.weechat/weechat.conf	/^meta-wmeta2-1;3B = "\/window down"$/;"	k	section:key
3B	weechat/.weechat/weechat.conf	/^meta2-1;3B = "\/buffer +1"$/;"	k	section:key
3B	weechat/.weechat/weechat.conf	/^meta2-1;3B = "\/cursor move area_down"$/;"	k	section:key_cursor
3C	weechat/.weechat/weechat.conf	/^meta-wmeta2-1;3C = "\/window right"$/;"	k	section:key
3C	weechat/.weechat/weechat.conf	/^meta2-1;3C = "\/buffer +1"$/;"	k	section:key
3C	weechat/.weechat/weechat.conf	/^meta2-1;3C = "\/cursor move area_right"$/;"	k	section:key_cursor
3D	weechat/.weechat/weechat.conf	/^meta-wmeta2-1;3D = "\/window left"$/;"	k	section:key
3D	weechat/.weechat/weechat.conf	/^meta2-1;3D = "\/buffer -1"$/;"	k	section:key
3D	weechat/.weechat/weechat.conf	/^meta2-1;3D = "\/cursor move area_left"$/;"	k	section:key_cursor
3F	weechat/.weechat/weechat.conf	/^meta2-1;3F = "\/window scroll_bottom"$/;"	k	section:key
3H	weechat/.weechat/weechat.conf	/^meta2-1;3H = "\/window scroll_top"$/;"	k	section:key
3P	weechat/.weechat/weechat.conf	/^meta2-1;3P = "\/bar scroll buflist * b"$/;"	k	section:key
3Q	weechat/.weechat/weechat.conf	/^meta2-1;3Q = "\/bar scroll buflist * e"$/;"	k	section:key
4	weechat/.weechat/weechat.conf	/^meta-4 = "\/buffer *4"$/;"	k	section:key
5	weechat/.weechat/weechat.conf	/^meta-5 = "\/buffer *5"$/;"	k	section:key
5A	weechat/.weechat/weechat.conf	/^meta2-1;5A = "\/input history_global_previous"$/;"	k	section:key
5B	weechat/.weechat/weechat.conf	/^meta2-1;5B = "\/input history_global_next"$/;"	k	section:key
5C	weechat/.weechat/weechat.conf	/^meta2-1;5C = "\/input move_next_word"$/;"	k	section:key
5D	weechat/.weechat/weechat.conf	/^meta2-1;5D = "\/input move_previous_word"$/;"	k	section:key
5P	weechat/.weechat/weechat.conf	/^meta2-1;5P = "\/bar scroll buflist * -100%"$/;"	k	section:key
5Q	weechat/.weechat/weechat.conf	/^meta2-1;5Q = "\/bar scroll buflist * +100%"$/;"	k	section:key
6	weechat/.weechat/weechat.conf	/^meta-6 = "\/buffer *6"$/;"	k	section:key
7	weechat/.weechat/weechat.conf	/^meta-7 = "\/buffer *7"$/;"	k	section:key
8	weechat/.weechat/weechat.conf	/^meta-8 = "\/buffer *8"$/;"	k	section:key
9	weechat/.weechat/weechat.conf	/^meta-9 = "\/buffer *9"$/;"	k	section:key
<C-f>	config/.config/nvim/init.vim	/^inoremap <C-f> <Esc>: silent exec '.!inkscape-figures create "'.getline('.').'" "'.b:vimtex.root/;"	m
<C-f>	config/.config/nvim/init.vim	/^nnoremap <C-f> : silent exec '!inkscape-figures edit "'.b:vimtex.root.'\/figures\/" > \/dev\/nul/;"	m
<C-l>	config/.config/nvim/init.vim	/^inoremap <C-l> <c-g>u<Esc>[s1z=`]a<c-g>u$/;"	m
<F4>	config/.config/nvim/init.vim	/^nmap <F4> <Plug>(JavaComplete-Imports-AddSmart)$/;"	m
<F5>	config/.config/nvim/init.vim	/^map <F5> :setlocal spell! spelllang=da,en_us<CR>$/;"	m
<Leader>m	config/.config/nvim/ftplugin/pandoc.vim	/^noremap <Leader>m :make <CR>$/;"	m
<Leader>m	config/.config/nvim/ftplugin/sh.vim	/^noremap <Leader>m :w !bash <CR>$/;"	m
<Leader>m	config/.config/nvim/ftplugin/tex.vim	/^noremap <Leader>m :VimtexCompile <CR>$/;"	m
<Leader>m	config/.config/nvim/init.vim	/^noremap <Leader>m :make <CR>$/;"	m
<Leader>p	config/.config/nvim/init.vim	/^noremap <Leader>p :! nohup zathura .\/main.pdf &<CR><CR>$/;"	m
<cr>	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<img src="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.png" height="75" alt="vim-plug">[![travis-ci](https://travis-ci.org/junegunn/vim-plug.svg?branch=master)](https://travis-ci.org/junegunn/vim-plug)	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^<img src="https:\/\/raw.githubusercontent.com\/junegunn\/vim-plug\/master\/plug.png" height="75"/;"	c
<plug>(plug-preview)	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
<space>	config/.config/nvim/init.vim	/^nnoremap <space> za$/;"	m
A	weechat/.weechat/weechat.conf	/^ctrl-A = "\/input move_beginning_of_line"$/;"	k	section:key
A	weechat/.weechat/weechat.conf	/^meta-meta2-A = "\/buffer -1"$/;"	k	section:key
A	weechat/.weechat/weechat.conf	/^meta-meta2-A = "\/cursor move area_up"$/;"	k	section:key_cursor
A	weechat/.weechat/weechat.conf	/^meta-wmeta-meta2-A = "\/window up"$/;"	k	section:key
A	weechat/.weechat/weechat.conf	/^meta2-A = "\/cursor move up"$/;"	k	section:key_cursor
A	weechat/.weechat/weechat.conf	/^meta2-A = "\/input history_previous"$/;"	k	section:key
A	weechat/.weechat/weechat.conf	/^meta2-A = "\/input search_previous"$/;"	k	section:key_search
AAWAY	weechat/.weechat/alias.conf	/^AAWAY = "allserv \/away"$/;"	k	section:cmd
AME	weechat/.weechat/alias.conf	/^AME = "allchan \/me"$/;"	k	section:cmd
AMSG	weechat/.weechat/alias.conf	/^AMSG = "allchan \/msg *"$/;"	k	section:cmd
ANICK	weechat/.weechat/alias.conf	/^ANICK = "allserv \/nick"$/;"	k	section:cmd
ARGBEGIN	suckless/.suckless/dmenu/arg.h	/^#define ARGBEGIN	/;"	d
ARGBEGIN	suckless/.suckless/st/arg.h	/^#define ARGBEGIN	/;"	d
ARGBEGIN	suckless/.suckless/surf/arg.h	/^#define ARGBEGIN	/;"	d
ARGBEGIN	suckless/.suckless/tabbed/arg.h	/^#define ARGBEGIN	/;"	d
ARGC	suckless/.suckless/dmenu/arg.h	/^#define ARGC(/;"	d
ARGC	suckless/.suckless/st/arg.h	/^#define ARGC(/;"	d
ARGC	suckless/.suckless/surf/arg.h	/^#define ARGC(/;"	d
ARGC	suckless/.suckless/tabbed/arg.h	/^#define ARGC(/;"	d
ARGEND	suckless/.suckless/dmenu/arg.h	/^#define ARGEND	/;"	d
ARGEND	suckless/.suckless/st/arg.h	/^#define ARGEND	/;"	d
ARGEND	suckless/.suckless/surf/arg.h	/^#define ARGEND	/;"	d
ARGEND	suckless/.suckless/tabbed/arg.h	/^#define ARGEND	/;"	d
ARGF	suckless/.suckless/dmenu/arg.h	/^#define ARGF(/;"	d
ARGF	suckless/.suckless/st/arg.h	/^#define ARGF(/;"	d
ARGF	suckless/.suckless/surf/arg.h	/^#define ARGF(/;"	d
ARGF	suckless/.suckless/tabbed/arg.h	/^#define ARGF(/;"	d
ARG_H__	suckless/.suckless/dmenu/arg.h	/^#define ARG_H__$/;"	d
ARG_H__	suckless/.suckless/st/arg.h	/^#define ARG_H__$/;"	d
ARG_H__	suckless/.suckless/surf/arg.h	/^#define ARG_H__$/;"	d
ARG_H__	suckless/.suckless/tabbed/arg.h	/^#define ARG_H__$/;"	d
ATTRCMP	suckless/.suckless/st/st.h	/^#define ATTRCMP(/;"	d
ATTR_BLINK	suckless/.suckless/st/st.h	/^	ATTR_BLINK      = 1 << 4,$/;"	e	enum:glyph_attribute
ATTR_BOLD	suckless/.suckless/st/st.h	/^	ATTR_BOLD       = 1 << 0,$/;"	e	enum:glyph_attribute
ATTR_BOLD_FAINT	suckless/.suckless/st/st.h	/^	ATTR_BOLD_FAINT = ATTR_BOLD | ATTR_FAINT,$/;"	e	enum:glyph_attribute
ATTR_FAINT	suckless/.suckless/st/st.h	/^	ATTR_FAINT      = 1 << 1,$/;"	e	enum:glyph_attribute
ATTR_INVISIBLE	suckless/.suckless/st/st.h	/^	ATTR_INVISIBLE  = 1 << 6,$/;"	e	enum:glyph_attribute
ATTR_ITALIC	suckless/.suckless/st/st.h	/^	ATTR_ITALIC     = 1 << 2,$/;"	e	enum:glyph_attribute
ATTR_NULL	suckless/.suckless/st/st.h	/^	ATTR_NULL       = 0,$/;"	e	enum:glyph_attribute
ATTR_REVERSE	suckless/.suckless/st/st.h	/^	ATTR_REVERSE    = 1 << 5,$/;"	e	enum:glyph_attribute
ATTR_STRUCK	suckless/.suckless/st/st.h	/^	ATTR_STRUCK     = 1 << 7,$/;"	e	enum:glyph_attribute
ATTR_UNDERLINE	suckless/.suckless/st/st.h	/^	ATTR_UNDERLINE  = 1 << 3,$/;"	e	enum:glyph_attribute
ATTR_WDUMMY	suckless/.suckless/st/st.h	/^	ATTR_WDUMMY     = 1 << 10,$/;"	e	enum:glyph_attribute
ATTR_WIDE	suckless/.suckless/st/st.h	/^	ATTR_WIDE       = 1 << 9,$/;"	e	enum:glyph_attribute
ATTR_WRAP	suckless/.suckless/st/st.h	/^	ATTR_WRAP       = 1 << 8,$/;"	e	enum:glyph_attribute
AUTHORS	suckless/.suckless/st/st.1	/^.SH AUTHORS$/;"	s	title:ST
AUTHORS	suckless/.suckless/tabbed/tabbed.1	/^.SH AUTHORS$/;"	s	title:TABBED
AUTHORS	suckless/.suckless/tabbed/xembed.1	/^.SH AUTHORS$/;"	s	title:XEMBED
AcceleratedCanvas	suckless/.suckless/surf/surf.c	/^	AcceleratedCanvas,$/;"	e	enum:__anonb95973ab0303	file:
AccessMicrophone	suckless/.suckless/surf/surf.c	/^	AccessMicrophone,$/;"	e	enum:__anonb95973ab0303	file:
AccessWebcam	suckless/.suckless/surf/surf.c	/^	AccessWebcam,$/;"	e	enum:__anonb95973ab0303	file:
Arg	suckless/.suckless/dwm/dwm.c	/^} Arg;$/;"	t	typeref:union:__anon3555889b060a	file:
Arg	suckless/.suckless/st/st.h	/^} Arg;$/;"	t	typeref:union:__anon140a125e020a
Arg	suckless/.suckless/surf/surf.c	/^} Arg;$/;"	t	typeref:union:__anonb95973ab040a	file:
Arg	suckless/.suckless/tabbed/tabbed.c	/^} Arg;$/;"	t	typeref:union:__anon0f72b96f030a	file:
Arg arg	suckless/.suckless/st/diffs/.tmux.conf	/^+	Arg arg = (Arg) { .i = term.scr };$/;"	k
Articles	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Articles$/;"	S
AtomFind	suckless/.suckless/surf/surf.c	/^enum { AtomFind, AtomGo, AtomUri, AtomLast };$/;"	e	enum:__anonb95973ab0103	file:
AtomGo	suckless/.suckless/surf/surf.c	/^enum { AtomFind, AtomGo, AtomUri, AtomLast };$/;"	e	enum:__anonb95973ab0103	file:
AtomLast	suckless/.suckless/surf/surf.c	/^enum { AtomFind, AtomGo, AtomUri, AtomLast };$/;"	e	enum:__anonb95973ab0103	file:
AtomUri	suckless/.suckless/surf/surf.c	/^enum { AtomFind, AtomGo, AtomUri, AtomLast };$/;"	e	enum:__anonb95973ab0103	file:
AutoGroup	config/.config/nvim/init.vim	/^		augroup AutoGroup$/;"	a
Autocmd	config/.config/nvim/init.vim	/^		command! -nargs=* Autocmd autocmd AutoGroup <args>$/;"	c
AutocmdFT	config/.config/nvim/init.vim	/^		command! -nargs=* AutocmdFT autocmd AutoGroup FileType <args>$/;"	c
B	weechat/.weechat/weechat.conf	/^ctrl-B = "\/input move_previous_char"$/;"	k	section:key
B	weechat/.weechat/weechat.conf	/^meta-meta2-B = "\/buffer +1"$/;"	k	section:key
B	weechat/.weechat/weechat.conf	/^meta-meta2-B = "\/cursor move area_down"$/;"	k	section:key_cursor
B	weechat/.weechat/weechat.conf	/^meta-wmeta-meta2-B = "\/window down"$/;"	k	section:key
B	weechat/.weechat/weechat.conf	/^meta2-B = "\/cursor move down"$/;"	k	section:key_cursor
B	weechat/.weechat/weechat.conf	/^meta2-B = "\/input history_next"$/;"	k	section:key
B	weechat/.weechat/weechat.conf	/^meta2-B = "\/input search_next"$/;"	k	section:key_search
BATT	bin/.bin/dwmbar	/^function BATT() {$/;"	f
BEEP	weechat/.weechat/alias.conf	/^BEEP = "print -beep"$/;"	k	section:cmd
BETWEEN	suckless/.suckless/dmenu/util.h	/^#define BETWEEN(/;"	d
BETWEEN	suckless/.suckless/dwm/util.h	/^#define BETWEEN(/;"	d
BETWEEN	suckless/.suckless/st/st.h	/^#define BETWEEN(/;"	d
BIN	suckless/.suckless/tabbed/Makefile	/^BIN = ${OBJ:.o=}$/;"	m
BUGS	suckless/.suckless/dwm/dwm.1	/^.SH BUGS$/;"	s	title:DWM
BUGS	suckless/.suckless/st/st.1	/^.SH BUGS$/;"	s	title:ST
BUGS	suckless/.suckless/surf/surf.1	/^.SH BUGS$/;"	s	title:SURF
BUGS	suckless/.suckless/tabbed/tabbed.1	/^.SH BUGS$/;"	s	title:TABBED
BUGS	suckless/.suckless/tabbed/xembed.1	/^.SH BUGS$/;"	s	title:XEMBED
BUTTONMASK	suckless/.suckless/dwm/dwm.c	/^#define BUTTONMASK /;"	d	file:
BYE	weechat/.weechat/alias.conf	/^BYE = "quit"$/;"	k	section:cmd
Before Submitting	config/.config/nvim/plugged/vim-plug/autoload/.github/ISSUE_TEMPLATE.md	/^### Before Submitting$/;"	S
Button	suckless/.suckless/dwm/dwm.c	/^} Button;$/;"	t	typeref:struct:__anon3555889b0708	file:
Button	suckless/.suckless/surf/surf.c	/^} Button;$/;"	t	typeref:struct:__anonb95973ab0708	file:
C	weechat/.weechat/alias.conf	/^C = "buffer clear"$/;"	k	section:cmd
C	weechat/.weechat/weechat.conf	/^meta-meta2-C = "\/buffer +1"$/;"	k	section:key
C	weechat/.weechat/weechat.conf	/^meta-meta2-C = "\/cursor move area_right"$/;"	k	section:key_cursor
C	weechat/.weechat/weechat.conf	/^meta-wmeta-meta2-C = "\/window right"$/;"	k	section:key
C	weechat/.weechat/weechat.conf	/^meta2-C = "\/cursor move right"$/;"	k	section:key_cursor
C	weechat/.weechat/weechat.conf	/^meta2-C = "\/input move_next_char"$/;"	k	section:key
CC	suckless/.suckless/dmenu/config.mk	/^CC = cc$/;"	m
CC	suckless/.suckless/dwm/config.mk	/^CC = cc$/;"	m
CC	suckless/.suckless/tabbed/config.mk	/^CC = cc$/;"	m
CFLAGS	suckless/.suckless/dmenu/config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Os $(INCS) $(CPPFLAGS)$/;"	m
CFLAGS	suckless/.suckless/dwm/config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Os ${INCS} ${CPPFLAGS}$/;"	m
CFLAGS	suckless/.suckless/tabbed/config.mk	/^CFLAGS = -std=c99 -pedantic -Wall -Os ${INCS} ${CPPFLAGS}$/;"	m
CHAT	weechat/.weechat/alias.conf	/^CHAT = "dcc chat"$/;"	k	section:cmd
CL	weechat/.weechat/alias.conf	/^CL = "buffer clear"$/;"	k	section:cmd
CLEANMASK	suckless/.suckless/dwm/dwm.c	/^#define CLEANMASK(/;"	d	file:
CLEANMASK	suckless/.suckless/surf/surf.c	/^#define CLEANMASK(/;"	d	file:
CLEANMASK	suckless/.suckless/tabbed/tabbed.c	/^#define CLEANMASK(/;"	d	file:
CLOSE	weechat/.weechat/alias.conf	/^CLOSE = "buffer close"$/;"	k	section:cmd
COBJ	suckless/.suckless/surf/Makefile	/^COBJ = $(CSRC:.c=.o)$/;"	m
CPPFLAGS	suckless/.suckless/dmenu/config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_XOPEN_SOURCE=700 -D_POSIX_C_SOURCE=200809L -DVERSI/;"	m
CPPFLAGS	suckless/.suckless/dwm/config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=2 -DVERSION=\\"${VERSION}\\" ${XINE/;"	m
CPPFLAGS	suckless/.suckless/surf/config.mk	/^CPPFLAGS = -DVERSION=\\"$(VERSION)\\" -DWEBEXTDIR=\\"$(LIBDIR)\\" \\$/;"	m
CPPFLAGS	suckless/.suckless/tabbed/config.mk	/^CPPFLAGS = -DVERSION=\\"${VERSION}\\" -D_DEFAULT_SOURCE$/;"	m
CSIEscape	suckless/.suckless/st/st.c	/^} CSIEscape;$/;"	t	typeref:struct:__anon140a12590508	file:
CSRC	suckless/.suckless/surf/Makefile	/^CSRC = common.c$/;"	m
CS_FIN	suckless/.suckless/st/st.c	/^	CS_FIN$/;"	e	enum:charset	file:
CS_GER	suckless/.suckless/st/st.c	/^	CS_GER,$/;"	e	enum:charset	file:
CS_GRAPHIC0	suckless/.suckless/st/st.c	/^	CS_GRAPHIC0,$/;"	e	enum:charset	file:
CS_GRAPHIC1	suckless/.suckless/st/st.c	/^	CS_GRAPHIC1,$/;"	e	enum:charset	file:
CS_MULTI	suckless/.suckless/st/st.c	/^	CS_MULTI,$/;"	e	enum:charset	file:
CS_UK	suckless/.suckless/st/st.c	/^	CS_UK,$/;"	e	enum:charset	file:
CS_USA	suckless/.suckless/st/st.c	/^	CS_USA,$/;"	e	enum:charset	file:
CURSOR_DEFAULT	suckless/.suckless/st/st.c	/^	CURSOR_DEFAULT  = 0,$/;"	e	enum:cursor_state	file:
CURSOR_LOAD	suckless/.suckless/st/st.c	/^	CURSOR_LOAD$/;"	e	enum:cursor_movement	file:
CURSOR_ORIGIN	suckless/.suckless/st/st.c	/^	CURSOR_ORIGIN   = 2$/;"	e	enum:cursor_state	file:
CURSOR_SAVE	suckless/.suckless/st/st.c	/^	CURSOR_SAVE,$/;"	e	enum:cursor_movement	file:
CURSOR_WRAPNEXT	suckless/.suckless/st/st.c	/^	CURSOR_WRAPNEXT = 1,$/;"	e	enum:cursor_state	file:
CUSTOMIZATION	suckless/.suckless/dwm/dwm.1	/^.SH CUSTOMIZATION$/;"	s	title:DWM
CUSTOMIZATION	suckless/.suckless/st/st.1	/^.SH CUSTOMIZATION$/;"	s	title:ST
CUSTOMIZATION	suckless/.suckless/tabbed/tabbed.1	/^.SH CUSTOMIZATION$/;"	s	title:TABBED
C_	weechat/.weechat/weechat.conf	/^ctrl-C_ = "\/input insert \\x1F"$/;"	k	section:key
CaretBrowsing	suckless/.suckless/surf/surf.c	/^	CaretBrowsing,$/;"	e	enum:__anonb95973ab0303	file:
Cb	weechat/.weechat/weechat.conf	/^ctrl-Cb = "\/input insert \\x02"$/;"	k	section:key
Cc	weechat/.weechat/weechat.conf	/^ctrl-Cc = "\/input insert \\x03"$/;"	k	section:key
Certificate	suckless/.suckless/surf/surf.c	/^	Certificate,$/;"	e	enum:__anonb95973ab0303	file:
Ci	weechat/.weechat/weechat.conf	/^ctrl-Ci = "\/input insert \\x1D"$/;"	k	section:key
Client	suckless/.suckless/dwm/dwm.c	/^struct Client {$/;"	s	file:
Client	suckless/.suckless/dwm/dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
Client	suckless/.suckless/surf/surf.c	/^typedef struct Client {$/;"	s	file:
Client	suckless/.suckless/surf/surf.c	/^} Client;$/;"	t	typeref:struct:Client	file:
Client	suckless/.suckless/tabbed/tabbed.c	/^} Client;$/;"	t	typeref:struct:__anon0f72b96f0708	file:
ClkClientWin	suckless/.suckless/dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkClientWin,$/;"	e	enum:__anon3555889b0503	file:
ClkLast	suckless/.suckless/dwm/dwm.c	/^       ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon3555889b0503	file:
ClkLtSymbol	suckless/.suckless/dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkClientWin,$/;"	e	enum:__anon3555889b0503	file:
ClkRootWin	suckless/.suckless/dwm/dwm.c	/^       ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon3555889b0503	file:
ClkStatusText	suckless/.suckless/dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkClientWin,$/;"	e	enum:__anon3555889b0503	file:
ClkTagBar	suckless/.suckless/dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkClientWin,$/;"	e	enum:__anon3555889b0503	file:
Clr	suckless/.suckless/dmenu/drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
Clr	suckless/.suckless/dwm/drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
Co	weechat/.weechat/weechat.conf	/^ctrl-Co = "\/input insert \\x0F"$/;"	k	section:key
ColBG	suckless/.suckless/tabbed/tabbed.c	/^enum { ColFG, ColBG, ColLast };       \/* color *\/$/;"	e	enum:__anon0f72b96f0103	file:
ColBg	suckless/.suckless/dmenu/drw.h	/^enum { ColFg, ColBg }; \/* Clr scheme index *\/$/;"	e	enum:__anonacedaf960203
ColBg	suckless/.suckless/dwm/drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon3552f5450203
ColBorder	suckless/.suckless/dwm/drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon3552f5450203
ColFG	suckless/.suckless/tabbed/tabbed.c	/^enum { ColFG, ColBG, ColLast };       \/* color *\/$/;"	e	enum:__anon0f72b96f0103	file:
ColFg	suckless/.suckless/dmenu/drw.h	/^enum { ColFg, ColBg }; \/* Clr scheme index *\/$/;"	e	enum:__anonacedaf960203
ColFg	suckless/.suckless/dwm/drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon3552f5450203
ColLast	suckless/.suckless/tabbed/tabbed.c	/^enum { ColFG, ColBG, ColLast };       \/* color *\/$/;"	e	enum:__anon0f72b96f0103	file:
Color	suckless/.suckless/st/x.c	/^typedef XftColor Color;$/;"	t	typeref:typename:XftColor	file:
ColorOverrides	config/.config/nvim/init.vim	/^augroup ColorOverrides$/;"	a
Commands	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Commands$/;"	S
CookiePolicies	suckless/.suckless/surf/surf.c	/^	CookiePolicies,$/;"	e	enum:__anonb95973ab0303	file:
Cur	suckless/.suckless/dmenu/drw.h	/^} Cur;$/;"	t	typeref:struct:__anonacedaf960108
Cur	suckless/.suckless/dwm/drw.h	/^} Cur;$/;"	t	typeref:struct:__anon3552f5450108
CurLast	suckless/.suckless/dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon3555889b0103	file:
CurMove	suckless/.suckless/dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon3555889b0103	file:
CurNormal	suckless/.suckless/dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon3555889b0103	file:
CurResize	suckless/.suckless/dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon3555889b0103	file:
Cv	weechat/.weechat/weechat.conf	/^ctrl-Cv = "\/input insert \\x16"$/;"	k	section:key
D	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
D	weechat/.weechat/weechat.conf	/^ctrl-D = "\/input delete_next_char"$/;"	k	section:key
D	weechat/.weechat/weechat.conf	/^meta-meta2-D = "\/buffer -1"$/;"	k	section:key
D	weechat/.weechat/weechat.conf	/^meta-meta2-D = "\/cursor move area_left"$/;"	k	section:key_cursor
D	weechat/.weechat/weechat.conf	/^meta-wmeta-meta2-D = "\/window left"$/;"	k	section:key
D	weechat/.weechat/weechat.conf	/^meta2-D = "\/cursor move left"$/;"	k	section:key_cursor
D	weechat/.weechat/weechat.conf	/^meta2-D = "\/input move_previous_char"$/;"	k	section:key
DATE	bin/.bin/dwmbar	/^function DATE() {$/;"	f
DC	suckless/.suckless/st/x.c	/^} DC;$/;"	t	typeref:struct:__anon6574b7aa0808	file:
DC	suckless/.suckless/tabbed/tabbed.c	/^} DC; \/* draw context *\/$/;"	t	typeref:struct:__anon0f72b96f0508	file:
DEFAULT	suckless/.suckless/st/st.h	/^#define DEFAULT(/;"	d
DELIMITER	bin/.bin/pp	/^    define('DELIMITER', "\\r\\n\\r\\n");$/;"	d
DESCRIPTION	suckless/.suckless/dmenu/dmenu.1	/^.SH DESCRIPTION$/;"	s	title:DMENU
DESCRIPTION	suckless/.suckless/dmenu/stest.1	/^.SH DESCRIPTION$/;"	s	title:STEST
DESCRIPTION	suckless/.suckless/dwm/dwm.1	/^.SH DESCRIPTION$/;"	s	title:DWM
DESCRIPTION	suckless/.suckless/st/st.1	/^.SH DESCRIPTION$/;"	s	title:ST
DESCRIPTION	suckless/.suckless/surf/surf.1	/^.SH DESCRIPTION$/;"	s	title:SURF
DESCRIPTION	suckless/.suckless/tabbed/tabbed.1	/^.SH DESCRIPTION$/;"	s	title:TABBED
DESCRIPTION	suckless/.suckless/tabbed/xembed.1	/^.SH DESCRIPTION$/;"	s	title:XEMBED
DIVCEIL	suckless/.suckless/st/st.h	/^#define DIVCEIL(/;"	d
DMENU	suckless/.suckless/dmenu/dmenu.1	/^.TH DMENU 1 dmenu\\-VERSION$/;"	t
DNSPrefetch	suckless/.suckless/surf/surf.c	/^	DNSPrefetch,$/;"	e	enum:__anonb95973ab0303	file:
DOC	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^  cat > "$PLUG_FIXTURES\/xxx\/doc\/xxx.txt" << DOC$/;"	h
DOC	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^  cat > "$PLUG_FIXTURES\/yyy\/rtp\/doc\/yyy.txt" << DOC$/;"	h
DOWNLOAD	suckless/.suckless/surf/config.def.h	/^#define DOWNLOAD(/;"	d
DOWNLOAD	suckless/.suckless/surf/config.h	/^#define DOWNLOAD(/;"	d
DWM	suckless/.suckless/dwm/dwm.1	/^.TH DWM 1 dwm\\-VERSION$/;"	t
DefaultCharset	suckless/.suckless/surf/surf.c	/^	DefaultCharset,$/;"	e	enum:__anonb95973ab0303	file:
Description	README.md	/^### Description$/;"	S
DiskCache	suckless/.suckless/surf/surf.c	/^	DiskCache,$/;"	e	enum:__anonb95973ab0303	file:
Draw	suckless/.suckless/st/x.c	/^typedef XftDraw *Draw;$/;"	t	typeref:typename:XftDraw *	file:
Drw	suckless/.suckless/dmenu/drw.h	/^} Drw;$/;"	t	typeref:struct:__anonacedaf960308
Drw	suckless/.suckless/dwm/drw.h	/^} Drw;$/;"	t	typeref:struct:__anon3552f5450308
E	weechat/.weechat/weechat.conf	/^ctrl-E = "\/input move_end_of_line"$/;"	k	section:key
EARGF	suckless/.suckless/dmenu/arg.h	/^#define EARGF(/;"	d
EARGF	suckless/.suckless/st/arg.h	/^#define EARGF(/;"	d
EARGF	suckless/.suckless/surf/arg.h	/^#define EARGF(/;"	d
EARGF	suckless/.suckless/tabbed/arg.h	/^#define EARGF(/;"	d
ENVIRONMENT	suckless/.suckless/surf/surf.1	/^.SH ENVIRONMENT$/;"	s	title:SURF
EOF	bin/.bin/lastpass-dmenu	/^read -r -d '' helpoutput <<EOF$/;"	h
EOF	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^    cat > "$d\/xxx.vim" << EOF$/;"	h
ESC_ALTCHARSET	suckless/.suckless/st/st.c	/^	ESC_ALTCHARSET = 8,$/;"	e	enum:escape_state	file:
ESC_ARG_SIZ	suckless/.suckless/st/st.c	/^#define ESC_ARG_SIZ /;"	d	file:
ESC_BUF_SIZ	suckless/.suckless/st/st.c	/^#define ESC_BUF_SIZ /;"	d	file:
ESC_CSI	suckless/.suckless/st/st.c	/^	ESC_CSI        = 2,$/;"	e	enum:escape_state	file:
ESC_DCS	suckless/.suckless/st/st.c	/^	ESC_DCS        =128,$/;"	e	enum:escape_state	file:
ESC_START	suckless/.suckless/st/st.c	/^	ESC_START      = 1,$/;"	e	enum:escape_state	file:
ESC_STR	suckless/.suckless/st/st.c	/^	ESC_STR        = 4,  \/* OSC, PM, APC *\/$/;"	e	enum:escape_state	file:
ESC_STR_END	suckless/.suckless/st/st.c	/^	ESC_STR_END    = 16, \/* a final string was encountered *\/$/;"	e	enum:escape_state	file:
ESC_TEST	suckless/.suckless/st/st.c	/^	ESC_TEST       = 32, \/* Enter in test mode *\/$/;"	e	enum:escape_state	file:
ESC_UTF8	suckless/.suckless/st/st.c	/^	ESC_UTF8       = 64,$/;"	e	enum:escape_state	file:
EXAMPLE	suckless/.suckless/tabbed/xembed.1	/^.SH EXAMPLE$/;"	s	title:XEMBED
EXAMPLES	suckless/.suckless/tabbed/tabbed.1	/^.SH EXAMPLES$/;"	s	title:TABBED
EXIT	suckless/.suckless/dmenu/stest.1	/^.SH EXIT STATUS$/;"	s	title:STEST
EXIT	weechat/.weechat/alias.conf	/^EXIT = "quit"$/;"	k	section:cmd
Example	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^#### Example$/;"	t
Example: A small [sensible](https://github.com/tpope/vim-sensible) Vim configuration	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Example: A small [sensible](https:\/\/github.com\/tpope\/vim-sensible) Vim configuration$/;"	S
F	weechat/.weechat/weechat.conf	/^ctrl-F = "\/input move_next_char"$/;"	k	section:key
F	weechat/.weechat/weechat.conf	/^meta2-F = "\/input move_end_of_line"$/;"	k	section:key
FLAG	suckless/.suckless/dmenu/stest.c	/^#define FLAG(/;"	d	file:
FRC_BOLD	suckless/.suckless/st/x.c	/^	FRC_BOLD,$/;"	e	enum:__anon6574b7aa0903	file:
FRC_ITALIC	suckless/.suckless/st/x.c	/^	FRC_ITALIC,$/;"	e	enum:__anon6574b7aa0903	file:
FRC_ITALICBOLD	suckless/.suckless/st/x.c	/^	FRC_ITALICBOLD$/;"	e	enum:__anon6574b7aa0903	file:
FRC_NORMAL	suckless/.suckless/st/x.c	/^	FRC_NORMAL,$/;"	e	enum:__anon6574b7aa0903	file:
FREETYPEINC	suckless/.suckless/dmenu/config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPEINC	suckless/.suckless/dwm/config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPEINC	suckless/.suckless/tabbed/config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	suckless/.suckless/dmenu/config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
FREETYPELIBS	suckless/.suckless/dwm/config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
FREETYPELIBS	suckless/.suckless/tabbed/config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
FileURLsCrossAccess	suckless/.suckless/surf/surf.c	/^	FileURLsCrossAccess,$/;"	e	enum:__anonb95973ab0303	file:
Fnt	suckless/.suckless/dmenu/drw.h	/^typedef struct Fnt {$/;"	s
Fnt	suckless/.suckless/dmenu/drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
Fnt	suckless/.suckless/dwm/drw.h	/^typedef struct Fnt {$/;"	s
Fnt	suckless/.suckless/dwm/drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
Font	suckless/.suckless/st/x.c	/^#define Font /;"	d	file:
Font	suckless/.suckless/st/x.c	/^} Font;$/;"	t	typeref:struct:__anon6574b7aa0708	file:
FontSize	suckless/.suckless/surf/surf.c	/^	FontSize,$/;"	e	enum:__anonb95973ab0303	file:
Fontcache	suckless/.suckless/st/x.c	/^} Fontcache;$/;"	t	typeref:struct:__anon6574b7aa0a08	file:
FrameFlattening	suckless/.suckless/surf/surf.c	/^	FrameFlattening,$/;"	e	enum:__anonb95973ab0303	file:
Frequently Asked Questions	suckless/.suckless/surf/FAQ.md	/^# Frequently Asked Questions$/;"	c
G	weechat/.weechat/weechat.conf	/^meta2-G = "\/window page_down"$/;"	k	section:key
GTKINC	suckless/.suckless/surf/config.mk	/^GTKINC = `pkg-config --cflags gtk+-3.0 gcr-3 webkit2gtk-4.0`$/;"	m
GTKLIB	suckless/.suckless/surf/config.mk	/^GTKLIB = `pkg-config --libs gtk+-3.0 gcr-3 webkit2gtk-4.0`$/;"	m
Geolocation	suckless/.suckless/surf/surf.c	/^	Geolocation,$/;"	e	enum:__anonb95973ab0303	file:
Getting Help	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Getting Help$/;"	S
Global options	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Global options$/;"	S
Glyph	suckless/.suckless/st/st.h	/^#define Glyph /;"	d
Glyph	suckless/.suckless/st/st.h	/^} Glyph;$/;"	t	typeref:struct:__anon140a125e0108
GlyphFontSpec	suckless/.suckless/st/x.c	/^typedef XftGlyphFontSpec GlyphFontSpec;$/;"	t	typeref:typename:XftGlyphFontSpec	file:
H	weechat/.weechat/weechat.conf	/^ctrl-H = "\/input delete_previous_char"$/;"	k	section:key
H	weechat/.weechat/weechat.conf	/^meta2-H = "\/input move_beginning_of_line"$/;"	k	section:key
HEIGHT	suckless/.suckless/dwm/dwm.c	/^#define HEIGHT(/;"	d	file:
HISTSIZE	suckless/.suckless/st/st.c	/^#define HISTSIZE /;"	d	file:
HideBackground	suckless/.suckless/surf/surf.c	/^	HideBackground,$/;"	e	enum:__anonb95973ab0303	file:
I	weechat/.weechat/weechat.conf	/^ctrl-I = "\/input complete_next"$/;"	k	section:key
I	weechat/.weechat/weechat.conf	/^ctrl-I = "\/input search_switch_where"$/;"	k	section:key_search
I	weechat/.weechat/weechat.conf	/^meta2-I = "\/window page_up"$/;"	k	section:key
IG	weechat/.weechat/alias.conf	/^IG = "ignore"$/;"	k	section:cmd
INCS	suckless/.suckless/dmenu/config.mk	/^INCS = -I$(X11INC) -I$(FREETYPEINC)$/;"	m
INCS	suckless/.suckless/dwm/config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC}$/;"	m
INCS	suckless/.suckless/st/config.mk	/^INCS = -I$(X11INC) \\$/;"	m
INCS	suckless/.suckless/surf/config.mk	/^INCS = $(X11INC) $(GTKINC)$/;"	m
INCS	suckless/.suckless/tabbed/config.mk	/^INCS = -I. -I\/usr\/include -I$(X11INC) -I${FREETYPEINC}$/;"	m
INDICATORS	suckless/.suckless/surf/surf.1	/^.SH INDICATORS OF OPERATION$/;"	s	title:SURF
INDICATORS	suckless/.suckless/surf/surf.1	/^.SH INDICATORS OF WEB PAGE$/;"	s	title:SURF
INTERSECT	suckless/.suckless/dmenu/dmenu.c	/^#define INTERSECT(/;"	d	file:
INTERSECT	suckless/.suckless/dwm/dwm.c	/^#define INTERSECT(/;"	d	file:
ISCONTROL	suckless/.suckless/st/st.c	/^#define ISCONTROL(/;"	d	file:
ISCONTROLC0	suckless/.suckless/st/st.c	/^#define ISCONTROLC0(/;"	d	file:
ISCONTROLC1	suckless/.suckless/st/st.c	/^#define ISCONTROLC1(/;"	d	file:
ISDELIM	suckless/.suckless/st/st.c	/^#define ISDELIM(/;"	d	file:
ISSUES	suckless/.suckless/dwm/dwm.1	/^.SH ISSUES$/;"	s	title:DWM
ISVISIBLE	suckless/.suckless/dwm/dwm.c	/^#define ISVISIBLE(/;"	d	file:
IS_SET	suckless/.suckless/st/st.c	/^#define IS_SET(/;"	d	file:
IS_SET	suckless/.suckless/st/x.c	/^#define IS_SET(/;"	d	file:
IS_TRUECOL	suckless/.suckless/st/st.h	/^#define IS_TRUECOL(/;"	d
Inspector	suckless/.suckless/surf/surf.c	/^	Inspector,$/;"	e	enum:__anonb95973ab0303	file:
Installation	README.md	/^### Installation$/;"	S
Installation	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Installation$/;"	S
J	weechat/.weechat/alias.conf	/^J = "join"$/;"	k	section:cmd
J	weechat/.weechat/weechat.conf	/^ctrl-J = "\/cursor stop"$/;"	k	section:key_cursor
J	weechat/.weechat/weechat.conf	/^ctrl-J = "\/input return"$/;"	k	section:key
J	weechat/.weechat/weechat.conf	/^ctrl-J = "\/input search_stop_here"$/;"	k	section:key_search
Java	suckless/.suckless/surf/surf.c	/^	Java,$/;"	e	enum:__anonb95973ab0303	file:
JavaScript	suckless/.suckless/surf/surf.c	/^	JavaScript,$/;"	e	enum:__anonb95973ab0303	file:
K	weechat/.weechat/alias.conf	/^K = "kick"$/;"	k	section:cmd
K	weechat/.weechat/weechat.conf	/^ctrl-K = "\/input delete_end_of_line"$/;"	k	section:key
KB	weechat/.weechat/alias.conf	/^KB = "kickban"$/;"	k	section:cmd
Key	suckless/.suckless/dwm/dwm.c	/^} Key;$/;"	t	typeref:struct:__anon3555889b0808	file:
Key	suckless/.suckless/st/x.c	/^} Key;$/;"	t	typeref:struct:__anon6574b7aa0308	file:
Key	suckless/.suckless/surf/surf.c	/^} Key;$/;"	t	typeref:struct:__anonb95973ab0608	file:
Key	suckless/.suckless/tabbed/tabbed.c	/^} Key;$/;"	t	typeref:struct:__anon0f72b96f0408	file:
Keybindings	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Keybindings$/;"	S
KioskMode	suckless/.suckless/surf/surf.c	/^	KioskMode,$/;"	e	enum:__anonb95973ab0303	file:
L	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	weechat/.weechat/weechat.conf	/^ctrl-L = "\/window refresh"$/;"	k	section:key
LAYOUT	bin/.bin/dwmbar	/^function LAYOUT() {$/;"	f
LDFLAGS	suckless/.suckless/dmenu/config.mk	/^LDFLAGS  = $(LIBS)$/;"	m
LDFLAGS	suckless/.suckless/dwm/config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LDFLAGS	suckless/.suckless/tabbed/config.mk	/^LDFLAGS = -s ${LIBS}$/;"	m
LEAVE	weechat/.weechat/alias.conf	/^LEAVE = "part"$/;"	k	section:cmd
LEN	suckless/.suckless/st/st.h	/^#define LEN(/;"	d
LENGTH	suckless/.suckless/dmenu/dmenu.c	/^#define LENGTH(/;"	d	file:
LENGTH	suckless/.suckless/dwm/dwm.c	/^#define LENGTH(/;"	d	file:
LENGTH	suckless/.suckless/surf/libsurf-webext.c	/^#define LENGTH(/;"	d	file:
LENGTH	suckless/.suckless/surf/surf.c	/^#define LENGTH(/;"	d	file:
LENGTH	suckless/.suckless/tabbed/tabbed.c	/^#define LENGTH(/;"	d	file:
LIBDIR	suckless/.suckless/surf/config.mk	/^LIBDIR = $(LIBPREFIX)\/surf$/;"	m
LIBPREFIX	suckless/.suckless/surf/config.mk	/^LIBPREFIX = $(PREFIX)\/lib$/;"	m
LIBS	suckless/.suckless/dmenu/config.mk	/^LIBS = -L$(X11LIB) -lX11 $(XINERAMALIBS) $(FREETYPELIBS)$/;"	m
LIBS	suckless/.suckless/dwm/config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}$/;"	m
LIBS	suckless/.suckless/st/config.mk	/^LIBS = -L$(X11LIB) -lm -lrt -lX11 -lutil -lXft \\$/;"	m
LIBS	suckless/.suckless/surf/config.mk	/^LIBS = $(X11LIB) $(GTKLIB) -lgthread-2.0$/;"	m
LIBS	suckless/.suckless/tabbed/config.mk	/^LIBS = -L\/usr\/lib -lc -L${X11LIB} -lX11 ${FREETYPELIBS}$/;"	m
LICENSE	suckless/.suckless/st/st.1	/^.SH LICENSE$/;"	s	title:ST
LICENSE	suckless/.suckless/tabbed/tabbed.1	/^.SH LICENSE$/;"	s	title:TABBED
LICENSE	suckless/.suckless/tabbed/xembed.1	/^.SH LICENSE$/;"	s	title:XEMBED
LIMIT	suckless/.suckless/st/st.h	/^#define LIMIT(/;"	d
Layout	suckless/.suckless/dwm/dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon3555889b0908	file:
License	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### License$/;"	S
Line	suckless/.suckless/st/st.h	/^typedef Glyph *Line;$/;"	t	typeref:typename:Glyph *
LoadImages	suckless/.suckless/surf/surf.c	/^	LoadImages,$/;"	e	enum:__anonb95973ab0303	file:
M	weechat/.weechat/alias.conf	/^M = "msg"$/;"	k	section:cmd
M	weechat/.weechat/weechat.conf	/^ctrl-M = "\/cursor stop"$/;"	k	section:key_cursor
M	weechat/.weechat/weechat.conf	/^ctrl-M = "\/input return"$/;"	k	section:key
M	weechat/.weechat/weechat.conf	/^ctrl-M = "\/input search_stop_here"$/;"	k	section:key_search
MANPREFIX	suckless/.suckless/dmenu/config.mk	/^MANPREFIX = $(PREFIX)\/share\/man$/;"	m
MANPREFIX	suckless/.suckless/dwm/config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MANPREFIX	suckless/.suckless/st/config.mk	/^MANPREFIX = $(PREFIX)\/share\/man$/;"	m
MANPREFIX	suckless/.suckless/surf/config.mk	/^MANPREFIX = $(PREFIX)\/share\/man$/;"	m
MANPREFIX	suckless/.suckless/tabbed/config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MAX	suckless/.suckless/dmenu/util.h	/^#define MAX(/;"	d
MAX	suckless/.suckless/dwm/util.h	/^#define MAX(/;"	d
MAX	suckless/.suckless/st/st.h	/^#define MAX(/;"	d
MAX	suckless/.suckless/tabbed/tabbed.c	/^#define MAX(/;"	d	file:
MIN	suckless/.suckless/dmenu/util.h	/^#define MIN(/;"	d
MIN	suckless/.suckless/dwm/util.h	/^#define MIN(/;"	d
MIN	suckless/.suckless/st/st.h	/^#define MIN(/;"	d
MIN	suckless/.suckless/tabbed/tabbed.c	/^#define MIN(/;"	d	file:
MODBIT	suckless/.suckless/st/st.h	/^#define MODBIT(/;"	d
MODE_8BIT	suckless/.suckless/st/win.h	/^	MODE_8BIT        = 1 << 10,$/;"	e	enum:win_mode
MODE_ALTSCREEN	suckless/.suckless/st/st.c	/^	MODE_ALTSCREEN   = 1 << 2,$/;"	e	enum:term_mode	file:
MODE_APPCURSOR	suckless/.suckless/st/win.h	/^	MODE_APPCURSOR   = 1 << 8,$/;"	e	enum:win_mode
MODE_APPKEYPAD	suckless/.suckless/st/win.h	/^	MODE_APPKEYPAD   = 1 << 2,$/;"	e	enum:win_mode
MODE_BLINK	suckless/.suckless/st/win.h	/^	MODE_BLINK       = 1 << 11,$/;"	e	enum:win_mode
MODE_BRCKTPASTE	suckless/.suckless/st/win.h	/^	MODE_BRCKTPASTE  = 1 << 16,$/;"	e	enum:win_mode
MODE_CRLF	suckless/.suckless/st/st.c	/^	MODE_CRLF        = 1 << 3,$/;"	e	enum:term_mode	file:
MODE_ECHO	suckless/.suckless/st/st.c	/^	MODE_ECHO        = 1 << 4,$/;"	e	enum:term_mode	file:
MODE_FBLINK	suckless/.suckless/st/win.h	/^	MODE_FBLINK      = 1 << 12,$/;"	e	enum:win_mode
MODE_FOCUS	suckless/.suckless/st/win.h	/^	MODE_FOCUS       = 1 << 13,$/;"	e	enum:win_mode
MODE_FOCUSED	suckless/.suckless/st/win.h	/^	MODE_FOCUSED     = 1 << 1,$/;"	e	enum:win_mode
MODE_HIDE	suckless/.suckless/st/win.h	/^	MODE_HIDE        = 1 << 7,$/;"	e	enum:win_mode
MODE_INSERT	suckless/.suckless/st/st.c	/^	MODE_INSERT      = 1 << 1,$/;"	e	enum:term_mode	file:
MODE_KBDLOCK	suckless/.suckless/st/win.h	/^	MODE_KBDLOCK     = 1 << 6,$/;"	e	enum:win_mode
MODE_MOUSE	suckless/.suckless/st/win.h	/^	MODE_MOUSE       = MODE_MOUSEBTN|MODE_MOUSEMOTION|MODE_MOUSEX10\\$/;"	e	enum:win_mode
MODE_MOUSEBTN	suckless/.suckless/st/win.h	/^	MODE_MOUSEBTN    = 1 << 3,$/;"	e	enum:win_mode
MODE_MOUSEMANY	suckless/.suckless/st/win.h	/^	MODE_MOUSEMANY   = 1 << 15,$/;"	e	enum:win_mode
MODE_MOUSEMOTION	suckless/.suckless/st/win.h	/^	MODE_MOUSEMOTION = 1 << 4,$/;"	e	enum:win_mode
MODE_MOUSESGR	suckless/.suckless/st/win.h	/^	MODE_MOUSESGR    = 1 << 9,$/;"	e	enum:win_mode
MODE_MOUSEX10	suckless/.suckless/st/win.h	/^	MODE_MOUSEX10    = 1 << 14,$/;"	e	enum:win_mode
MODE_NUMLOCK	suckless/.suckless/st/win.h	/^	MODE_NUMLOCK     = 1 << 17,$/;"	e	enum:win_mode
MODE_PRINT	suckless/.suckless/st/st.c	/^	MODE_PRINT       = 1 << 5,$/;"	e	enum:term_mode	file:
MODE_REVERSE	suckless/.suckless/st/win.h	/^	MODE_REVERSE     = 1 << 5,$/;"	e	enum:win_mode
MODE_SIXEL	suckless/.suckless/st/st.c	/^	MODE_SIXEL       = 1 << 7,$/;"	e	enum:term_mode	file:
MODE_UTF8	suckless/.suckless/st/st.c	/^	MODE_UTF8        = 1 << 6,$/;"	e	enum:term_mode	file:
MODE_VISIBLE	suckless/.suckless/st/win.h	/^	MODE_VISIBLE     = 1 << 0,$/;"	e	enum:win_mode
MODE_WRAP	suckless/.suckless/st/st.c	/^	MODE_WRAP        = 1 << 0,$/;"	e	enum:term_mode	file:
MODKEY	suckless/.suckless/dwm/config.def.h	/^#define MODKEY /;"	d
MODKEY	suckless/.suckless/dwm/config.h	/^#define MODKEY /;"	d
MODKEY	suckless/.suckless/st/config.def.h	/^#define MODKEY /;"	d
MODKEY	suckless/.suckless/st/config.h	/^#define MODKEY /;"	d
MODKEY	suckless/.suckless/surf/config.def.h	/^#define MODKEY /;"	d
MODKEY	suckless/.suckless/surf/config.h	/^#define MODKEY /;"	d
MODKEY	suckless/.suckless/tabbed/config.def.h	/^#define MODKEY /;"	d
MODKEY	suckless/.suckless/tabbed/config.h	/^#define MODKEY /;"	d
MOUSEMASK	suckless/.suckless/dwm/dwm.c	/^#define MOUSEMASK /;"	d	file:
MSGBUF	weechat/.weechat/alias.conf	/^MSGBUF = "%(buffers_plugins_names)"$/;"	k	section:completion
MSGBUF	weechat/.weechat/alias.conf	/^MSGBUF = "command -buffer $1 * \/input send $2-"$/;"	k	section:cmd
MSGBUFSZ	suckless/.suckless/surf/common.h	/^#define MSGBUFSZ /;"	d
MUB	weechat/.weechat/alias.conf	/^MUB = "unban *"$/;"	k	section:cmd
MediaManualPlay	suckless/.suckless/surf/surf.c	/^	MediaManualPlay,$/;"	e	enum:__anonb95973ab0303	file:
Monitor	suckless/.suckless/dwm/dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	suckless/.suckless/dwm/dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
MouseKey	suckless/.suckless/st/st.h	/^} MouseKey;$/;"	t	typeref:struct:__anon140a125e0308
MouseShortcut	suckless/.suckless/st/x.c	/^} MouseShortcut;$/;"	t	typeref:struct:__anon6574b7aa0208	file:
N	weechat/.weechat/alias.conf	/^N = "names"$/;"	k	section:cmd
N	weechat/.weechat/weechat.conf	/^ctrl-N = "\/buffer +1"$/;"	k	section:key
NAME	suckless/.suckless/dmenu/dmenu.1	/^.SH NAME$/;"	s	title:DMENU
NAME	suckless/.suckless/dmenu/stest.1	/^.SH NAME$/;"	s	title:STEST
NAME	suckless/.suckless/dwm/dwm.1	/^.SH NAME$/;"	s	title:DWM
NAME	suckless/.suckless/st/st.1	/^.SH NAME$/;"	s	title:ST
NAME	suckless/.suckless/surf/surf.1	/^.SH NAME$/;"	s	title:SURF
NAME	suckless/.suckless/tabbed/tabbed.1	/^.SH NAME$/;"	s	title:TABBED
NAME	suckless/.suckless/tabbed/xembed.1	/^.SH NAME$/;"	s	title:XEMBED
Neovim	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^#### Neovim$/;"	t
NetActiveWindow	suckless/.suckless/dwm/dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon3555889b0303	file:
NetClientList	suckless/.suckless/dwm/dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon3555889b0303	file:
NetLast	suckless/.suckless/dwm/dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon3555889b0303	file:
NetSupported	suckless/.suckless/dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon3555889b0303	file:
NetWMCheck	suckless/.suckless/dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon3555889b0303	file:
NetWMFullscreen	suckless/.suckless/dwm/dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon3555889b0303	file:
NetWMName	suckless/.suckless/dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon3555889b0303	file:
NetWMState	suckless/.suckless/dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon3555889b0303	file:
NetWMWindowType	suckless/.suckless/dwm/dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon3555889b0303	file:
NetWMWindowTypeDialog	suckless/.suckless/dwm/dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon3555889b0303	file:
NumTags	suckless/.suckless/dwm/dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
OA	weechat/.weechat/weechat.conf	/^meta-OA = "\/input history_global_previous"$/;"	k	section:key
OB	weechat/.weechat/weechat.conf	/^meta-OB = "\/input history_global_next"$/;"	k	section:key
OBJ	suckless/.suckless/dmenu/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	suckless/.suckless/dwm/Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OBJ	suckless/.suckless/st/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	suckless/.suckless/surf/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	suckless/.suckless/tabbed/Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OC	weechat/.weechat/weechat.conf	/^meta-OC = "\/input move_next_word"$/;"	k	section:key
OD	weechat/.weechat/weechat.conf	/^meta-OD = "\/input move_previous_word"$/;"	k	section:key
OF	weechat/.weechat/weechat.conf	/^meta-OF = "\/input move_end_of_line"$/;"	k	section:key
OH	weechat/.weechat/weechat.conf	/^meta-OH = "\/input move_beginning_of_line"$/;"	k	section:key
OP	weechat/.weechat/weechat.conf	/^meta-OP = "\/bar scroll buflist * -100%"$/;"	k	section:key
OP	weechat/.weechat/weechat.conf	/^meta-meta-OP = "\/bar scroll buflist * b"$/;"	k	section:key
OPTIONS	suckless/.suckless/dmenu/dmenu.1	/^.SH OPTIONS$/;"	s	title:DMENU
OPTIONS	suckless/.suckless/dmenu/stest.1	/^.SH OPTIONS$/;"	s	title:STEST
OPTIONS	suckless/.suckless/dwm/dwm.1	/^.SH OPTIONS$/;"	s	title:DWM
OPTIONS	suckless/.suckless/st/st.1	/^.SH OPTIONS$/;"	s	title:ST
OPTIONS	suckless/.suckless/surf/surf.1	/^.SH OPTIONS$/;"	s	title:SURF
OPTIONS	suckless/.suckless/tabbed/tabbed.1	/^.SH OPTIONS$/;"	s	title:TABBED
OQ	weechat/.weechat/weechat.conf	/^meta-OQ = "\/bar scroll buflist * +100%"$/;"	k	section:key
OQ	weechat/.weechat/weechat.conf	/^meta-meta-OQ = "\/bar scroll buflist * e"$/;"	k	section:key
Oa	weechat/.weechat/weechat.conf	/^meta-Oa = "\/input history_global_previous"$/;"	k	section:key
Ob	weechat/.weechat/weechat.conf	/^meta-Ob = "\/input history_global_next"$/;"	k	section:key
Oc	weechat/.weechat/weechat.conf	/^meta-Oc = "\/input move_next_word"$/;"	k	section:key
Od	weechat/.weechat/weechat.conf	/^meta-Od = "\/input move_previous_word"$/;"	k	section:key
On-demand loading of plugins	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### On-demand loading of plugins$/;"	S
OnAny	suckless/.suckless/surf/surf.c	/^	OnAny   = OnDoc | OnLink | OnImg | OnMedia | OnEdit | OnBar | OnSel,$/;"	e	enum:__anonb95973ab0203	file:
OnBar	suckless/.suckless/surf/surf.c	/^	OnBar   = WEBKIT_HIT_TEST_RESULT_CONTEXT_SCROLLBAR,$/;"	e	enum:__anonb95973ab0203	file:
OnDoc	suckless/.suckless/surf/surf.c	/^	OnDoc   = WEBKIT_HIT_TEST_RESULT_CONTEXT_DOCUMENT,$/;"	e	enum:__anonb95973ab0203	file:
OnEdit	suckless/.suckless/surf/surf.c	/^	OnEdit  = WEBKIT_HIT_TEST_RESULT_CONTEXT_EDITABLE,$/;"	e	enum:__anonb95973ab0203	file:
OnImg	suckless/.suckless/surf/surf.c	/^	OnImg   = WEBKIT_HIT_TEST_RESULT_CONTEXT_IMAGE,$/;"	e	enum:__anonb95973ab0203	file:
OnLink	suckless/.suckless/surf/surf.c	/^	OnLink  = WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK,$/;"	e	enum:__anonb95973ab0203	file:
OnMedia	suckless/.suckless/surf/surf.c	/^	OnMedia = WEBKIT_HIT_TEST_RESULT_CONTEXT_MEDIA,$/;"	e	enum:__anonb95973ab0203	file:
OnSel	suckless/.suckless/surf/surf.c	/^	OnSel   = WEBKIT_HIT_TEST_RESULT_CONTEXT_SELECTION,$/;"	e	enum:__anonb95973ab0203	file:
P	weechat/.weechat/weechat.conf	/^ctrl-P = "\/buffer -1"$/;"	k	section:key
PACKAGES=	bin/.bin/stowsh	/^    PACKAGES=()$/;"	f
PKG_CONFIG	suckless/.suckless/st/config.mk	/^PKG_CONFIG = pkg-config$/;"	m
PLUGINS	suckless/.suckless/surf/surf.1	/^.SH PLUGINS$/;"	s	title:SURF
PLUMB	suckless/.suckless/surf/config.def.h	/^#define PLUMB(/;"	d
PLUMB	suckless/.suckless/surf/config.h	/^#define PLUMB(/;"	d
PREFIX	suckless/.suckless/dmenu/config.mk	/^PREFIX = \/usr\/local$/;"	m
PREFIX	suckless/.suckless/dwm/config.mk	/^PREFIX = \/usr\/local$/;"	m
PREFIX	suckless/.suckless/st/config.mk	/^PREFIX = \/usr\/local$/;"	m
PREFIX	suckless/.suckless/surf/config.mk	/^PREFIX = \/usr\/local$/;"	m
PREFIX	suckless/.suckless/tabbed/config.mk	/^PREFIX = \/usr\/local$/;"	m
PROG_EDIT	bin/.bin/open	/^	PROG_EDIT   => 'vim',$/;"	c
PROG_REVEAL	bin/.bin/open	/^	PROG_REVEAL => 'rox',$/;"	c
PROMPT_FIND	suckless/.suckless/surf/config.def.h	/^#define PROMPT_FIND /;"	d
PROMPT_FIND	suckless/.suckless/surf/config.h	/^#define PROMPT_FIND /;"	d
PROMPT_GO	suckless/.suckless/surf/config.def.h	/^#define PROMPT_GO /;"	d
PROMPT_GO	suckless/.suckless/surf/config.h	/^#define PROMPT_GO /;"	d
Page	suckless/.suckless/surf/libsurf-webext.c	/^typedef struct Page {$/;"	s	file:
Page	suckless/.suckless/surf/libsurf-webext.c	/^} Page;$/;"	t	typeref:struct:Page	file:
ParamName	suckless/.suckless/surf/surf.c	/^} ParamName;$/;"	t	typeref:enum:__anonb95973ab0303	file:
Parameter	suckless/.suckless/surf/surf.c	/^} Parameter;$/;"	t	typeref:struct:__anonb95973ab0508	file:
ParameterLast	suckless/.suckless/surf/surf.c	/^	ParameterLast$/;"	e	enum:__anonb95973ab0303	file:
Pertag	suckless/.suckless/dwm/dwm.c	/^struct Pertag {$/;"	s	file:
Pertag	suckless/.suckless/dwm/dwm.c	/^typedef struct Pertag Pertag;$/;"	t	typeref:struct:Pertag	file:
Plug	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
Plugins	suckless/.suckless/surf/surf.c	/^	Plugins,$/;"	e	enum:__anonb95973ab0303	file:
Post-update hooks	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Post-update hooks$/;"	S
PreferredLanguages	suckless/.suckless/surf/surf.c	/^	PreferredLanguages,$/;"	e	enum:__anonb95973ab0303	file:
Prerequisite	config/.config/nvim/plugged/vim-plug/autoload/test/README.md	/^### Prerequisite$/;"	S
Pros.	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Pros.$/;"	S
Q	weechat/.weechat/alias.conf	/^Q = "query"$/;"	k	section:cmd
Q	weechat/.weechat/weechat.conf	/^ctrl-Q = "\/input search_stop"$/;"	k	section:key_search
R	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
R	weechat/.weechat/weechat.conf	/^ctrl-R = "\/input search_switch_regex"$/;"	k	section:key_search
R	weechat/.weechat/weechat.conf	/^ctrl-R = "\/input search_text_here"$/;"	k	section:key
REDRAW	weechat/.weechat/alias.conf	/^REDRAW = "window refresh"$/;"	k	section:cmd
Requirements	README.md	/^#### Requirements$/;"	t
Rule	suckless/.suckless/dwm/dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon3555889b0a08	file:
Run	config/.config/nvim/plugged/vim-plug/autoload/test/README.md	/^### Run$/;"	S
RunInFullscreen	suckless/.suckless/surf/surf.c	/^	RunInFullscreen,$/;"	e	enum:__anonb95973ab0303	file:
Rune	suckless/.suckless/st/st.h	/^typedef uint_least32_t Rune;$/;"	t	typeref:typename:uint_least32_t
S	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
SAY	weechat/.weechat/alias.conf	/^SAY = "msg *"$/;"	k	section:cmd
SEE	suckless/.suckless/dmenu/dmenu.1	/^.SH SEE ALSO$/;"	s	title:DMENU
SEE	suckless/.suckless/dmenu/stest.1	/^.SH SEE ALSO$/;"	s	title:STEST
SEE	suckless/.suckless/dwm/dwm.1	/^.SH SEE ALSO$/;"	s	title:DWM
SEE	suckless/.suckless/st/st.1	/^.SH SEE ALSO$/;"	s	title:ST
SEE	suckless/.suckless/surf/surf.1	/^.SH SEE ALSO$/;"	s	title:SURF
SEE	suckless/.suckless/tabbed/tabbed.1	/^.SH SEE ALSO$/;"	s	title:TABBED
SEE	suckless/.suckless/tabbed/xembed.1	/^.SH SEE ALSO$/;"	s	title:XEMBED
SEL_EMPTY	suckless/.suckless/st/st.h	/^	SEL_EMPTY = 1,$/;"	e	enum:selection_mode
SEL_IDLE	suckless/.suckless/st/st.h	/^	SEL_IDLE = 0,$/;"	e	enum:selection_mode
SEL_READY	suckless/.suckless/st/st.h	/^	SEL_READY = 2$/;"	e	enum:selection_mode
SEL_RECTANGULAR	suckless/.suckless/st/st.h	/^	SEL_RECTANGULAR = 2$/;"	e	enum:selection_type
SEL_REGULAR	suckless/.suckless/st/st.h	/^	SEL_REGULAR = 1,$/;"	e	enum:selection_type
SETPROP	suckless/.suckless/surf/config.def.h	/^#define SETPROP(/;"	d
SETPROP	suckless/.suckless/surf/config.h	/^#define SETPROP(/;"	d
SETPROP	suckless/.suckless/tabbed/config.def.h	/^#define SETPROP(/;"	d
SETPROP	suckless/.suckless/tabbed/config.h	/^#define SETPROP(/;"	d
SHCMD	suckless/.suckless/dwm/config.def.h	/^#define SHCMD(/;"	d
SHCMD	suckless/.suckless/dwm/config.h	/^#define SHCMD(/;"	d
SHORTCUTS	suckless/.suckless/st/st.1	/^.SH SHORTCUTS$/;"	s	title:ST
SIGNALS	suckless/.suckless/surf/surf.1	/^.SH SIGNALS$/;"	s	title:SURF
SIGNOFF	weechat/.weechat/alias.conf	/^SIGNOFF = "quit"$/;"	k	section:cmd
SNAP_LINE	suckless/.suckless/st/st.h	/^	SNAP_LINE = 2$/;"	e	enum:selection_snap
SNAP_WORD	suckless/.suckless/st/st.h	/^	SNAP_WORD = 1,$/;"	e	enum:selection_snap
SRC	suckless/.suckless/dmenu/Makefile	/^SRC = drw.c dmenu.c stest.c util.c$/;"	m
SRC	suckless/.suckless/dwm/Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
SRC	suckless/.suckless/st/Makefile	/^SRC = st.c x.c$/;"	m
SRC	suckless/.suckless/surf/Makefile	/^SRC = surf.c$/;"	m
SRC	suckless/.suckless/tabbed/Makefile	/^SRC = tabbed.c xembed.c$/;"	m
ST	suckless/.suckless/st/st.1	/^.TH ST 1 st\\-VERSION$/;"	t
STCFLAGS	suckless/.suckless/st/config.mk	/^STCFLAGS = $(INCS) $(STCPPFLAGS) $(CPPFLAGS) $(CFLAGS)$/;"	m
STCPPFLAGS	suckless/.suckless/st/config.mk	/^STCPPFLAGS = -DVERSION=\\"$(VERSION)\\" -D_XOPEN_SOURCE=600$/;"	m
STEST	suckless/.suckless/dmenu/stest.1	/^.TH STEST 1 dmenu\\-VERSION$/;"	t
STLDFLAGS	suckless/.suckless/st/config.mk	/^STLDFLAGS = $(LIBS) $(LDFLAGS)$/;"	m
STREscape	suckless/.suckless/st/st.c	/^} STREscape;$/;"	t	typeref:struct:__anon140a12590608	file:
STR_ARG_SIZ	suckless/.suckless/st/st.c	/^#define STR_ARG_SIZ /;"	d	file:
STR_BUF_SIZ	suckless/.suckless/st/st.c	/^#define STR_BUF_SIZ /;"	d	file:
SURF	suckless/.suckless/surf/surf.1	/^.TH SURF 1 surf\\-VERSION$/;"	t
SURFCFLAGS	suckless/.suckless/surf/config.mk	/^SURFCFLAGS = $(INCS) $(CPPFLAGS) -fPIC$/;"	m
SYNOPSIS	suckless/.suckless/dmenu/dmenu.1	/^.SH SYNOPSIS$/;"	s	title:DMENU
SYNOPSIS	suckless/.suckless/dmenu/stest.1	/^.SH SYNOPSIS$/;"	s	title:STEST
SYNOPSIS	suckless/.suckless/dwm/dwm.1	/^.SH SYNOPSIS$/;"	s	title:DWM
SYNOPSIS	suckless/.suckless/st/st.1	/^.SH SYNOPSIS$/;"	s	title:ST
SYNOPSIS	suckless/.suckless/surf/surf.1	/^.SH SYNOPSIS$/;"	s	title:SURF
SYNOPSIS	suckless/.suckless/tabbed/tabbed.1	/^.SH SYNOPSIS$/;"	s	title:TABBED
SYNOPSIS	suckless/.suckless/tabbed/xembed.1	/^.SH SYNOPSIS$/;"	s	title:XEMBED
SchemeLast	suckless/.suckless/dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeLast }; \/* color schemes *\/$/;"	e	enum:__anon924bbebd0103	file:
SchemeNorm	suckless/.suckless/dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeLast }; \/* color schemes *\/$/;"	e	enum:__anon924bbebd0103	file:
SchemeNorm	suckless/.suckless/dwm/dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon3555889b0203	file:
SchemeOut	suckless/.suckless/dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeLast }; \/* color schemes *\/$/;"	e	enum:__anon924bbebd0103	file:
SchemeSel	suckless/.suckless/dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeLast }; \/* color schemes *\/$/;"	e	enum:__anon924bbebd0103	file:
SchemeSel	suckless/.suckless/dwm/dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon3555889b0203	file:
Screenshots	README.md	/^### Screenshots$/;"	S
ScrollBars	suckless/.suckless/surf/surf.c	/^	ScrollBars,$/;"	e	enum:__anonb95973ab0303	file:
SearchEngine	suckless/.suckless/surf/surf.c	/^} SearchEngine;$/;"	t	typeref:struct:__anonb95973ab0808	file:
Selection	suckless/.suckless/st/st.c	/^} Selection;$/;"	t	typeref:struct:__anon140a12590208	file:
Shortcut	suckless/.suckless/st/x.c	/^} Shortcut;$/;"	t	typeref:struct:__anon6574b7aa0108	file:
ShowIndicators	suckless/.suckless/surf/surf.c	/^	ShowIndicators,$/;"	e	enum:__anonb95973ab0303	file:
SiteQuirks	suckless/.suckless/surf/surf.c	/^	SiteQuirks,$/;"	e	enum:__anonb95973ab0303	file:
SiteSpecific	suckless/.suckless/surf/surf.c	/^} SiteSpecific;$/;"	t	typeref:struct:__anonb95973ab0a08	file:
SmoothScrolling	suckless/.suckless/surf/surf.c	/^	SmoothScrolling,$/;"	e	enum:__anonb95973ab0303	file:
SpellChecking	suckless/.suckless/surf/surf.c	/^	SpellChecking,$/;"	e	enum:__anonb95973ab0303	file:
SpellLanguages	suckless/.suckless/surf/surf.c	/^	SpellLanguages,$/;"	e	enum:__anonb95973ab0303	file:
StrictTLS	suckless/.suckless/surf/surf.c	/^	StrictTLS,$/;"	e	enum:__anonb95973ab0303	file:
Style	suckless/.suckless/surf/surf.c	/^	Style,$/;"	e	enum:__anonb95973ab0303	file:
Surf is starting up slowly. What might be causing this?	suckless/.suckless/surf/FAQ.md	/^## Surf is starting up slowly. What might be causing this?$/;"	s
T	weechat/.weechat/alias.conf	/^T = "topic"$/;"	k	section:cmd
T	weechat/.weechat/weechat.conf	/^ctrl-T = "\/input transpose_chars"$/;"	k	section:key
TABBED	suckless/.suckless/tabbed/tabbed.1	/^.TH TABBED 1 tabbed\\-VERSION$/;"	t
TAGKEYS	suckless/.suckless/dwm/config.def.h	/^#define TAGKEYS(/;"	d
TAGKEYS	suckless/.suckless/dwm/config.h	/^#define TAGKEYS(/;"	d
TAGMASK	suckless/.suckless/dwm/dwm.c	/^#define TAGMASK /;"	d	file:
TCursor	suckless/.suckless/st/st.c	/^} TCursor;$/;"	t	typeref:struct:__anon140a12590108	file:
TERMMOD	suckless/.suckless/st/config.def.h	/^#define TERMMOD /;"	d
TERMMOD	suckless/.suckless/st/config.h	/^#define TERMMOD /;"	d
TEXTW	suckless/.suckless/dmenu/dmenu.c	/^#define TEXTW(/;"	d	file:
TEXTW	suckless/.suckless/dwm/dwm.c	/^#define TEXTW(/;"	d	file:
TEXTW	suckless/.suckless/tabbed/tabbed.c	/^#define TEXTW(/;"	d	file:
TIMEDIFF	suckless/.suckless/st/st.h	/^#define TIMEDIFF(/;"	d
TLINE	suckless/.suckless/st/st.c	/^#define TLINE(/;"	d	file:
TODO	config/.config/nvim/plugged/vim-plug/autoload/test/README.md	/^### TODO$/;"	S
TODO	suckless/.suckless/surf/TODO.md	/^# TODO$/;"	c
TRUEBLUE	suckless/.suckless/st/x.c	/^#define TRUEBLUE(/;"	d	file:
TRUECOLOR	suckless/.suckless/st/st.h	/^#define TRUECOLOR(/;"	d
TRUEGREEN	suckless/.suckless/st/x.c	/^#define TRUEGREEN(/;"	d	file:
TRUERED	suckless/.suckless/st/x.c	/^#define TRUERED(/;"	d	file:
Term	suckless/.suckless/st/st.c	/^} Term;$/;"	t	typeref:struct:__anon140a12590408	file:
TermWindow	suckless/.suckless/st/x.c	/^} TermWindow;$/;"	t	typeref:struct:__anon6574b7aa0408	file:
Test cases for vim-plug	config/.config/nvim/plugged/vim-plug/autoload/test/README.md	/^Test cases for vim-plug$/;"	c
U	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	weechat/.weechat/weechat.conf	/^ctrl-Sctrl-U = "\/input set_unread"$/;"	k	section:key
U	weechat/.weechat/weechat.conf	/^ctrl-U = "\/input delete_beginning_of_line"$/;"	k	section:key
UB	weechat/.weechat/alias.conf	/^UB = "unban"$/;"	k	section:cmd
UMODE	weechat/.weechat/alias.conf	/^UMODE = "mode $nick"$/;"	k	section:cmd
USAGE	suckless/.suckless/dmenu/dmenu.1	/^.SH USAGE$/;"	s	title:DMENU
USAGE	suckless/.suckless/dwm/dwm.1	/^.SH USAGE$/;"	s	title:DWM
USAGE	suckless/.suckless/surf/surf.1	/^.SH USAGE$/;"	s	title:SURF
USAGE	suckless/.suckless/tabbed/tabbed.1	/^.SH USAGE$/;"	s	title:TABBED
UTF_INVALID	suckless/.suckless/dmenu/drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_INVALID	suckless/.suckless/dwm/drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_INVALID	suckless/.suckless/st/st.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	suckless/.suckless/dmenu/drw.c	/^#define UTF_SIZ /;"	d	file:
UTF_SIZ	suckless/.suckless/dwm/drw.c	/^#define UTF_SIZ /;"	d	file:
UTF_SIZ	suckless/.suckless/st/st.c	/^#define UTF_SIZ /;"	d	file:
Unix	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^###### Unix$/;"	u
UriParameters	suckless/.suckless/surf/surf.c	/^} UriParameters;$/;"	t	typeref:struct:__anonb95973ab0908	file:
Usage	bin/.bin/open	/^Usage: $0 -[efWwRh]$/;"	l
Usage	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### Usage$/;"	S
V	weechat/.weechat/alias.conf	/^V = "command core version"$/;"	k	section:cmd
VERSION	suckless/.suckless/dmenu/config.mk	/^VERSION = 4.9$/;"	m
VERSION	suckless/.suckless/dwm/config.mk	/^VERSION = 6.2$/;"	m
VERSION	suckless/.suckless/st/config.mk	/^VERSION = 0.8.2$/;"	m
VERSION	suckless/.suckless/surf/config.mk	/^VERSION = 2.0$/;"	m
VERSION	suckless/.suckless/tabbed/config.mk	/^VERSION = 0.6$/;"	m
VIDEOPLAY	suckless/.suckless/surf/config.def.h	/^#define VIDEOPLAY(/;"	d
VIDEOPLAY	suckless/.suckless/surf/config.h	/^#define VIDEOPLAY(/;"	d
VIMRC	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^cat > $TEMP\/mini-vimrc << VIMRC$/;"	h
VOLUME	bin/.bin/dwmbar	/^function VOLUME() {$/;"	f
Vim	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^#### Vim$/;"	t
W	weechat/.weechat/alias.conf	/^W = "who"$/;"	k	section:cmd
W	weechat/.weechat/weechat.conf	/^ctrl-W = "\/input delete_previous_word"$/;"	k	section:key
WC	weechat/.weechat/alias.conf	/^WC = "window merge"$/;"	k	section:cmd
WEBEXTCFLAGS	suckless/.suckless/surf/config.mk	/^WEBEXTCFLAGS = -fPIC $(WEBEXTINC)$/;"	m
WEBEXTINC	suckless/.suckless/surf/config.mk	/^WEBEXTINC = `pkg-config --cflags webkit2gtk-4.0 webkit2gtk-web-extension-4.0`$/;"	m
WEBEXTLIBS	suckless/.suckless/surf/config.mk	/^WEBEXTLIBS = `pkg-config --libs webkit2gtk-4.0 webkit2gtk-web-extension-4.0`$/;"	m
WEBEXTOBJ	suckless/.suckless/surf/Makefile	/^WEBEXTOBJ = $(WEBEXTSRC:.c=.o)$/;"	m
WEBEXTSRC	suckless/.suckless/surf/Makefile	/^WEBEXTSRC = libsurf-webext.c$/;"	m
WI	weechat/.weechat/alias.conf	/^WI = "whois"$/;"	k	section:cmd
WIDTH	suckless/.suckless/dwm/dwm.c	/^#define WIDTH(/;"	d	file:
WIFI	bin/.bin/dwmbar	/^function WIFI() {$/;"	f
WII	weechat/.weechat/alias.conf	/^WII = "whois $1 $1"$/;"	k	section:cmd
WMDelete	suckless/.suckless/dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon3555889b0403	file:
WMDelete	suckless/.suckless/tabbed/tabbed.c	/^enum { WMProtocols, WMDelete, WMName, WMState, WMFullscreen,$/;"	e	enum:__anon0f72b96f0203	file:
WMFullscreen	suckless/.suckless/tabbed/tabbed.c	/^enum { WMProtocols, WMDelete, WMName, WMState, WMFullscreen,$/;"	e	enum:__anon0f72b96f0203	file:
WMLast	suckless/.suckless/dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon3555889b0403	file:
WMLast	suckless/.suckless/tabbed/tabbed.c	/^       XEmbed, WMSelectTab, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f72b96f0203	file:
WMName	suckless/.suckless/tabbed/tabbed.c	/^enum { WMProtocols, WMDelete, WMName, WMState, WMFullscreen,$/;"	e	enum:__anon0f72b96f0203	file:
WMProtocols	suckless/.suckless/dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon3555889b0403	file:
WMProtocols	suckless/.suckless/tabbed/tabbed.c	/^enum { WMProtocols, WMDelete, WMName, WMState, WMFullscreen,$/;"	e	enum:__anon0f72b96f0203	file:
WMSelectTab	suckless/.suckless/tabbed/tabbed.c	/^       XEmbed, WMSelectTab, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f72b96f0203	file:
WMState	suckless/.suckless/dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon3555889b0403	file:
WMState	suckless/.suckless/tabbed/tabbed.c	/^enum { WMProtocols, WMDelete, WMName, WMState, WMFullscreen,$/;"	e	enum:__anon0f72b96f0203	file:
WMTakeFocus	suckless/.suckless/dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon3555889b0403	file:
WW	weechat/.weechat/alias.conf	/^WW = "whowas"$/;"	k	section:cmd
WebGL	suckless/.suckless/surf/surf.c	/^	WebGL,$/;"	e	enum:__anonb95973ab0303	file:
Windows (PowerShell)	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^###### Windows (PowerShell)$/;"	u
X	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
X	weechat/.weechat/weechat.conf	/^ctrl-X = "\/input switch_active_buffer"$/;"	k	section:key
X11INC	suckless/.suckless/dmenu/config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11INC	suckless/.suckless/dwm/config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11INC	suckless/.suckless/st/config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11INC	suckless/.suckless/surf/config.mk	/^X11INC = `pkg-config --cflags x11`$/;"	m
X11INC	suckless/.suckless/tabbed/config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	suckless/.suckless/dmenu/config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
X11LIB	suckless/.suckless/dwm/config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
X11LIB	suckless/.suckless/st/config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
X11LIB	suckless/.suckless/surf/config.mk	/^X11LIB = `pkg-config --libs x11`$/;"	m
X11LIB	suckless/.suckless/tabbed/config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XEMBED	suckless/.suckless/tabbed/xembed.1	/^.TH XEMBED 1 tabbed\\-VERSION$/;"	t
XEMBED_ACTIVATE_ACCELERATOR	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_ACTIVATE_ACCELERATOR /;"	d	file:
XEMBED_EMBEDDED_NOTIFY	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_EMBEDDED_NOTIFY /;"	d	file:
XEMBED_FOCUS_CURRENT	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_FOCUS_CURRENT /;"	d	file:
XEMBED_FOCUS_FIRST	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_FOCUS_FIRST /;"	d	file:
XEMBED_FOCUS_IN	suckless/.suckless/st/x.c	/^#define XEMBED_FOCUS_IN /;"	d	file:
XEMBED_FOCUS_IN	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_FOCUS_IN /;"	d	file:
XEMBED_FOCUS_LAST	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_FOCUS_LAST /;"	d	file:
XEMBED_FOCUS_NEXT	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_FOCUS_NEXT /;"	d	file:
XEMBED_FOCUS_OUT	suckless/.suckless/st/x.c	/^#define XEMBED_FOCUS_OUT /;"	d	file:
XEMBED_FOCUS_OUT	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_FOCUS_OUT /;"	d	file:
XEMBED_FOCUS_PREV	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_FOCUS_PREV /;"	d	file:
XEMBED_MODALITY_OFF	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_MODALITY_OFF /;"	d	file:
XEMBED_MODALITY_ON	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_MODALITY_ON /;"	d	file:
XEMBED_REGISTER_ACCELERATOR	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_REGISTER_ACCELERATOR /;"	d	file:
XEMBED_REQUEST_FOCUS	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_REQUEST_FOCUS /;"	d	file:
XEMBED_UNREGISTER_ACCELERATOR	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_UNREGISTER_ACCELERATOR /;"	d	file:
XEMBED_WINDOW_ACTIVATE	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_WINDOW_ACTIVATE /;"	d	file:
XEMBED_WINDOW_DEACTIVATE	suckless/.suckless/tabbed/tabbed.c	/^#define XEMBED_WINDOW_DEACTIVATE /;"	d	file:
XEmbed	suckless/.suckless/tabbed/tabbed.c	/^       XEmbed, WMSelectTab, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f72b96f0203	file:
XINERAMAFLAGS	suckless/.suckless/dmenu/config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMAFLAGS	suckless/.suckless/dwm/config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	suckless/.suckless/dmenu/config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
XINERAMALIBS	suckless/.suckless/dwm/config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
XK_ANY_MOD	suckless/.suckless/st/x.c	/^#define XK_ANY_MOD /;"	d	file:
XK_NO_MOD	suckless/.suckless/st/x.c	/^#define XK_NO_MOD /;"	d	file:
XK_SWITCH_MOD	suckless/.suckless/st/x.c	/^#define XK_SWITCH_MOD /;"	d	file:
XSelection	suckless/.suckless/st/x.c	/^} XSelection;$/;"	t	typeref:struct:__anon6574b7aa0608	file:
XWindow	suckless/.suckless/st/x.c	/^} XWindow;$/;"	t	typeref:struct:__anon6574b7aa0508	file:
Y	weechat/.weechat/weechat.conf	/^ctrl-Y = "\/input clipboard_paste"$/;"	k	section:key
Z	weechat/.weechat/weechat.conf	/^meta2-Z = "\/input complete_previous"$/;"	k	section:key
ZoomLevel	suckless/.suckless/surf/surf.c	/^	ZoomLevel,$/;"	e	enum:__anonb95973ab0303	file:
[[	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
\t\tgp	suckless/.suckless/st/diffs/.tmux.conf	/^+			gp = &TLINE(newy)[newx];$/;"	k
\t\tgp	suckless/.suckless/st/diffs/.tmux.conf	/^+			gp = &TLINE(y)[sel.nb.x];$/;"	k
\t\tgp	suckless/.suckless/st/diffs/.tmux.conf	/^+			gp = &TLINE(y)[sel.nb.y == y ? sel.nb.x : 0];$/;"	k
\t\tgp	suckless/.suckless/st/diffs/.tmux.conf	/^-			gp = &term.line[newy][newx];$/;"	k
\t\tgp	suckless/.suckless/st/diffs/.tmux.conf	/^-			gp = &term.line[y][sel.nb.x];$/;"	k
\t\tgp	suckless/.suckless/st/diffs/.tmux.conf	/^-			gp = &term.line[y][sel.nb.y == y ? sel.nb.x : 0];$/;"	k
\tlast	suckless/.suckless/st/diffs/.tmux.conf	/^+		last = &TLINE(y)[MIN(lastx, linelen-1)];$/;"	k
\tlast	suckless/.suckless/st/diffs/.tmux.conf	/^-		last = &term.line[y][MIN(lastx, linelen-1)];$/;"	k
\tn	suckless/.suckless/st/diffs/.tmux.conf	/^+		n = term.row + n;$/;"	k
\tn	suckless/.suckless/st/diffs/.tmux.conf	/^+		n = term.scr;$/;"	k
\tprevgp	suckless/.suckless/st/diffs/.tmux.conf	/^+		prevgp = &TLINE(*y)[*x];$/;"	k
\tprevgp	suckless/.suckless/st/diffs/.tmux.conf	/^-		prevgp = &term.line[*y][*x];$/;"	k
\ttemp	suckless/.suckless/st/diffs/.tmux.conf	/^+		temp = term.hist[term.histi];$/;"	k
]]	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
_	weechat/.weechat/weechat.conf	/^ctrl-_ = "\/input undo"$/;"	k	section:key
_	weechat/.weechat/weechat.conf	/^meta-_ = "\/input redo"$/;"	k	section:key
__anon0f72b96f0103	suckless/.suckless/tabbed/tabbed.c	/^enum { ColFG, ColBG, ColLast };       \/* color *\/$/;"	g	file:
__anon0f72b96f0203	suckless/.suckless/tabbed/tabbed.c	/^enum { WMProtocols, WMDelete, WMName, WMState, WMFullscreen,$/;"	g	file:
__anon0f72b96f030a	suckless/.suckless/tabbed/tabbed.c	/^typedef union {$/;"	u	file:
__anon0f72b96f0408	suckless/.suckless/tabbed/tabbed.c	/^typedef struct {$/;"	s	file:
__anon0f72b96f0508	suckless/.suckless/tabbed/tabbed.c	/^typedef struct {$/;"	s	file:
__anon0f72b96f0608	suckless/.suckless/tabbed/tabbed.c	/^	struct {$/;"	s	struct:__anon0f72b96f0508	file:
__anon0f72b96f0708	suckless/.suckless/tabbed/tabbed.c	/^typedef struct {$/;"	s	file:
__anon140a12590108	suckless/.suckless/st/st.c	/^typedef struct {$/;"	s	file:
__anon140a12590208	suckless/.suckless/st/st.c	/^typedef struct {$/;"	s	file:
__anon140a12590308	suckless/.suckless/st/st.c	/^	struct {$/;"	s	struct:__anon140a12590208	file:
__anon140a12590408	suckless/.suckless/st/st.c	/^typedef struct {$/;"	s	file:
__anon140a12590508	suckless/.suckless/st/st.c	/^typedef struct {$/;"	s	file:
__anon140a12590608	suckless/.suckless/st/st.c	/^typedef struct {$/;"	s	file:
__anon140a125e0108	suckless/.suckless/st/st.h	/^typedef struct {$/;"	s
__anon140a125e020a	suckless/.suckless/st/st.h	/^typedef union {$/;"	u
__anon140a125e0308	suckless/.suckless/st/st.h	/^typedef struct {$/;"	s
__anon3552f5450108	suckless/.suckless/dwm/drw.h	/^typedef struct {$/;"	s
__anon3552f5450203	suckless/.suckless/dwm/drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	g
__anon3552f5450308	suckless/.suckless/dwm/drw.h	/^typedef struct {$/;"	s
__anon3555889b0103	suckless/.suckless/dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anon3555889b0203	suckless/.suckless/dwm/dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	g	file:
__anon3555889b0303	suckless/.suckless/dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anon3555889b0403	suckless/.suckless/dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anon3555889b0503	suckless/.suckless/dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkClientWin,$/;"	g	file:
__anon3555889b060a	suckless/.suckless/dwm/dwm.c	/^typedef union {$/;"	u	file:
__anon3555889b0708	suckless/.suckless/dwm/dwm.c	/^typedef struct {$/;"	s	file:
__anon3555889b0808	suckless/.suckless/dwm/dwm.c	/^typedef struct {$/;"	s	file:
__anon3555889b0908	suckless/.suckless/dwm/dwm.c	/^typedef struct {$/;"	s	file:
__anon3555889b0a08	suckless/.suckless/dwm/dwm.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0108	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0208	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0308	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0408	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0508	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0608	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0708	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0808	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon6574b7aa0903	suckless/.suckless/st/x.c	/^enum {$/;"	g	file:
__anon6574b7aa0a08	suckless/.suckless/st/x.c	/^typedef struct {$/;"	s	file:
__anon924bbebd0103	suckless/.suckless/dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeLast }; \/* color schemes *\/$/;"	g	file:
__anonacedaf960108	suckless/.suckless/dmenu/drw.h	/^typedef struct {$/;"	s
__anonacedaf960203	suckless/.suckless/dmenu/drw.h	/^enum { ColFg, ColBg }; \/* Clr scheme index *\/$/;"	g
__anonacedaf960308	suckless/.suckless/dmenu/drw.h	/^typedef struct {$/;"	s
__anonb95973ab0103	suckless/.suckless/surf/surf.c	/^enum { AtomFind, AtomGo, AtomUri, AtomLast };$/;"	g	file:
__anonb95973ab0203	suckless/.suckless/surf/surf.c	/^enum {$/;"	g	file:
__anonb95973ab0303	suckless/.suckless/surf/surf.c	/^typedef enum {$/;"	g	file:
__anonb95973ab040a	suckless/.suckless/surf/surf.c	/^typedef union {$/;"	u	file:
__anonb95973ab0508	suckless/.suckless/surf/surf.c	/^typedef struct {$/;"	s	file:
__anonb95973ab0608	suckless/.suckless/surf/surf.c	/^typedef struct {$/;"	s	file:
__anonb95973ab0708	suckless/.suckless/surf/surf.c	/^typedef struct {$/;"	s	file:
__anonb95973ab0808	suckless/.suckless/surf/surf.c	/^typedef struct {$/;"	s	file:
__anonb95973ab0908	suckless/.suckless/surf/surf.c	/^typedef struct {$/;"	s	file:
__anonb95973ab0a08	suckless/.suckless/surf/surf.c	/^typedef struct {$/;"	s	file:
_runcommands	bin/.bin/stowsh	/^_runcommands() {$/;"	f
`PlugInstall!` and `PlugUpdate!`	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### `PlugInstall!` and `PlugUpdate!`$/;"	S
`Plug` options	config/.config/nvim/plugged/vim-plug/autoload/README.md	/^### `Plug` options$/;"	S
a	weechat/.weechat/weechat.conf	/^meta-a = "\/input jump_smart"$/;"	k	section:key
a/config.def.h	suckless/.suckless/dwm/diffs/dwm-cyclelayouts-20180524-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/dwm/diffs/dwm-fibonacci-5.8.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/dwm/diffs/dwm-notitle-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/dwm/diffs/dwm-r1615-selfrestart.diff	/^--- a\/config.def.h	Tue Dec 04 21:54:44 2012 +0200$/;"	m
a/config.def.h	suckless/.suckless/dwm/diffs/dwm-scratchpad-20170207-bb3bd6f.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^--- a\/config.def.h	2015-11-08 23:39:37.000000000 +0100$/;"	m
a/config.def.h	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/st/diffs/st-scrollback-mouse-0.8.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/st/diffs/st-scrollback-mouse-altscreen-20190131-e23acb9.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/surf/diffs/surf-git-20160127-searchengines.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	suckless/.suckless/surf/surf-git-20160127-searchengines.diff	/^--- a\/config.def.h$/;"	m
a/config.h	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^--- a\/config.h$/;"	m
a/config.mk	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^--- a\/config.mk$/;"	m
a/dmenu.c	suckless/.suckless/dmenu/diffs/dmenu-fuzzymatch-4.6.diff	/^--- a\/dmenu.c$/;"	m
a/dwm.1	suckless/.suckless/dwm/diffs/dwm-cyclelayouts-20180524-6.2.diff	/^--- a\/dwm.1$/;"	m
a/dwm.c	suckless/.suckless/dwm/diffs/dwm-cyclelayouts-20180524-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-20170508-ceac8c9.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	suckless/.suckless/dwm/diffs/dwm-notitle-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	suckless/.suckless/dwm/diffs/dwm-pertag-20170513-ceac8c9.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	suckless/.suckless/dwm/diffs/dwm-scratchpad-20170207-bb3bd6f.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	suckless/.suckless/dwm/diffs/dwm-swallow-20170909-ceac8c9.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	suckless/.suckless/dwm/diffs/dwm-systray-20190208-cb3f58a.diff	/^--- a\/dwm.c	2015-11-08 23:39:37.000000000 +0100$/;"	m
a/st.c	suckless/.suckless/st/diffs/st-externalpipe-0.8.2.diff	/^--- a\/st.c$/;"	m
a/st.c	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^--- a\/st.c$/;"	m
a/st.c	suckless/.suckless/st/diffs/st-scrollback-mouse-altscreen-20190131-e23acb9.diff	/^--- a\/st.c$/;"	m
a/st.h	suckless/.suckless/st/diffs/st-externalpipe-0.8.2.diff	/^--- a\/st.h$/;"	m
a/st.h	suckless/.suckless/st/diffs/st-scrollback-20190331-21367a0.diff	/^--- a\/st.h$/;"	m
a/st.h	suckless/.suckless/st/diffs/st-scrollback-mouse-0.8.2.diff	/^--- a\/st.h$/;"	m
a/st.h	suckless/.suckless/st/diffs/st-scrollback-mouse-altscreen-20190131-e23acb9.diff	/^--- a\/st.h$/;"	m
a/surf.c	suckless/.suckless/surf/diffs/surf-0.1-chromebar.diff	/^--- a\/surf.c$/;"	m
a/surf.c	suckless/.suckless/surf/diffs/surf-0.7-webkit2-searchengines.diff	/^--- a\/surf.c$/;"	m
a/surf.c	suckless/.suckless/surf/diffs/surf-git-20160127-searchengines.diff	/^--- a\/surf.c$/;"	m
a/surf.c	suckless/.suckless/surf/diffs/surf-git-20170323-webkit2-searchengines.diff	/^--- a\/surf.c$/;"	m
a/surf.c	suckless/.suckless/surf/surf-git-20160127-searchengines.diff	/^--- a\/surf.c$/;"	m
a/x.c	suckless/.suckless/st/diffs/st-scrollback-mouse-0.8.2.diff	/^--- a\/x.c$/;"	m
a/x.c	suckless/.suckless/st/diffs/st-scrollback-mouse-altscreen-20190131-e23acb9.diff	/^--- a\/x.c$/;"	m
actionfps	suckless/.suckless/st/config.def.h	/^static unsigned int actionfps = 30;$/;"	v	typeref:typename:unsigned int
actionfps	suckless/.suckless/st/config.h	/^static unsigned int actionfps = 30;$/;"	v	typeref:typename:unsigned int
add_newline	weechat/.weechat/buflist.conf	/^add_newline = on$/;"	k	section:look
addresses	weechat/.weechat/irc.conf	/^BNC.addresses = "82.180.28.118\/1025"$/;"	k	section:server
addresses	weechat/.weechat/irc.conf	/^OFTC.addresses = "82.180.28.118\/1025"$/;"	k	section:server
addresses	weechat/.weechat/irc.conf	/^addresses = ""$/;"	k	section:server_default
after	suckless/.suckless/tabbed/config.def.h	/^static const char after[]       = ">";$/;"	v	typeref:typename:const char[]
after	suckless/.suckless/tabbed/config.h	/^static const char after[]       = ">";$/;"	v	typeref:typename:const char[]
align_end_of_lines	weechat/.weechat/weechat.conf	/^align_end_of_lines = message$/;"	k	section:look
align_multiline_words	weechat/.weechat/weechat.conf	/^align_multiline_words = on$/;"	k	section:look
all	suckless/.suckless/dmenu/Makefile	/^all: options dmenu stest$/;"	t
all	suckless/.suckless/dwm/Makefile	/^all: options dwm$/;"	t
all	suckless/.suckless/st/Makefile	/^all: options st$/;"	t
all	suckless/.suckless/surf/Makefile	/^all: options libsurf-webext.so surf$/;"	t
all	suckless/.suckless/tabbed/Makefile	/^all: options ${BIN}$/;"	t
allow_empty_password	weechat/.weechat/relay.conf	/^allow_empty_password = off$/;"	k	section:network
allowaltscreen	suckless/.suckless/st/config.def.h	/^int allowaltscreen = 1;$/;"	v	typeref:typename:int
allowaltscreen	suckless/.suckless/st/config.h	/^int allowaltscreen = 1;$/;"	v	typeref:typename:int
allowed_ips	weechat/.weechat/relay.conf	/^allowed_ips = ""$/;"	k	section:network
alt	suckless/.suckless/st/st.c	/^	Line *alt;    \/* alternate screen *\/$/;"	m	struct:__anon140a12590408	typeref:typename:Line *	file:
alt	suckless/.suckless/st/st.c	/^	int alt;$/;"	m	struct:__anon140a12590208	typeref:typename:int	file:
anti_flood_prio_high	weechat/.weechat/irc.conf	/^anti_flood_prio_high = 2$/;"	k	section:server_default
anti_flood_prio_low	weechat/.weechat/irc.conf	/^anti_flood_prio_low = 2$/;"	k	section:server_default
appcursor	suckless/.suckless/st/x.c	/^	signed char appcursor; \/* application cursor *\/$/;"	m	struct:__anon6574b7aa0308	typeref:typename:signed char	file:
appenditem	suckless/.suckless/dmenu/dmenu.c	/^appenditem(struct item *item, struct item **list, struct item **last)$/;"	f	typeref:typename:void	file:
appkey	suckless/.suckless/st/x.c	/^	signed char appkey;    \/* application keypad *\/$/;"	m	struct:__anon6574b7aa0308	typeref:typename:signed char	file:
applyrules	suckless/.suckless/dwm/dwm.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applysizehints	suckless/.suckless/dwm/dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
arg	suckless/.suckless/dwm/dwm.c	/^	const Arg arg;$/;"	m	struct:__anon3555889b0708	typeref:typename:const Arg	file:
arg	suckless/.suckless/dwm/dwm.c	/^	const Arg arg;$/;"	m	struct:__anon3555889b0808	typeref:typename:const Arg	file:
arg	suckless/.suckless/st/st.c	/^	int arg[ESC_ARG_SIZ];$/;"	m	struct:__anon140a12590508	typeref:typename:int[]	file:
arg	suckless/.suckless/st/st.h	/^	 const Arg arg;$/;"	m	struct:__anon140a125e0308	typeref:typename:const Arg
arg	suckless/.suckless/st/x.c	/^	const Arg arg;$/;"	m	struct:__anon6574b7aa0108	typeref:typename:const Arg	file:
arg	suckless/.suckless/surf/surf.c	/^	const Arg arg;$/;"	m	struct:__anonb95973ab0608	typeref:typename:const Arg	file:
arg	suckless/.suckless/surf/surf.c	/^	const Arg arg;$/;"	m	struct:__anonb95973ab0708	typeref:typename:const Arg	file:
arg	suckless/.suckless/tabbed/tabbed.c	/^	const Arg arg;$/;"	m	struct:__anon0f72b96f0408	typeref:typename:const Arg	file:
args	suckless/.suckless/st/st.c	/^	char *args[STR_ARG_SIZ];$/;"	m	struct:__anon140a12590608	typeref:typename:char * []	file:
arguments	weechat/.weechat/trigger.conf	/^beep.arguments = ""$/;"	k	section:trigger
arguments	weechat/.weechat/trigger.conf	/^cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"$/;"	k	section:trigger
arguments	weechat/.weechat/trigger.conf	/^cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"$/;"	k	section:trigger
arguments	weechat/.weechat/trigger.conf	/^msg_auth.arguments = "5000|irc_message_auth"$/;"	k	section:trigger
arguments	weechat/.weechat/trigger.conf	/^server_pass.arguments = "5000|input_text_display;5000|history_add"$/;"	k	section:trigger
argv0	suckless/.suckless/dmenu/stest.c	/^char *argv0;$/;"	v	typeref:typename:char *
argv0	suckless/.suckless/st/x.c	/^static char *argv0;$/;"	v	typeref:typename:char *	file:
argv0	suckless/.suckless/surf/surf.c	/^char *argv0;$/;"	v	typeref:typename:char *
argv0	suckless/.suckless/tabbed/tabbed.c	/^char *argv0;$/;"	v	typeref:typename:char *
arrange	suckless/.suckless/dwm/dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anon3555889b0908	typeref:typename:void (*)(Monitor *)	file:
arrange	suckless/.suckless/dwm/dwm.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	suckless/.suckless/dwm/dwm.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
ascent	suckless/.suckless/st/x.c	/^	int ascent;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:int	file:
ascent	suckless/.suckless/tabbed/tabbed.c	/^		int ascent;$/;"	m	struct:__anon0f72b96f0508::__anon0f72b96f0608	typeref:typename:int	file:
ascii_printable	suckless/.suckless/st/config.def.h	/^static char ascii_printable[] =$/;"	v	typeref:typename:char[]
ascii_printable	suckless/.suckless/st/config.h	/^static char ascii_printable[] =$/;"	v	typeref:typename:char[]
atoms	suckless/.suckless/surf/surf.c	/^static Atom atoms[AtomLast];$/;"	v	typeref:typename:Atom[]	file:
attach	suckless/.suckless/dwm/dwm.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attachstack	suckless/.suckless/dwm/dwm.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
attr	suckless/.suckless/st/st.c	/^	Glyph attr; \/* current char attributes *\/$/;"	m	struct:__anon140a12590108	typeref:typename:Glyph	file:
attrs	suckless/.suckless/st/x.c	/^	XSetWindowAttributes attrs;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:XSetWindowAttributes	file:
auto_accept_chats	weechat/.weechat/xfer.conf	/^auto_accept_chats = off$/;"	k	section:file
auto_accept_files	weechat/.weechat/xfer.conf	/^auto_accept_files = off$/;"	k	section:file
auto_accept_nicks	weechat/.weechat/xfer.conf	/^auto_accept_nicks = ""$/;"	k	section:file
auto_check_crc32	weechat/.weechat/xfer.conf	/^auto_check_crc32 = off$/;"	k	section:file
auto_log	weechat/.weechat/logger.conf	/^auto_log = on$/;"	k	section:file
auto_open_buffer	weechat/.weechat/relay.conf	/^auto_open_buffer = on$/;"	k	section:look
auto_open_buffer	weechat/.weechat/xfer.conf	/^auto_open_buffer = on$/;"	k	section:look
auto_rename	weechat/.weechat/xfer.conf	/^auto_rename = on$/;"	k	section:file
auto_resume	weechat/.weechat/xfer.conf	/^auto_resume = on$/;"	k	section:file
auto_scroll	weechat/.weechat/buflist.conf	/^auto_scroll = 50$/;"	k	section:look
auto_unmark	weechat/.weechat/fset.conf	/^auto_unmark = off$/;"	k	section:look
autoconnect	weechat/.weechat/irc.conf	/^BNC.autoconnect = on$/;"	k	section:server
autoconnect	weechat/.weechat/irc.conf	/^OFTC.autoconnect = on$/;"	k	section:server
autoconnect	weechat/.weechat/irc.conf	/^autoconnect = off$/;"	k	section:server_default
autojoin	weechat/.weechat/irc.conf	/^autojoin = ""$/;"	k	section:server_default
autoload	weechat/.weechat/script.conf	/^autoload = on$/;"	k	section:scripts
autoload	weechat/.weechat/weechat.conf	/^autoload = "*"$/;"	k	section:plugin
autoreconnect	weechat/.weechat/irc.conf	/^autoreconnect = on$/;"	k	section:server_default
autoreconnect_delay	weechat/.weechat/irc.conf	/^autoreconnect_delay = 10$/;"	k	section:server_default
autoreconnect_delay_growing	weechat/.weechat/irc.conf	/^autoreconnect_delay_growing = 2$/;"	k	section:network
autoreconnect_delay_max	weechat/.weechat/irc.conf	/^autoreconnect_delay_max = 600$/;"	k	section:network
autorejoin	weechat/.weechat/irc.conf	/^autorejoin = off$/;"	k	section:server_default
autorejoin_delay	weechat/.weechat/irc.conf	/^autorejoin_delay = 30$/;"	k	section:server_default
away	weechat/.weechat/plugins.conf	/^perl.buddylist.color.away = "color for away buddies"$/;"	k	section:desc
away	weechat/.weechat/plugins.conf	/^perl.buddylist.color.away = "cyan"$/;"	k	section:var
away	weechat/.weechat/plugins.conf	/^perl.buddylist.text.away = ""$/;"	k	section:var
away	weechat/.weechat/plugins.conf	/^perl.buddylist.text.away = "optional away text in buddylist (sort method has to be 'status')"$/;"	k	section:desc
away_check	weechat/.weechat/irc.conf	/^away_check = 0$/;"	k	section:server_default
away_check_max_nicks	weechat/.weechat/irc.conf	/^away_check_max_nicks = 25$/;"	k	section:server_default
b	suckless/.suckless/st/st.h	/^	 uint b;$/;"	m	struct:__anon140a125e0308	typeref:typename:uint
b	suckless/.suckless/st/x.c	/^	uint b;$/;"	m	struct:__anon6574b7aa0208	typeref:typename:uint	file:
b	weechat/.weechat/weechat.conf	/^meta-b = "\/input move_previous_word"$/;"	k	section:key
b	weechat/.weechat/weechat.conf	/^meta-wmeta-b = "\/window balance"$/;"	k	section:key
b/fibonacci.c	suckless/.suckless/dwm/diffs/dwm-fibonacci-5.8.2.diff	/^+++ b\/fibonacci.c$/;"	n
b/selfrestart.c	suckless/.suckless/dwm/diffs/dwm-r1615-selfrestart.diff	/^+++ b\/selfrestart.c	Tue Dec 04 21:54:44 2012 +0200$/;"	n
b:pandoc_command_latex_engine	config/.config/nvim/init.vim	/^let b:pandoc_command_latex_engine = 'pdflatex'$/;"	v
backlog	weechat/.weechat/logger.conf	/^backlog = 20$/;"	k	section:look
backlog_conditions	weechat/.weechat/logger.conf	/^backlog_conditions = ""$/;"	k	section:look
backlog_end	weechat/.weechat/logger.conf	/^backlog_end = default$/;"	k	section:color
backlog_line	weechat/.weechat/logger.conf	/^backlog_line = default$/;"	k	section:color
backlog_max_minutes	weechat/.weechat/relay.conf	/^backlog_max_minutes = 1440$/;"	k	section:irc
backlog_max_number	weechat/.weechat/relay.conf	/^backlog_max_number = 256$/;"	k	section:irc
backlog_since_last_disconnect	weechat/.weechat/relay.conf	/^backlog_since_last_disconnect = on$/;"	k	section:irc
backlog_since_last_message	weechat/.weechat/relay.conf	/^backlog_since_last_message = off$/;"	k	section:irc
backlog_tags	weechat/.weechat/relay.conf	/^backlog_tags = "irc_privmsg"$/;"	k	section:irc
backlog_time_format	weechat/.weechat/relay.conf	/^backlog_time_format = "[%H:%M] "$/;"	k	section:irc
badslant	suckless/.suckless/st/x.c	/^	int badslant;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:int	file:
badweight	suckless/.suckless/st/x.c	/^	int badweight;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:int	file:
ban_mask_default	weechat/.weechat/irc.conf	/^ban_mask_default = "*!$ident@$host"$/;"	k	section:network
bar	weechat/.weechat/plugins.conf	/^perl.buddylist.hide.bar = "hides buddylist bar when all servers with added buddies are offline (/;"	k	section:desc
bar	weechat/.weechat/plugins.conf	/^perl.buddylist.hide.bar = "off"$/;"	k	section:var
bar	weechat/.weechat/weechat.conf	/^[bar]$/;"	s
bar_more	weechat/.weechat/weechat.conf	/^bar_more = lightmagenta$/;"	k	section:color
bar_more_down	weechat/.weechat/weechat.conf	/^bar_more_down = "++"$/;"	k	section:look
bar_more_left	weechat/.weechat/weechat.conf	/^bar_more_left = "<<"$/;"	k	section:look
bar_more_right	weechat/.weechat/weechat.conf	/^bar_more_right = ">>"$/;"	k	section:look
bar_more_up	weechat/.weechat/weechat.conf	/^bar_more_up = "--"$/;"	k	section:look
bare_display_exit_on_input	weechat/.weechat/weechat.conf	/^bare_display_exit_on_input = on$/;"	k	section:look
bare_display_time_format	weechat/.weechat/weechat.conf	/^bare_display_time_format = "%H:%M"$/;"	k	section:look
barheight	suckless/.suckless/dwm/config.h	/^static const unsigned int barheight = 13;        \/* height of the bar *\/$/;"	v	typeref:typename:const unsigned int
barwin	suckless/.suckless/dwm/dwm.c	/^	Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
base64_digits	suckless/.suckless/st/st.c	/^static const char base64_digits[] = {$/;"	v	typeref:typename:const char[]	file:
base64dec	suckless/.suckless/st/st.c	/^base64dec(const char *src)$/;"	f	typeref:typename:char *
base64dec_getc	suckless/.suckless/st/st.c	/^base64dec_getc(const char **src)$/;"	f	typeref:typename:char
base_word_until_cursor	weechat/.weechat/weechat.conf	/^base_word_until_cursor = on$/;"	k	section:completion
baseh	suckless/.suckless/dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
basew	suckless/.suckless/dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
before	suckless/.suckless/tabbed/config.def.h	/^static const char before[]      = "<";$/;"	v	typeref:typename:const char[]
before	suckless/.suckless/tabbed/config.h	/^static const char before[]      = "<";$/;"	v	typeref:typename:const char[]
bellvolume	suckless/.suckless/st/config.def.h	/^static int bellvolume = 0;$/;"	v	typeref:typename:int
bellvolume	suckless/.suckless/st/config.h	/^static int bellvolume = 0;$/;"	v	typeref:typename:int
bfont	suckless/.suckless/st/x.c	/^	Font font, bfont, ifont, ibfont;$/;"	m	struct:__anon6574b7aa0808	typeref:typename:Font	file:
bg	suckless/.suckless/st/st.h	/^	uint32_t bg;      \/* background  *\/$/;"	m	struct:__anon140a125e0108	typeref:typename:uint32_t
bh	suckless/.suckless/dmenu/dmenu.c	/^static int bh, mw, mh;$/;"	v	typeref:typename:int	file:
bh	suckless/.suckless/dwm/dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
bh	suckless/.suckless/tabbed/tabbed.c	/^static int bh, wx, wy, ww, wh;$/;"	v	typeref:typename:int	file:
bind_address	weechat/.weechat/relay.conf	/^bind_address = ""$/;"	k	section:network
blinktimeout	suckless/.suckless/st/config.def.h	/^static unsigned int blinktimeout = 800;$/;"	v	typeref:typename:unsigned int
blinktimeout	suckless/.suckless/st/config.h	/^static unsigned int blinktimeout = 800;$/;"	v	typeref:typename:unsigned int
blocksize	weechat/.weechat/xfer.conf	/^blocksize = 65536$/;"	k	section:network
blw	suckless/.suckless/dwm/dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
bmotion	suckless/.suckless/st/x.c	/^bmotion(XEvent *e)$/;"	f	typeref:typename:void
borderpx	suckless/.suckless/dwm/config.def.h	/^static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	suckless/.suckless/dwm/config.h	/^static const unsigned int borderpx  = 4;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	suckless/.suckless/st/config.def.h	/^static int borderpx = 2;$/;"	v	typeref:typename:int
borderpx	suckless/.suckless/st/config.h	/^static int borderpx = 25;$/;"	v	typeref:typename:int
bot	suckless/.suckless/st/st.c	/^	int bot;      \/* bottom scroll limit *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
bpress	suckless/.suckless/st/x.c	/^bpress(XEvent *e)$/;"	f	typeref:typename:void
brelease	suckless/.suckless/st/x.c	/^brelease(XEvent *e)$/;"	f	typeref:typename:void
broken	suckless/.suckless/dwm/dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
buddies	weechat/.weechat/plugins.conf	/^perl.buddylist.check.buddies = "20"$/;"	k	section:var
buddies	weechat/.weechat/plugins.conf	/^perl.buddylist.check.buddies = "time in seconds to send a \/whois request to server. Be careful /;"	k	section:desc
buddylist	weechat/.weechat/plugins.conf	/^perl.buddylist.buddylist = "%h\/buddylist.txt"$/;"	k	section:var
buddylist	weechat/.weechat/plugins.conf	/^perl.buddylist.buddylist = "path\/file-name to store your buddies. "%h" will be replaced by WeeC/;"	k	section:desc
buddylist	weechat/.weechat/plugins.conf	/^perl.buddylist.hide.servername.in.buddylist = "hide the servername in buddylist. If "on" only ni/;"	k	section:desc
buddylist	weechat/.weechat/plugins.conf	/^perl.buddylist.hide.servername.in.buddylist = "off"$/;"	k	section:var
buf	suckless/.suckless/st/st.c	/^	char buf[ESC_BUF_SIZ]; \/* raw string *\/$/;"	m	struct:__anon140a12590508	typeref:typename:char[]	file:
buf	suckless/.suckless/st/st.c	/^	char buf[STR_BUF_SIZ]; \/* raw string *\/$/;"	m	struct:__anon140a12590608	typeref:typename:char[]	file:
buf	suckless/.suckless/st/x.c	/^	Drawable buf;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Drawable	file:
buffer	weechat/.weechat/buflist.conf	/^buffer = "${format_number}${indent}${format_nick_prefix}${color_hotlist}${format_name}"$/;"	k	section:format
buffer_auto_renumber	weechat/.weechat/weechat.conf	/^buffer_auto_renumber = on$/;"	k	section:look
buffer_current	weechat/.weechat/buflist.conf	/^buffer_current = "${color:,red}${format_buffer}"$/;"	k	section:format
buffer_notify_default	weechat/.weechat/weechat.conf	/^buffer_notify_default = all$/;"	k	section:look
buffer_open_before_autojoin	weechat/.weechat/irc.conf	/^buffer_open_before_autojoin = on$/;"	k	section:look
buffer_open_before_join	weechat/.weechat/irc.conf	/^buffer_open_before_join = off$/;"	k	section:look
buffer_position	weechat/.weechat/weechat.conf	/^buffer_position = end$/;"	k	section:look
buffer_search_case_sensitive	weechat/.weechat/weechat.conf	/^buffer_search_case_sensitive = off$/;"	k	section:look
buffer_search_force_default	weechat/.weechat/weechat.conf	/^buffer_search_force_default = off$/;"	k	section:look
buffer_search_regex	weechat/.weechat/weechat.conf	/^buffer_search_regex = off$/;"	k	section:look
buffer_search_where	weechat/.weechat/weechat.conf	/^buffer_search_where = prefix_message$/;"	k	section:look
buffer_switch_autojoin	weechat/.weechat/irc.conf	/^buffer_switch_autojoin = on$/;"	k	section:look
buffer_switch_join	weechat/.weechat/irc.conf	/^buffer_switch_join = on$/;"	k	section:look
buffer_time_format	weechat/.weechat/weechat.conf	/^buffer_time_format = "%H:%M"$/;"	k	section:look
buffer_time_same	weechat/.weechat/weechat.conf	/^buffer_time_same = ""$/;"	k	section:look
buildfile	suckless/.suckless/surf/surf.c	/^buildfile(const char *path)$/;"	f	typeref:typename:char *
buildpath	suckless/.suckless/surf/surf.c	/^buildpath(const char *path)$/;"	f	typeref:typename:char *
button	suckless/.suckless/dwm/dwm.c	/^	unsigned int button;$/;"	m	struct:__anon3555889b0708	typeref:typename:unsigned int	file:
button	suckless/.suckless/surf/surf.c	/^	guint button;$/;"	m	struct:__anonb95973ab0708	typeref:typename:guint	file:
buttonpress	suckless/.suckless/dwm/dwm.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttonpress	suckless/.suckless/tabbed/tabbed.c	/^buttonpress(const XEvent *e)$/;"	f	typeref:typename:void
buttonreleased	suckless/.suckless/surf/surf.c	/^buttonreleased(GtkWidget *w, GdkEvent *e, Client *c)$/;"	f	typeref:typename:gboolean
buttons	suckless/.suckless/dwm/config.def.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	suckless/.suckless/dwm/config.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	suckless/.suckless/surf/config.def.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	suckless/.suckless/surf/config.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
bw	suckless/.suckless/dwm/dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
by	suckless/.suckless/dwm/dwm.c	/^	int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
c	suckless/.suckless/st/st.c	/^	TCursor c;    \/* cursor *\/$/;"	m	struct:__anon140a12590408	typeref:typename:TCursor	file:
c	weechat/.weechat/weechat.conf	/^meta-c = "\/input search_switch_case"$/;"	k	section:key_search
cache_expire	weechat/.weechat/script.conf	/^cache_expire = 1440$/;"	k	section:scripts
cachedir	suckless/.suckless/surf/config.def.h	/^static char *cachedir       = "~\/.surf\/cache\/";$/;"	v	typeref:typename:char *
cachedir	suckless/.suckless/surf/config.h	/^static char *cachedir       = "~\/.surf\/cache\/";$/;"	v	typeref:typename:char *
calcoffsets	suckless/.suckless/dmenu/dmenu.c	/^calcoffsets(void)$/;"	f	typeref:typename:void	file:
capabilities	weechat/.weechat/irc.conf	/^capabilities = "account-notify,away-notify,cap-notify,multi-prefix,server-time,znc.in\/server-ti/;"	k	section:server_default
cert	suckless/.suckless/surf/surf.c	/^	GTlsCertificate *cert, *failedcert;$/;"	m	struct:Client	typeref:typename:GTlsCertificate *	file:
certdir	suckless/.suckless/surf/config.def.h	/^static char *certdir        = "~\/.surf\/certificates\/";$/;"	v	typeref:typename:char *
certdir	suckless/.suckless/surf/config.h	/^static char *certdir        = "~\/.surf\/certificates\/";$/;"	v	typeref:typename:char *
certs	suckless/.suckless/surf/config.def.h	/^static SiteSpecific certs[] = {$/;"	v	typeref:typename:SiteSpecific[]
certs	suckless/.suckless/surf/config.h	/^static SiteSpecific certs[] = {$/;"	v	typeref:typename:SiteSpecific[]
ch	suckless/.suckless/st/x.c	/^	int ch; \/* char height *\/$/;"	m	struct:__anon6574b7aa0408	typeref:typename:int	file:
channel_encode	weechat/.weechat/irc.conf	/^channel_encode = off$/;"	k	section:network
charset	suckless/.suckless/st/st.c	/^	int charset;  \/* current charset *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
charset	suckless/.suckless/st/st.c	/^enum charset {$/;"	g	file:
chat	weechat/.weechat/weechat.conf	/^chat = default$/;"	k	section:color
chat_bg	weechat/.weechat/weechat.conf	/^chat_bg = default$/;"	k	section:color
chat_buffer	weechat/.weechat/weechat.conf	/^chat_buffer = white$/;"	k	section:color
chat_channel	weechat/.weechat/weechat.conf	/^chat_channel = white$/;"	k	section:color
chat_day_change	weechat/.weechat/weechat.conf	/^chat_day_change = cyan$/;"	k	section:color
chat_delimiters	weechat/.weechat/weechat.conf	/^chat_delimiters = green$/;"	k	section:color
chat_highlight	weechat/.weechat/weechat.conf	/^chat_highlight = black$/;"	k	section:color
chat_highlight_bg	weechat/.weechat/weechat.conf	/^chat_highlight_bg = red$/;"	k	section:color
chat_host	weechat/.weechat/weechat.conf	/^chat_host = cyan$/;"	k	section:color
chat_inactive_buffer	weechat/.weechat/weechat.conf	/^chat_inactive_buffer = default$/;"	k	section:color
chat_inactive_window	weechat/.weechat/weechat.conf	/^chat_inactive_window = default$/;"	k	section:color
chat_nick	weechat/.weechat/weechat.conf	/^chat_nick = lightcyan$/;"	k	section:color
chat_nick_colors	weechat/.weechat/weechat.conf	/^chat_nick_colors = "cyan,magenta,green,brown,lightblue,default,lightcyan,lightmagenta,lightgreen/;"	k	section:color
chat_nick_offline	weechat/.weechat/weechat.conf	/^chat_nick_offline = default$/;"	k	section:color
chat_nick_offline_highlight	weechat/.weechat/weechat.conf	/^chat_nick_offline_highlight = default$/;"	k	section:color
chat_nick_offline_highlight_bg	weechat/.weechat/weechat.conf	/^chat_nick_offline_highlight_bg = blue$/;"	k	section:color
chat_nick_other	weechat/.weechat/weechat.conf	/^chat_nick_other = cyan$/;"	k	section:color
chat_nick_prefix	weechat/.weechat/weechat.conf	/^chat_nick_prefix = green$/;"	k	section:color
chat_nick_self	weechat/.weechat/weechat.conf	/^chat_nick_self = white$/;"	k	section:color
chat_nick_suffix	weechat/.weechat/weechat.conf	/^chat_nick_suffix = green$/;"	k	section:color
chat_prefix_action	weechat/.weechat/weechat.conf	/^chat_prefix_action = white$/;"	k	section:color
chat_prefix_buffer	weechat/.weechat/weechat.conf	/^chat_prefix_buffer = brown$/;"	k	section:color
chat_prefix_buffer_inactive_buffer	weechat/.weechat/weechat.conf	/^chat_prefix_buffer_inactive_buffer = default$/;"	k	section:color
chat_prefix_error	weechat/.weechat/weechat.conf	/^chat_prefix_error = yellow$/;"	k	section:color
chat_prefix_join	weechat/.weechat/weechat.conf	/^chat_prefix_join = lightgreen$/;"	k	section:color
chat_prefix_more	weechat/.weechat/weechat.conf	/^chat_prefix_more = lightmagenta$/;"	k	section:color
chat_prefix_network	weechat/.weechat/weechat.conf	/^chat_prefix_network = magenta$/;"	k	section:color
chat_prefix_quit	weechat/.weechat/weechat.conf	/^chat_prefix_quit = lightred$/;"	k	section:color
chat_prefix_suffix	weechat/.weechat/weechat.conf	/^chat_prefix_suffix = green$/;"	k	section:color
chat_read_marker	weechat/.weechat/weechat.conf	/^chat_read_marker = magenta$/;"	k	section:color
chat_read_marker_bg	weechat/.weechat/weechat.conf	/^chat_read_marker_bg = default$/;"	k	section:color
chat_server	weechat/.weechat/weechat.conf	/^chat_server = brown$/;"	k	section:color
chat_tags	weechat/.weechat/weechat.conf	/^chat_tags = red$/;"	k	section:color
chat_text_found	weechat/.weechat/weechat.conf	/^chat_text_found = yellow$/;"	k	section:color
chat_text_found_bg	weechat/.weechat/weechat.conf	/^chat_text_found_bg = lightmagenta$/;"	k	section:color
chat_time	weechat/.weechat/weechat.conf	/^chat_time = default$/;"	k	section:color
chat_time_delimiters	weechat/.weechat/weechat.conf	/^chat_time_delimiters = brown$/;"	k	section:color
chat_value	weechat/.weechat/weechat.conf	/^chat_value = cyan$/;"	k	section:color
chat_value_null	weechat/.weechat/weechat.conf	/^chat_value_null = blue$/;"	k	section:color
check	weechat/.weechat/aspell.conf	/^[check]$/;"	s
check_license	weechat/.weechat/lua.conf	/^check_license = off$/;"	k	section:look
check_license	weechat/.weechat/perl.conf	/^check_license = off$/;"	k	section:look
check_license	weechat/.weechat/python.conf	/^check_license = off$/;"	k	section:look
check_license	weechat/.weechat/ruby.conf	/^check_license = off$/;"	k	section:look
checkotherwm	suckless/.suckless/dwm/dwm.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
chscale	suckless/.suckless/st/config.def.h	/^static float chscale = 1.0;$/;"	v	typeref:typename:float
chscale	suckless/.suckless/st/config.h	/^static float chscale = 1.0;$/;"	v	typeref:typename:float
cistrstr	suckless/.suckless/dmenu/dmenu.c	/^cistrstr(const char *s, const char *sub)$/;"	f	typeref:typename:char *	file:
class	suckless/.suckless/dwm/dwm.c	/^	const char *class;$/;"	m	struct:__anon3555889b0a08	typeref:typename:const char *	file:
clean	suckless/.suckless/dmenu/Makefile	/^clean:$/;"	t
clean	suckless/.suckless/dwm/Makefile	/^clean:$/;"	t
clean	suckless/.suckless/st/Makefile	/^clean:$/;"	t
clean	suckless/.suckless/surf/Makefile	/^clean:$/;"	t
clean	suckless/.suckless/tabbed/Makefile	/^clean:$/;"	t
cleanup	suckless/.suckless/dmenu/dmenu.c	/^cleanup(void)$/;"	f	typeref:typename:void	file:
cleanup	suckless/.suckless/dwm/dwm.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanup	suckless/.suckless/surf/surf.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanup	suckless/.suckless/tabbed/tabbed.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanupmon	suckless/.suckless/dwm/dwm.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
click	suckless/.suckless/dwm/dwm.c	/^	unsigned int click;$/;"	m	struct:__anon3555889b0708	typeref:typename:unsigned int	file:
clickexternplayer	suckless/.suckless/surf/surf.c	/^clickexternplayer(Client *c, const Arg *a, WebKitHitTestResult *h)$/;"	f	typeref:typename:void
clicknavigate	suckless/.suckless/surf/surf.c	/^clicknavigate(Client *c, const Arg *a, WebKitHitTestResult *h)$/;"	f	typeref:typename:void
clicknewwindow	suckless/.suckless/surf/surf.c	/^clicknewwindow(Client *c, const Arg *a, WebKitHitTestResult *h)$/;"	f	typeref:typename:void
client	weechat/.weechat/relay.conf	/^client = cyan$/;"	k	section:color
clientmessage	suckless/.suckless/dwm/dwm.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clientmessage	suckless/.suckless/tabbed/tabbed.c	/^clientmessage(const XEvent *e)$/;"	f	typeref:typename:void
clients	suckless/.suckless/dwm/dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
clients	suckless/.suckless/surf/surf.c	/^static Client *clients;$/;"	v	typeref:typename:Client *	file:
clients	suckless/.suckless/tabbed/tabbed.c	/^static Client **clients;$/;"	v	typeref:typename:Client **	file:
clients_purge_delay	weechat/.weechat/relay.conf	/^clients_purge_delay = 0$/;"	k	section:network
clip	suckless/.suckless/dmenu/dmenu.c	/^static Atom clip, utf8;$/;"	v	typeref:typename:Atom	file:
clipboard	suckless/.suckless/st/x.c	/^	char *primary, *clipboard;$/;"	m	struct:__anon6574b7aa0608	typeref:typename:char **	file:
clipboard	suckless/.suckless/surf/surf.c	/^clipboard(Client *c, const Arg *a)$/;"	f	typeref:typename:void
clipcopy	suckless/.suckless/st/x.c	/^clipcopy(const Arg *dummy)$/;"	f	typeref:typename:void
clippaste	suckless/.suckless/st/x.c	/^clippaste(const Arg *dummy)$/;"	f	typeref:typename:void
clone	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^clone() {$/;"	f
clone_repos	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^clone_repos() ($/;"	f
closed	suckless/.suckless/tabbed/tabbed.c	/^	Bool closed;$/;"	m	struct:__anon0f72b96f0708	typeref:typename:Bool	file:
closelastclient	suckless/.suckless/tabbed/tabbed.c	/^            fillagain = False, closelastclient = False,$/;"	v	typeref:typename:Bool	file:
closeview	suckless/.suckless/surf/surf.c	/^closeview(WebKitWebView *v, Client *c)$/;"	f	typeref:typename:void
cmap	suckless/.suckless/st/x.c	/^	Colormap cmap;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Colormap	file:
cmd	suckless/.suckless/tabbed/tabbed.c	/^static char **cmd;$/;"	v	typeref:typename:char **	file:
cmd	weechat/.weechat/alias.conf	/^[cmd]$/;"	s
cmd_append_pos	suckless/.suckless/tabbed/tabbed.c	/^static int cmd_append_pos;$/;"	v	typeref:typename:int	file:
cmdfd	suckless/.suckless/st/st.c	/^static int cmdfd;$/;"	v	typeref:typename:int	file:
cmessage	suckless/.suckless/st/x.c	/^cmessage(XEvent *e)$/;"	f	typeref:typename:void
col	suckless/.suckless/st/st.c	/^	int col;      \/* nb col *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
col	suckless/.suckless/st/x.c	/^	Color *col;$/;"	m	struct:__anon6574b7aa0808	typeref:typename:Color *	file:
col_cyan	suckless/.suckless/dwm/config.def.h	/^static const char col_cyan[]        = "#005577";$/;"	v	typeref:typename:const char[]
col_cyan	suckless/.suckless/dwm/themes/default.c	/^static const char col_cyan[]        = "#005577";$/;"	v	typeref:typename:const char[]	file:
col_cyan	suckless/.suckless/dwm/themes/nord.c	/^static const char col_cyan[]        = "#2e3440";$/;"	v	typeref:typename:const char[]	file:
col_cyan	suckless/.suckless/dwm/themes/onedark.c	/^static const char col_cyan[]        = "#2e3440";$/;"	v	typeref:typename:const char[]	file:
col_gray1	suckless/.suckless/dwm/config.def.h	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]
col_gray1	suckless/.suckless/dwm/themes/default.c	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]	file:
col_gray1	suckless/.suckless/dwm/themes/nord.c	/^static const char col_gray1[]       = "#2e3440";$/;"	v	typeref:typename:const char[]	file:
col_gray1	suckless/.suckless/dwm/themes/onedark.c	/^static const char col_gray1[]       = "#2e3440";$/;"	v	typeref:typename:const char[]	file:
col_gray2	suckless/.suckless/dwm/config.def.h	/^static const char col_gray2[]       = "#444444";$/;"	v	typeref:typename:const char[]
col_gray2	suckless/.suckless/dwm/themes/default.c	/^static const char col_gray2[]       = "#444444";$/;"	v	typeref:typename:const char[]	file:
col_gray2	suckless/.suckless/dwm/themes/nord.c	/^static const char col_gray2[]       = "#3b4252";$/;"	v	typeref:typename:const char[]	file:
col_gray2	suckless/.suckless/dwm/themes/onedark.c	/^static const char col_gray2[]       = "#1E2127";$/;"	v	typeref:typename:const char[]	file:
col_gray3	suckless/.suckless/dwm/config.def.h	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray3	suckless/.suckless/dwm/themes/default.c	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]	file:
col_gray3	suckless/.suckless/dwm/themes/nord.c	/^static const char col_gray3[]       = "#eceff4";$/;"	v	typeref:typename:const char[]	file:
col_gray3	suckless/.suckless/dwm/themes/onedark.c	/^static const char col_gray3[]       = "#ABB2BF";$/;"	v	typeref:typename:const char[]	file:
col_gray4	suckless/.suckless/dwm/config.def.h	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
col_gray4	suckless/.suckless/dwm/themes/default.c	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]	file:
col_gray4	suckless/.suckless/dwm/themes/nord.c	/^static const char col_gray4[]       = "#bf616a";$/;"	v	typeref:typename:const char[]	file:
col_gray4	suckless/.suckless/dwm/themes/onedark.c	/^static const char col_gray4[]       = "#E06C75";$/;"	v	typeref:typename:const char[]	file:
collen	suckless/.suckless/st/x.c	/^	size_t collen;$/;"	m	struct:__anon6574b7aa0808	typeref:typename:size_t	file:
color	weechat/.weechat/aspell.conf	/^[color]$/;"	s
color	weechat/.weechat/exec.conf	/^[color]$/;"	s
color	weechat/.weechat/fset.conf	/^[color]$/;"	s
color	weechat/.weechat/irc.conf	/^[color]$/;"	s
color	weechat/.weechat/logger.conf	/^[color]$/;"	s
color	weechat/.weechat/plugins.conf	/^perl.buddylist.buddy.on.server.color = "color for online buddy but not visiting the same channel/;"	k	section:desc
color	weechat/.weechat/plugins.conf	/^perl.buddylist.buddy.on.server.color = "lightgreen"$/;"	k	section:var
color	weechat/.weechat/plugins.conf	/^perl.buddylist.display.social.net.color = "color for social-network name (default: yellow)"$/;"	k	section:desc
color	weechat/.weechat/plugins.conf	/^perl.buddylist.display.social.net.color = "yellow"$/;"	k	section:var
color	weechat/.weechat/plugins.conf	/^perl.buddylist.text.color = "color for optional online\/away\/offline-text in buddylist (default/;"	k	section:desc
color	weechat/.weechat/plugins.conf	/^perl.buddylist.text.color = "white"$/;"	k	section:var
color	weechat/.weechat/relay.conf	/^[color]$/;"	s
color	weechat/.weechat/script.conf	/^[color]$/;"	s
color	weechat/.weechat/trigger.conf	/^[color]$/;"	s
color	weechat/.weechat/weechat.conf	/^[color]$/;"	s
color	weechat/.weechat/xfer.conf	/^[color]$/;"	s
color_basic_force_bold	weechat/.weechat/weechat.conf	/^color_basic_force_bold = off$/;"	k	section:look
color_bg	weechat/.weechat/weechat.conf	/^buddylist.color_bg = default$/;"	k	section:bar
color_bg	weechat/.weechat/weechat.conf	/^buflist.color_bg = black$/;"	k	section:bar
color_bg	weechat/.weechat/weechat.conf	/^fset.color_bg = 256$/;"	k	section:bar
color_bg	weechat/.weechat/weechat.conf	/^input.color_bg = default$/;"	k	section:bar
color_bg	weechat/.weechat/weechat.conf	/^nicklist.color_bg = default$/;"	k	section:bar
color_bg	weechat/.weechat/weechat.conf	/^status.color_bg = blue$/;"	k	section:bar
color_bg	weechat/.weechat/weechat.conf	/^title.color_bg = black$/;"	k	section:bar
color_delim	weechat/.weechat/weechat.conf	/^buddylist.color_delim = default$/;"	k	section:bar
color_delim	weechat/.weechat/weechat.conf	/^buflist.color_delim = default$/;"	k	section:bar
color_delim	weechat/.weechat/weechat.conf	/^fset.color_delim = cyan$/;"	k	section:bar
color_delim	weechat/.weechat/weechat.conf	/^input.color_delim = cyan$/;"	k	section:bar
color_delim	weechat/.weechat/weechat.conf	/^nicklist.color_delim = cyan$/;"	k	section:bar
color_delim	weechat/.weechat/weechat.conf	/^status.color_delim = blue$/;"	k	section:bar
color_delim	weechat/.weechat/weechat.conf	/^title.color_delim = cyan$/;"	k	section:bar
color_fg	weechat/.weechat/weechat.conf	/^buddylist.color_fg = default$/;"	k	section:bar
color_fg	weechat/.weechat/weechat.conf	/^buflist.color_fg = cyan$/;"	k	section:bar
color_fg	weechat/.weechat/weechat.conf	/^fset.color_fg = default$/;"	k	section:bar
color_fg	weechat/.weechat/weechat.conf	/^input.color_fg = default$/;"	k	section:bar
color_fg	weechat/.weechat/weechat.conf	/^nicklist.color_fg = default$/;"	k	section:bar
color_fg	weechat/.weechat/weechat.conf	/^status.color_fg = blue$/;"	k	section:bar
color_fg	weechat/.weechat/weechat.conf	/^title.color_fg = default$/;"	k	section:bar
color_inactive_buffer	weechat/.weechat/weechat.conf	/^color_inactive_buffer = on$/;"	k	section:look
color_inactive_message	weechat/.weechat/weechat.conf	/^color_inactive_message = on$/;"	k	section:look
color_inactive_prefix	weechat/.weechat/weechat.conf	/^color_inactive_prefix = on$/;"	k	section:look
color_inactive_prefix_buffer	weechat/.weechat/weechat.conf	/^color_inactive_prefix_buffer = on$/;"	k	section:look
color_inactive_time	weechat/.weechat/weechat.conf	/^color_inactive_time = off$/;"	k	section:look
color_inactive_window	weechat/.weechat/weechat.conf	/^color_inactive_window = on$/;"	k	section:look
color_nick_offline	weechat/.weechat/weechat.conf	/^color_nick_offline = off$/;"	k	section:look
color_nicks_in_names	weechat/.weechat/irc.conf	/^color_nicks_in_names = off$/;"	k	section:look
color_nicks_in_nicklist	weechat/.weechat/irc.conf	/^color_nicks_in_nicklist = off$/;"	k	section:look
color_nicks_in_server_messages	weechat/.weechat/irc.conf	/^color_nicks_in_server_messages = on$/;"	k	section:look
color_pairs_auto_reset	weechat/.weechat/weechat.conf	/^color_pairs_auto_reset = 5$/;"	k	section:look
color_pv_nick_like_channel	weechat/.weechat/irc.conf	/^color_pv_nick_like_channel = on$/;"	k	section:look
color_real_white	weechat/.weechat/weechat.conf	/^color_real_white = off$/;"	k	section:look
colorname	suckless/.suckless/st/config.def.h	/^static const char *colorname[] = {$/;"	v	typeref:typename:const char * []
colorname	suckless/.suckless/st/themes/PaperColorFork.h	/^const char *colorname[] = {$/;"	v	typeref:typename:const char * []
colorname	suckless/.suckless/st/themes/base16-material-lighter.h	/^static const char *colorname[] = {$/;"	v	typeref:typename:const char * []
colorname	suckless/.suckless/st/themes/base16-matierual-darker.h	/^static const char *colorname[] = {$/;"	v	typeref:typename:const char * []
colorname	suckless/.suckless/st/themes/base16-one-dark.h	/^static const char *colorname[] = {$/;"	v	typeref:typename:const char * []
colorname	suckless/.suckless/st/themes/base16-one-light.h	/^static const char *colorname[] = {$/;"	v	typeref:typename:const char * []
colorname	suckless/.suckless/st/themes/nord.h	/^const char *colorname[] = {$/;"	v	typeref:typename:const char * []
colorname	suckless/.suckless/st/themes/one-dark.h	/^static const char *colorname[] = {$/;"	v	typeref:typename:const char * []
colors	suckless/.suckless/dmenu/config.def.h	/^static const char *colors[SchemeLast][2] = {$/;"	v	typeref:typename:const char * [][2]
colors	suckless/.suckless/dmenu/config.h	/^static const char *colors[SchemeLast][2] = {$/;"	v	typeref:typename:const char * [][2]
colors	suckless/.suckless/dwm/config.def.h	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]
colors	suckless/.suckless/dwm/themes/default.c	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]	file:
colors	suckless/.suckless/dwm/themes/nord.c	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]	file:
colors	suckless/.suckless/dwm/themes/onedark.c	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]	file:
colors_receive	weechat/.weechat/irc.conf	/^colors_receive = on$/;"	k	section:network
colors_send	weechat/.weechat/irc.conf	/^colors_send = on$/;"	k	section:network
cols	suckless/.suckless/st/config.def.h	/^static unsigned int cols = 80;$/;"	v	typeref:typename:unsigned int
cols	suckless/.suckless/st/config.h	/^static unsigned int cols = 80;$/;"	v	typeref:typename:unsigned int
columns	weechat/.weechat/script.conf	/^columns = "%s %n %V %v %u | %d | %t"$/;"	k	section:look
command	weechat/.weechat/exec.conf	/^[command]$/;"	s
command	weechat/.weechat/irc.conf	/^command = ""$/;"	k	section:server_default
command	weechat/.weechat/trigger.conf	/^beep.command = "\/print -beep"$/;"	k	section:trigger
command	weechat/.weechat/trigger.conf	/^cmd_pass.command = ""$/;"	k	section:trigger
command	weechat/.weechat/trigger.conf	/^cmd_pass_register.command = ""$/;"	k	section:trigger
command	weechat/.weechat/trigger.conf	/^msg_auth.command = ""$/;"	k	section:trigger
command	weechat/.weechat/trigger.conf	/^server_pass.command = ""$/;"	k	section:trigger
command_after_plugins	weechat/.weechat/weechat.conf	/^command_after_plugins = ""$/;"	k	section:startup
command_before_plugins	weechat/.weechat/weechat.conf	/^command_before_plugins = ""$/;"	k	section:startup
command_chars	weechat/.weechat/weechat.conf	/^command_chars = ""$/;"	k	section:look
command_delay	weechat/.weechat/irc.conf	/^command_delay = 0$/;"	k	section:server_default
command_incomplete	weechat/.weechat/weechat.conf	/^command_incomplete = off$/;"	k	section:look
command_inline	weechat/.weechat/weechat.conf	/^command_inline = on$/;"	k	section:completion
commands	weechat/.weechat/aspell.conf	/^commands = "ame,amsg,away,command,cycle,kick,kickban,me,msg,notice,part,query,quit,topic"$/;"	k	section:check
commands	weechat/.weechat/relay.conf	/^commands = ""$/;"	k	section:weechat
commands=	bin/.bin/stowsh	/^    local commands=()$/;"	f
compare_distance	suckless/.suckless/dmenu/dmenu.c	/^compare_distance(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
completion	weechat/.weechat/alias.conf	/^[completion]$/;"	s
completion	weechat/.weechat/weechat.conf	/^[completion]$/;"	s
compression_level	weechat/.weechat/relay.conf	/^compression_level = 6$/;"	k	section:network
condition_catch_set	weechat/.weechat/fset.conf	/^condition_catch_set = "${count} >= 1"$/;"	k	section:look
conditions	weechat/.weechat/trigger.conf	/^beep.conditions = "${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})"$/;"	k	section:trigger
conditions	weechat/.weechat/trigger.conf	/^cmd_pass.conditions = ""$/;"	k	section:trigger
conditions	weechat/.weechat/trigger.conf	/^cmd_pass_register.conditions = ""$/;"	k	section:trigger
conditions	weechat/.weechat/trigger.conf	/^msg_auth.conditions = ""$/;"	k	section:trigger
conditions	weechat/.weechat/trigger.conf	/^server_pass.conditions = ""$/;"	k	section:trigger
conditions	weechat/.weechat/weechat.conf	/^buddylist.conditions = ""$/;"	k	section:bar
conditions	weechat/.weechat/weechat.conf	/^buflist.conditions = ""$/;"	k	section:bar
conditions	weechat/.weechat/weechat.conf	/^fset.conditions = "${buffer.full_name} == fset.fset"$/;"	k	section:bar
conditions	weechat/.weechat/weechat.conf	/^input.conditions = ""$/;"	k	section:bar
conditions	weechat/.weechat/weechat.conf	/^nicklist.conditions = "${nicklist}"$/;"	k	section:bar
conditions	weechat/.weechat/weechat.conf	/^status.conditions = ""$/;"	k	section:bar
conditions	weechat/.weechat/weechat.conf	/^title.conditions = ""$/;"	k	section:bar
config	suckless/.suckless/surf/surf.c	/^	Parameter config[ParameterLast];$/;"	m	struct:__anonb95973ab0908	typeref:typename:Parameter[]	file:
config.h	suckless/.suckless/dmenu/Makefile	/^config.h:$/;"	t
config.h	suckless/.suckless/dwm/Makefile	/^config.h:$/;"	t
config.h	suckless/.suckless/st/Makefile	/^config.h:$/;"	t
config.h	suckless/.suckless/surf/Makefile	/^config.h:$/;"	t
config.h	suckless/.suckless/tabbed/Makefile	/^config.h:$/;"	t
configure	suckless/.suckless/dwm/dwm.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configurenotify	suckless/.suckless/dwm/dwm.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurenotify	suckless/.suckless/tabbed/tabbed.c	/^configurenotify(const XEvent *e)$/;"	f	typeref:typename:void
configurerequest	suckless/.suckless/dwm/dwm.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	suckless/.suckless/tabbed/tabbed.c	/^configurerequest(const XEvent *e)$/;"	f	typeref:typename:void
confirm_quit	weechat/.weechat/weechat.conf	/^confirm_quit = off$/;"	k	section:look
confirm_upgrade	weechat/.weechat/weechat.conf	/^confirm_upgrade = off$/;"	k	section:look
connection_timeout	weechat/.weechat/irc.conf	/^connection_timeout = 60$/;"	k	section:server_default
connection_timeout	weechat/.weechat/weechat.conf	/^connection_timeout = 60$/;"	k	section:network
convert_spaces	weechat/.weechat/xfer.conf	/^convert_spaces = on$/;"	k	section:file
cookiefile	suckless/.suckless/surf/config.def.h	/^static char *cookiefile     = "~\/.surf\/cookies.txt";$/;"	v	typeref:typename:char *
cookiefile	suckless/.suckless/surf/config.h	/^static char *cookiefile     = "~\/.surf\/cookies.txt";$/;"	v	typeref:typename:char *
cookiepolicy	suckless/.suckless/surf/surf.c	/^static int cookiepolicy;$/;"	v	typeref:typename:int	file:
cookiepolicy_get	suckless/.suckless/surf/surf.c	/^cookiepolicy_get(void)$/;"	f	typeref:typename:WebKitCookieAcceptPolicy
cookiepolicy_set	suckless/.suckless/surf/surf.c	/^cookiepolicy_set(const WebKitCookieAcceptPolicy p)$/;"	f	typeref:typename:char
createmon	suckless/.suckless/dwm/dwm.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
createnotify	suckless/.suckless/tabbed/tabbed.c	/^createnotify(const XEvent *e)$/;"	f	typeref:typename:void
createview	suckless/.suckless/surf/surf.c	/^createview(WebKitWebView *v, WebKitNavigationAction *a, Client *c)$/;"	f	typeref:typename:GtkWidget *
createwindow	suckless/.suckless/surf/surf.c	/^createwindow(Client *c)$/;"	f	typeref:typename:GtkWidget *
cresize	suckless/.suckless/st/x.c	/^cresize(int width, int height)$/;"	f	typeref:typename:void
csidump	suckless/.suckless/st/st.c	/^csidump(void)$/;"	f	typeref:typename:void
csiescseq	suckless/.suckless/st/st.c	/^static CSIEscape csiescseq;$/;"	v	typeref:typename:CSIEscape	file:
csihandle	suckless/.suckless/st/st.c	/^csihandle(void)$/;"	f	typeref:typename:void
csiparse	suckless/.suckless/st/st.c	/^csiparse(void)$/;"	f	typeref:typename:void
csireset	suckless/.suckless/st/st.c	/^csireset(void)$/;"	f	typeref:typename:void
ctcp	weechat/.weechat/irc.conf	/^[ctcp]$/;"	s
ctcp_time_format	weechat/.weechat/irc.conf	/^ctcp_time_format = "%a, %d %b %Y %T %z"$/;"	k	section:look
curconfig	suckless/.suckless/surf/surf.c	/^static Parameter *curconfig;$/;"	v	typeref:typename:Parameter *	file:
curr	suckless/.suckless/dmenu/dmenu.c	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item **	file:
cursor	suckless/.suckless/dmenu/dmenu.c	/^static size_t cursor;$/;"	v	typeref:typename:size_t	file:
cursor	suckless/.suckless/dmenu/drw.h	/^	Cursor cursor;$/;"	m	struct:__anonacedaf960108	typeref:typename:Cursor
cursor	suckless/.suckless/dwm/drw.h	/^	Cursor cursor;$/;"	m	struct:__anon3552f5450108	typeref:typename:Cursor
cursor	suckless/.suckless/dwm/dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
cursor	suckless/.suckless/st/x.c	/^	int cursor; \/* cursor style *\/$/;"	m	struct:__anon6574b7aa0408	typeref:typename:int	file:
cursor_movement	suckless/.suckless/st/st.c	/^enum cursor_movement {$/;"	g	file:
cursor_state	suckless/.suckless/st/st.c	/^enum cursor_state {$/;"	g	file:
cursorshape	suckless/.suckless/st/config.def.h	/^static unsigned int cursorshape = 2;$/;"	v	typeref:typename:unsigned int
cursorshape	suckless/.suckless/st/config.h	/^static unsigned int cursorshape = 2;$/;"	v	typeref:typename:unsigned int
cursorthickness	suckless/.suckless/st/config.def.h	/^static unsigned int cursorthickness = 2;$/;"	v	typeref:typename:unsigned int
cursorthickness	suckless/.suckless/st/config.h	/^static unsigned int cursorthickness = 2;$/;"	v	typeref:typename:unsigned int
curtag	suckless/.suckless/dwm/dwm.c	/^	unsigned int curtag, prevtag; \/* current and previous tag *\/$/;"	m	struct:Pertag	typeref:typename:unsigned int	file:
cw	suckless/.suckless/st/x.c	/^	int cw; \/* char width  *\/$/;"	m	struct:__anon6574b7aa0408	typeref:typename:int	file:
cwscale	suckless/.suckless/st/config.def.h	/^static float cwscale = 1.0;$/;"	v	typeref:typename:float
cwscale	suckless/.suckless/st/config.h	/^static float cwscale = 1.0;$/;"	v	typeref:typename:float
cyclelayout	suckless/.suckless/dwm/dwm.c	/^cyclelayout(const Arg *arg) {$/;"	f	typeref:typename:void
d	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d	weechat/.weechat/weechat.conf	/^meta-d = "\/input delete_next_word"$/;"	k	section:key
data	bin/.bin/pp	/^if ($data = json_decode($input)) {$/;"	v
day_change	weechat/.weechat/weechat.conf	/^day_change = on$/;"	k	section:look
day_change_message_1date	weechat/.weechat/weechat.conf	/^day_change_message_1date = "-- %a, %d %b %Y --"$/;"	k	section:look
day_change_message_2dates	weechat/.weechat/weechat.conf	/^day_change_message_2dates = "-- %%a, %%d %%b %%Y (%a, %d %b %Y) --"$/;"	k	section:look
dc	suckless/.suckless/st/x.c	/^static DC dc;$/;"	v	typeref:typename:DC	file:
dc	suckless/.suckless/tabbed/tabbed.c	/^static DC dc;$/;"	v	typeref:typename:DC	file:
dd	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
debug	weechat/.weechat/weechat.conf	/^[debug]$/;"	s
debug	weechat/.weechat/weechat.conf	/^debug = off$/;"	k	section:plugin
decidenavigation	suckless/.suckless/surf/surf.c	/^decidenavigation(WebKitPolicyDecision *d, Client *c)$/;"	f	typeref:typename:void
decidenewwindow	suckless/.suckless/surf/surf.c	/^decidenewwindow(WebKitPolicyDecision *d, Client *c)$/;"	f	typeref:typename:void
decidepolicy	suckless/.suckless/surf/surf.c	/^decidepolicy(WebKitWebView *v, WebKitPolicyDecision *d,$/;"	f	typeref:typename:gboolean
decideresource	suckless/.suckless/surf/surf.c	/^decideresource(WebKitPolicyDecision *d, Client *c)$/;"	f	typeref:typename:void
decode	weechat/.weechat/charset.conf	/^[decode]$/;"	s
decode	weechat/.weechat/charset.conf	/^decode = "iso-8859-1"$/;"	k	section:default
default	weechat/.weechat/charset.conf	/^[default]$/;"	s
default	weechat/.weechat/plugins.conf	/^perl.buddylist.color.default = "default"$/;"	k	section:var
default	weechat/.weechat/plugins.conf	/^perl.buddylist.color.default = "fall back color. (default: standard weechat color)"$/;"	k	section:desc
default_dict	weechat/.weechat/aspell.conf	/^default_dict = "en"$/;"	k	section:check
default_options	weechat/.weechat/exec.conf	/^default_options = ""$/;"	k	section:command
default_template	weechat/.weechat/weechat.conf	/^default_template = "%(nicks)|%(irc_channels)"$/;"	k	section:completion
default_value	weechat/.weechat/fset.conf	/^default_value = default$/;"	k	section:color
default_value_selected	weechat/.weechat/fset.conf	/^default_value_selected = white$/;"	k	section:color
defaultattr	suckless/.suckless/st/config.def.h	/^static unsigned int defaultattr = 11;$/;"	v	typeref:typename:unsigned int
defaultattr	suckless/.suckless/st/config.h	/^static unsigned int defaultattr = 11;$/;"	v	typeref:typename:unsigned int
defaultbg	suckless/.suckless/st/config.def.h	/^unsigned int defaultbg = 0;$/;"	v	typeref:typename:unsigned int
defaultbg	suckless/.suckless/st/themes/PaperColorFork.h	/^unsigned int defaultbg = 257;$/;"	v	typeref:typename:unsigned int
defaultbg	suckless/.suckless/st/themes/base16-material-lighter.h	/^unsigned int defaultbg = 0;$/;"	v	typeref:typename:unsigned int
defaultbg	suckless/.suckless/st/themes/base16-matierual-darker.h	/^unsigned int defaultbg = 0;$/;"	v	typeref:typename:unsigned int
defaultbg	suckless/.suckless/st/themes/base16-one-dark.h	/^unsigned int defaultbg = 0;$/;"	v	typeref:typename:unsigned int
defaultbg	suckless/.suckless/st/themes/base16-one-light.h	/^unsigned int defaultbg = 0;$/;"	v	typeref:typename:unsigned int
defaultbg	suckless/.suckless/st/themes/nord.h	/^unsigned int defaultbg = 257; \/* nord0 *\/$/;"	v	typeref:typename:unsigned int
defaultbg	suckless/.suckless/st/themes/one-dark.h	/^unsigned int defaultbg = 0;$/;"	v	typeref:typename:unsigned int
defaultcs	suckless/.suckless/st/config.def.h	/^static unsigned int defaultcs = 256;$/;"	v	typeref:typename:unsigned int
defaultcs	suckless/.suckless/st/themes/PaperColorFork.h	/^unsigned int defaultcs = 256; \/* nord4 *\/$/;"	v	typeref:typename:unsigned int
defaultcs	suckless/.suckless/st/themes/base16-material-lighter.h	/^static unsigned int defaultcs = 13;$/;"	v	typeref:typename:unsigned int
defaultcs	suckless/.suckless/st/themes/base16-matierual-darker.h	/^static unsigned int defaultcs = 13;$/;"	v	typeref:typename:unsigned int
defaultcs	suckless/.suckless/st/themes/base16-one-dark.h	/^static unsigned int defaultcs = 13;$/;"	v	typeref:typename:unsigned int
defaultcs	suckless/.suckless/st/themes/base16-one-light.h	/^static unsigned int defaultcs = 13;$/;"	v	typeref:typename:unsigned int
defaultcs	suckless/.suckless/st/themes/nord.h	/^unsigned int defaultcs = 256; \/* nord4 *\/$/;"	v	typeref:typename:unsigned int
defaultcs	suckless/.suckless/st/themes/one-dark.h	/^static unsigned int defaultcs = 7;$/;"	v	typeref:typename:unsigned int
defaultfg	suckless/.suckless/st/config.def.h	/^unsigned int defaultfg = 7;$/;"	v	typeref:typename:unsigned int
defaultfg	suckless/.suckless/st/themes/base16-material-lighter.h	/^unsigned int defaultfg = 7;$/;"	v	typeref:typename:unsigned int
defaultfg	suckless/.suckless/st/themes/base16-matierual-darker.h	/^unsigned int defaultfg = 7;$/;"	v	typeref:typename:unsigned int
defaultfg	suckless/.suckless/st/themes/base16-one-dark.h	/^unsigned int defaultfg = 7;$/;"	v	typeref:typename:unsigned int
defaultfg	suckless/.suckless/st/themes/base16-one-light.h	/^unsigned int defaultfg = 7;$/;"	v	typeref:typename:unsigned int
defaultfg	suckless/.suckless/st/themes/nord.h	/^unsigned int defaultfg = 256; \/* nord4 *\/$/;"	v	typeref:typename:unsigned int
defaultfg	suckless/.suckless/st/themes/one-dark.h	/^unsigned int defaultfg = 7;$/;"	v	typeref:typename:unsigned int
defaultfontsize	suckless/.suckless/st/x.c	/^static double defaultfontsize = 0;$/;"	v	typeref:typename:double	file:
defaultrcs	suckless/.suckless/st/config.def.h	/^static unsigned int defaultrcs = 257;$/;"	v	typeref:typename:unsigned int
defaultrcs	suckless/.suckless/st/themes/PaperColorFork.h	/^unsigned int defaultrcs = 8;  \/* nord3 *\/$/;"	v	typeref:typename:unsigned int
defaultrcs	suckless/.suckless/st/themes/base16-material-lighter.h	/^static unsigned int defaultrcs = 0;$/;"	v	typeref:typename:unsigned int
defaultrcs	suckless/.suckless/st/themes/base16-matierual-darker.h	/^static unsigned int defaultrcs = 0;$/;"	v	typeref:typename:unsigned int
defaultrcs	suckless/.suckless/st/themes/base16-one-dark.h	/^static unsigned int defaultrcs = 0;$/;"	v	typeref:typename:unsigned int
defaultrcs	suckless/.suckless/st/themes/base16-one-light.h	/^static unsigned int defaultrcs = 0;$/;"	v	typeref:typename:unsigned int
defaultrcs	suckless/.suckless/st/themes/nord.h	/^unsigned int defaultrcs = 8;  \/* nord3 *\/$/;"	v	typeref:typename:unsigned int
defaultrcs	suckless/.suckless/st/themes/one-dark.h	/^static unsigned int defaultrcs = 0;$/;"	v	typeref:typename:unsigned int
defconfig	suckless/.suckless/surf/config.def.h	/^static Parameter defconfig[ParameterLast] = {$/;"	v	typeref:typename:Parameter[]
defconfig	suckless/.suckless/surf/config.h	/^static Parameter defconfig[ParameterLast] = {$/;"	v	typeref:typename:Parameter[]
deperr	bin/.bin/stowsh	/^deperr() {$/;"	f
desc	weechat/.weechat/plugins.conf	/^[desc]$/;"	s
descent	suckless/.suckless/st/x.c	/^	int descent;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:int	file:
descent	suckless/.suckless/tabbed/tabbed.c	/^		int descent;$/;"	m	struct:__anon0f72b96f0508::__anon0f72b96f0608	typeref:typename:int	file:
description	weechat/.weechat/fset.conf	/^description = default$/;"	k	section:color
description_selected	weechat/.weechat/fset.conf	/^description_selected = white$/;"	k	section:color
destroyclient	suckless/.suckless/surf/surf.c	/^destroyclient(Client *c)$/;"	f	typeref:typename:void
destroynotify	suckless/.suckless/dwm/dwm.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
destroynotify	suckless/.suckless/tabbed/tabbed.c	/^destroynotify(const XEvent *e)$/;"	f	typeref:typename:void
destroywin	suckless/.suckless/surf/surf.c	/^destroywin(GtkWidget* w, Client *c)$/;"	f	typeref:typename:void
detach	suckless/.suckless/dwm/dwm.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detachstack	suckless/.suckless/dwm/dwm.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
dict	weechat/.weechat/aspell.conf	/^[dict]$/;"	s
die	suckless/.suckless/dmenu/util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void
die	suckless/.suckless/dwm/util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void
die	suckless/.suckless/st/st.c	/^die(const char *errstr, ...)$/;"	f	typeref:typename:void
die	suckless/.suckless/surf/common.c	/^die(const char *errstr, ...)$/;"	f	typeref:typename:void
die	suckless/.suckless/tabbed/tabbed.c	/^die(const char *errstr, ...)$/;"	f	typeref:typename:void
diff_color	weechat/.weechat/script.conf	/^diff_color = on$/;"	k	section:look
diff_command	weechat/.weechat/script.conf	/^diff_command = "auto"$/;"	k	section:look
dirtomon	suckless/.suckless/dwm/dwm.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dirty	suckless/.suckless/st/st.c	/^	int *dirty;   \/* dirtyness of lines *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int *	file:
display_away	weechat/.weechat/irc.conf	/^display_away = local$/;"	k	section:look
display_conditions	weechat/.weechat/buflist.conf	/^display_conditions = "${buffer.hidden}==0"$/;"	k	section:look
display_ctcp_blocked	weechat/.weechat/irc.conf	/^display_ctcp_blocked = on$/;"	k	section:look
display_ctcp_reply	weechat/.weechat/irc.conf	/^display_ctcp_reply = on$/;"	k	section:look
display_ctcp_unknown	weechat/.weechat/irc.conf	/^display_ctcp_unknown = on$/;"	k	section:look
display_default	weechat/.weechat/weechat.conf	/^display_default = 5$/;"	k	section:history
display_host_join	weechat/.weechat/irc.conf	/^display_host_join = on$/;"	k	section:look
display_host_join_local	weechat/.weechat/irc.conf	/^display_host_join_local = on$/;"	k	section:look
display_host_quit	weechat/.weechat/irc.conf	/^display_host_quit = on$/;"	k	section:look
display_join_message	weechat/.weechat/irc.conf	/^display_join_message = "329,332,333,366"$/;"	k	section:look
display_logo	weechat/.weechat/weechat.conf	/^display_logo = on$/;"	k	section:startup
display_old_topic	weechat/.weechat/irc.conf	/^display_old_topic = on$/;"	k	section:look
display_pv_away_once	weechat/.weechat/irc.conf	/^display_pv_away_once = on$/;"	k	section:look
display_pv_back	weechat/.weechat/irc.conf	/^display_pv_back = on$/;"	k	section:look
display_source	weechat/.weechat/script.conf	/^display_source = on$/;"	k	section:look
display_usage	bin/.bin/spotify-controller	/^display_usage() {$/;"	f
display_version	weechat/.weechat/weechat.conf	/^display_version = on$/;"	k	section:startup
dist	suckless/.suckless/dmenu/Makefile	/^dist: clean$/;"	t
dist	suckless/.suckless/dwm/Makefile	/^dist: clean$/;"	t
dist	suckless/.suckless/st/Makefile	/^dist: clean$/;"	t
dist	suckless/.suckless/surf/Makefile	/^dist: distclean$/;"	t
dist	suckless/.suckless/tabbed/Makefile	/^dist: clean$/;"	t
distance	suckless/.suckless/dmenu/dmenu.c	/^	int distance;$/;"	m	struct:item	typeref:typename:int	file:
distclean	suckless/.suckless/surf/Makefile	/^distclean: clean$/;"	t
dmenu	suckless/.suckless/dmenu/Makefile	/^dmenu: dmenu.o drw.o util.o$/;"	t
dmenu-4.6/config.def.h	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^--- dmenu-4.6\/config.def.h	2015-11-09 06:42:21.000000000 +0800$/;"	m
dmenu-4.6/dmenu.c	suckless/.suckless/dmenu/diffs/dmenu-navhistory-4.6.diff	/^--- dmenu-4.6\/dmenu.c	2015-11-09 06:42:21.000000000 +0800$/;"	m
dmenucmd	suckless/.suckless/dwm/config.def.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray/;"	v	typeref:typename:const char * []
dmenucmd	suckless/.suckless/dwm/config.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray/;"	v	typeref:typename:const char * []
dmenufont	suckless/.suckless/dwm/config.def.h	/^static const char dmenufont[]       = "monospace:size=10";$/;"	v	typeref:typename:const char[]
dmenufont	suckless/.suckless/dwm/themes/default.c	/^static const char dmenufont[]       = "monospace:size=10";$/;"	v	typeref:typename:const char[]	file:
dmenufont	suckless/.suckless/dwm/themes/nord.c	/^static const char dmenufont[]       = "monospace:size=10";$/;"	v	typeref:typename:const char[]	file:
dmenufont	suckless/.suckless/dwm/themes/onedark.c	/^static const char dmenufont[]       = "monospace:size=10";$/;"	v	typeref:typename:const char[]	file:
dmenumon	suckless/.suckless/dwm/config.def.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dmenumon	suckless/.suckless/dwm/config.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
doinitspawn	suckless/.suckless/tabbed/tabbed.c	/^static Bool running = True, nextfocus, doinitspawn = True,$/;"	v	typeref:typename:Bool	file:
dom	bin/.bin/pp	/^    $dom = dom_import_simplexml($simpleXML)->ownerDocument;$/;"	v
doubleclicktimeout	suckless/.suckless/st/config.def.h	/^static unsigned int doubleclicktimeout = 300;$/;"	v	typeref:typename:unsigned int
doubleclicktimeout	suckless/.suckless/st/config.h	/^static unsigned int doubleclicktimeout = 300;$/;"	v	typeref:typename:unsigned int
download	suckless/.suckless/surf/surf.c	/^download(Client *c, WebKitURIResponse *r)$/;"	f	typeref:typename:void
download_path	weechat/.weechat/xfer.conf	/^download_path = "%h\/xfer"$/;"	k	section:file
download_timeout	weechat/.weechat/script.conf	/^download_timeout = 30$/;"	k	section:scripts
downloadstarted	suckless/.suckless/surf/surf.c	/^downloadstarted(WebKitWebContext *wc, WebKitDownload *d, Client *c)$/;"	f	typeref:typename:void
dpy	suckless/.suckless/dmenu/dmenu.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
dpy	suckless/.suckless/dmenu/drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	suckless/.suckless/dmenu/drw.h	/^	Display *dpy;$/;"	m	struct:__anonacedaf960308	typeref:typename:Display *
dpy	suckless/.suckless/dwm/drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	suckless/.suckless/dwm/drw.h	/^	Display *dpy;$/;"	m	struct:__anon3552f5450308	typeref:typename:Display *
dpy	suckless/.suckless/dwm/dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
dpy	suckless/.suckless/st/x.c	/^	Display *dpy;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Display *	file:
dpy	suckless/.suckless/surf/surf.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
dpy	suckless/.suckless/tabbed/tabbed.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
draw	suckless/.suckless/st/st.c	/^draw(void)$/;"	f	typeref:typename:void
draw	suckless/.suckless/st/x.c	/^	Draw draw;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Draw	file:
drawable	suckless/.suckless/dmenu/drw.h	/^	Drawable drawable;$/;"	m	struct:__anonacedaf960308	typeref:typename:Drawable
drawable	suckless/.suckless/dwm/drw.h	/^	Drawable drawable;$/;"	m	struct:__anon3552f5450308	typeref:typename:Drawable
drawable	suckless/.suckless/tabbed/tabbed.c	/^	Drawable drawable;$/;"	m	struct:__anon0f72b96f0508	typeref:typename:Drawable	file:
drawbar	suckless/.suckless/dwm/dwm.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbar	suckless/.suckless/tabbed/tabbed.c	/^drawbar(void)$/;"	f	typeref:typename:void
drawbars	suckless/.suckless/dwm/dwm.c	/^drawbars(void)$/;"	f	typeref:typename:void
drawitem	suckless/.suckless/dmenu/dmenu.c	/^drawitem(struct item *item, int x, int y, int w)$/;"	f	typeref:typename:int	file:
drawmenu	suckless/.suckless/dmenu/dmenu.c	/^drawmenu(void)$/;"	f	typeref:typename:void	file:
drawregion	suckless/.suckless/st/st.c	/^drawregion(int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
drawtext	suckless/.suckless/tabbed/tabbed.c	/^drawtext(const char *text, XftColor col[ColLast])$/;"	f	typeref:typename:void
drw	suckless/.suckless/dmenu/dmenu.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw	suckless/.suckless/dwm/dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw_clr_create	suckless/.suckless/dmenu/drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	f	typeref:typename:void
drw_clr_create	suckless/.suckless/dwm/drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	f	typeref:typename:void
drw_create	suckless/.suckless/dmenu/drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)$/;"	f	typeref:typename:Drw *
drw_create	suckless/.suckless/dwm/drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)$/;"	f	typeref:typename:Drw *
drw_cur_create	suckless/.suckless/dmenu/drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *
drw_cur_create	suckless/.suckless/dwm/drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *
drw_cur_free	suckless/.suckless/dmenu/drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void
drw_cur_free	suckless/.suckless/dwm/drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void
drw_font_getexts	suckless/.suckless/dmenu/drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void
drw_font_getexts	suckless/.suckless/dwm/drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void
drw_fontset_create	suckless/.suckless/dmenu/drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *
drw_fontset_create	suckless/.suckless/dwm/drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *
drw_fontset_free	suckless/.suckless/dmenu/drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void
drw_fontset_free	suckless/.suckless/dwm/drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void
drw_fontset_getwidth	suckless/.suckless/dmenu/drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text)$/;"	f	typeref:typename:unsigned int
drw_fontset_getwidth	suckless/.suckless/dwm/drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text)$/;"	f	typeref:typename:unsigned int
drw_free	suckless/.suckless/dmenu/drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void
drw_free	suckless/.suckless/dwm/drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void
drw_map	suckless/.suckless/dmenu/drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_map	suckless/.suckless/dwm/drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_rect	suckless/.suckless/dmenu/drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void
drw_rect	suckless/.suckless/dwm/drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void
drw_resize	suckless/.suckless/dmenu/drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_resize	suckless/.suckless/dwm/drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_scm_create	suckless/.suckless/dmenu/drw.c	/^drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)$/;"	f	typeref:typename:Clr *
drw_scm_create	suckless/.suckless/dwm/drw.c	/^drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)$/;"	f	typeref:typename:Clr *
drw_setfontset	suckless/.suckless/dmenu/drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void
drw_setfontset	suckless/.suckless/dwm/drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void
drw_setscheme	suckless/.suckless/dmenu/drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void
drw_setscheme	suckless/.suckless/dwm/drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void
drw_text	suckless/.suckless/dmenu/drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int
drw_text	suckless/.suckless/dwm/drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int
during_search	weechat/.weechat/aspell.conf	/^during_search = off$/;"	k	section:check
dwindle	suckless/.suckless/dwm/fibonacci.c	/^dwindle(Monitor *mon) {$/;"	f	typeref:typename:void
dwm	README.md	/^#### dwm$/;"	t
dwm	suckless/.suckless/dwm/Makefile	/^dwm: ${OBJ}$/;"	t
dwm-6.2/dwm.c	suckless/.suckless/dwm/diffs/dwm-fakefullscreen-toggle.diff	/^--- dwm-6.2\/dwm.c	2019-02-02 13:55:28.000000000 +0100$/;"	m
dwm/dwm.c.orig	suckless/.suckless/dwm/diffs/dwm-single_tagset-20160731-56a31dc.diff	/^--- dwm\/dwm.c.orig$/;"	m
dwm/dwm.c.orig	suckless/.suckless/dwm/diffs/dwm-uselessgap-6.1.diff	/^--- dwm\/dwm.c.orig	2015-11-22 13:26:16.664650238 -0700$/;"	m
eat_newline_glitch	weechat/.weechat/weechat.conf	/^eat_newline_glitch = off$/;"	k	section:look
ecalloc	suckless/.suckless/dmenu/util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ecalloc	suckless/.suckless/dwm/util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ecalloc	suckless/.suckless/tabbed/tabbed.c	/^ecalloc(size_t n, size_t size)$/;"	f	typeref:typename:void *
echoerr	bin/.bin/stowsh	/^echoerr() {$/;"	f
edit	bin/.bin/open	/^sub edit$/;"	s
embed	suckless/.suckless/dmenu/dmenu.c	/^static char *embed;$/;"	v	typeref:typename:char *	file:
embed	suckless/.suckless/surf/surf.c	/^static Window embed;$/;"	v	typeref:typename:Window	file:
emphasized	weechat/.weechat/weechat.conf	/^emphasized = yellow$/;"	k	section:color
emphasized_attributes	weechat/.weechat/weechat.conf	/^emphasized_attributes = ""$/;"	k	section:look
emphasized_bg	weechat/.weechat/weechat.conf	/^emphasized_bg = magenta$/;"	k	section:color
enabled	weechat/.weechat/aspell.conf	/^enabled = on$/;"	k	section:check
enabled	weechat/.weechat/buflist.conf	/^enabled = on$/;"	k	section:look
enabled	weechat/.weechat/fifo.conf	/^enabled = on$/;"	k	section:file
enabled	weechat/.weechat/trigger.conf	/^beep.enabled = on$/;"	k	section:trigger
enabled	weechat/.weechat/trigger.conf	/^cmd_pass.enabled = on$/;"	k	section:trigger
enabled	weechat/.weechat/trigger.conf	/^cmd_pass_register.enabled = on$/;"	k	section:trigger
enabled	weechat/.weechat/trigger.conf	/^enabled = on$/;"	k	section:look
enabled	weechat/.weechat/trigger.conf	/^msg_auth.enabled = on$/;"	k	section:trigger
enabled	weechat/.weechat/trigger.conf	/^server_pass.enabled = on$/;"	k	section:trigger
encode	weechat/.weechat/charset.conf	/^[encode]$/;"	s
encode	weechat/.weechat/charset.conf	/^encode = ""$/;"	k	section:default
enternotify	suckless/.suckless/dwm/dwm.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
erealloc	suckless/.suckless/tabbed/tabbed.c	/^erealloc(void *o, size_t size)$/;"	f	typeref:typename:void *
errorpage	suckless/.suckless/surf/surf.c	/^	int progress, fullscreen, https, insecure, errorpage;$/;"	m	struct:Client	typeref:typename:int	file:
esc	suckless/.suckless/st/st.c	/^	int esc;      \/* escape state flags *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
escape_state	suckless/.suckless/st/st.c	/^enum escape_state {$/;"	g	file:
eschandle	suckless/.suckless/st/st.c	/^eschandle(uchar ascii)$/;"	f	typeref:typename:int
eval_keep_context	weechat/.weechat/lua.conf	/^eval_keep_context = on$/;"	k	section:look
eval_keep_context	weechat/.weechat/perl.conf	/^eval_keep_context = on$/;"	k	section:look
eval_keep_context	weechat/.weechat/python.conf	/^eval_keep_context = on$/;"	k	section:look
eval_keep_context	weechat/.weechat/ruby.conf	/^eval_keep_context = on$/;"	k	section:look
evalscript	suckless/.suckless/surf/surf.c	/^evalscript(Client *c, const char *jsstr, ...)$/;"	f	typeref:typename:void
evcol	suckless/.suckless/st/x.c	/^evcol(XEvent *e)$/;"	f	typeref:typename:int
evrow	suckless/.suckless/st/x.c	/^evrow(XEvent *e)$/;"	f	typeref:typename:int
execsh	suckless/.suckless/st/st.c	/^execsh(char *cmd, char **args)$/;"	f	typeref:typename:void
export_help	weechat/.weechat/fset.conf	/^export_help = "# ${description2}"$/;"	k	section:format
export_help_default	weechat/.weechat/fset.conf	/^export_help_default = on$/;"	k	section:look
export_option	weechat/.weechat/fset.conf	/^export_option = "\/set ${name} ${quoted_value}"$/;"	k	section:format
export_option_null	weechat/.weechat/fset.conf	/^export_option_null = "\/unset ${name}"$/;"	k	section:format
expose	suckless/.suckless/dwm/dwm.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
expose	suckless/.suckless/st/x.c	/^expose(XEvent *ev)$/;"	f	typeref:typename:void
expose	suckless/.suckless/tabbed/tabbed.c	/^expose(const XEvent *e)$/;"	f	typeref:typename:void
extension	weechat/.weechat/weechat.conf	/^extension = ".so,.dll"$/;"	k	section:plugin
f	suckless/.suckless/dwm/dwm.c	/^	float f;$/;"	m	union:__anon3555889b060a	typeref:typename:float	file:
f	suckless/.suckless/st/st.h	/^	float f;$/;"	m	union:__anon140a125e020a	typeref:typename:float
f	suckless/.suckless/surf/surf.c	/^	float f;$/;"	m	union:__anonb95973ab040a	typeref:typename:float	file:
f	weechat/.weechat/weechat.conf	/^meta-f = "\/input move_next_word"$/;"	k	section:key
f	weechat/.weechat/weechat.conf	/^meta-jmeta-f = "\/buffer -"$/;"	k	section:key
failedcert	suckless/.suckless/surf/surf.c	/^	GTlsCertificate *cert, *failedcert;$/;"	m	struct:Client	typeref:typename:GTlsCertificate **	file:
fast_send	weechat/.weechat/xfer.conf	/^fast_send = on$/;"	k	section:network
fg	suckless/.suckless/st/st.h	/^	uint32_t fg;      \/* foreground  *\/$/;"	m	struct:__anon140a125e0108	typeref:typename:uint32_t
fibonacci	suckless/.suckless/dwm/fibonacci.c	/^fibonacci(Monitor *mon, int s) {$/;"	f	typeref:typename:void
file	bin/.bin/open	/^file:$/;"	l
file	suckless/.suckless/surf/surf.c	/^	char *file;$/;"	m	struct:__anonb95973ab0a08	typeref:typename:char *	file:
file	weechat/.weechat/fifo.conf	/^[file]$/;"	s
file	weechat/.weechat/fset.conf	/^file = default$/;"	k	section:color
file	weechat/.weechat/logger.conf	/^[file]$/;"	s
file	weechat/.weechat/xfer.conf	/^[file]$/;"	s
file_changed	weechat/.weechat/fset.conf	/^file_changed = brown$/;"	k	section:color
file_changed_selected	weechat/.weechat/fset.conf	/^file_changed_selected = yellow$/;"	k	section:color
file_selected	weechat/.weechat/fset.conf	/^file_selected = white$/;"	k	section:color
filetypedetect	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^        augroup filetypedetect$/;"	a
fillagain	suckless/.suckless/tabbed/tabbed.c	/^            fillagain = False, closelastclient = False,$/;"	v	typeref:typename:Bool	file:
filling_left_right	weechat/.weechat/weechat.conf	/^buddylist.filling_left_right = vertical$/;"	k	section:bar
filling_left_right	weechat/.weechat/weechat.conf	/^buflist.filling_left_right = vertical$/;"	k	section:bar
filling_left_right	weechat/.weechat/weechat.conf	/^fset.filling_left_right = vertical$/;"	k	section:bar
filling_left_right	weechat/.weechat/weechat.conf	/^input.filling_left_right = vertical$/;"	k	section:bar
filling_left_right	weechat/.weechat/weechat.conf	/^nicklist.filling_left_right = vertical$/;"	k	section:bar
filling_left_right	weechat/.weechat/weechat.conf	/^status.filling_left_right = vertical$/;"	k	section:bar
filling_left_right	weechat/.weechat/weechat.conf	/^title.filling_left_right = vertical$/;"	k	section:bar
filling_top_bottom	weechat/.weechat/weechat.conf	/^buddylist.filling_top_bottom = horizontal$/;"	k	section:bar
filling_top_bottom	weechat/.weechat/weechat.conf	/^buflist.filling_top_bottom = columns_vertical$/;"	k	section:bar
filling_top_bottom	weechat/.weechat/weechat.conf	/^fset.filling_top_bottom = horizontal$/;"	k	section:bar
filling_top_bottom	weechat/.weechat/weechat.conf	/^input.filling_top_bottom = horizontal$/;"	k	section:bar
filling_top_bottom	weechat/.weechat/weechat.conf	/^nicklist.filling_top_bottom = columns_vertical$/;"	k	section:bar
filling_top_bottom	weechat/.weechat/weechat.conf	/^status.filling_top_bottom = horizontal$/;"	k	section:bar
filling_top_bottom	weechat/.weechat/weechat.conf	/^title.filling_top_bottom = horizontal$/;"	k	section:bar
filter	weechat/.weechat/weechat.conf	/^[filter]$/;"	s
find	suckless/.suckless/surf/surf.c	/^find(Client *c, const Arg *a)$/;"	f	typeref:typename:void
find_header	bin/.bin/open	/^		sub find_header$/;"	s
finder	suckless/.suckless/surf/surf.c	/^	WebKitFindController *finder;$/;"	m	struct:Client	typeref:typename:WebKitFindController *	file:
findopts	suckless/.suckless/surf/config.def.h	/^static WebKitFindOptions findopts = WEBKIT_FIND_OPTIONS_CASE_INSENSITIVE |$/;"	v	typeref:typename:WebKitFindOptions
findopts	suckless/.suckless/surf/config.h	/^static WebKitFindOptions findopts = WEBKIT_FIND_OPTIONS_CASE_INSENSITIVE |$/;"	v	typeref:typename:WebKitFindOptions
flag	suckless/.suckless/dmenu/stest.c	/^static int flag[26];$/;"	v	typeref:typename:int[26]	file:
flag_command	weechat/.weechat/trigger.conf	/^flag_command = lightgreen$/;"	k	section:color
flag_conditions	weechat/.weechat/trigger.conf	/^flag_conditions = yellow$/;"	k	section:color
flag_finished	weechat/.weechat/exec.conf	/^flag_finished = lightred$/;"	k	section:color
flag_post_action	weechat/.weechat/trigger.conf	/^flag_post_action = lightblue$/;"	k	section:color
flag_regex	weechat/.weechat/trigger.conf	/^flag_regex = lightcyan$/;"	k	section:color
flag_return_code	weechat/.weechat/trigger.conf	/^flag_return_code = lightmagenta$/;"	k	section:color
flag_running	weechat/.weechat/exec.conf	/^flag_running = lightgreen$/;"	k	section:color
flags	suckless/.suckless/st/x.c	/^	int flags;$/;"	m	struct:__anon6574b7aa0a08	typeref:typename:int	file:
flush_delay	weechat/.weechat/logger.conf	/^flush_delay = 120$/;"	k	section:file
focus	suckless/.suckless/dwm/dwm.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focus	suckless/.suckless/st/x.c	/^focus(XEvent *ev)$/;"	f	typeref:typename:void
focus	suckless/.suckless/tabbed/tabbed.c	/^focus(int c)$/;"	f	typeref:typename:void
focusin	suckless/.suckless/dwm/dwm.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusin	suckless/.suckless/tabbed/tabbed.c	/^focusin(const XEvent *e)$/;"	f	typeref:typename:void
focusmon	suckless/.suckless/dwm/dwm.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusonce	suckless/.suckless/tabbed/tabbed.c	/^focusonce(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	suckless/.suckless/dwm/dwm.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
focusurgent	suckless/.suckless/tabbed/tabbed.c	/^focusurgent(const Arg *arg)$/;"	f	typeref:typename:void
font	suckless/.suckless/st/config.def.h	/^static char *font = "Liberation Mono:pixelsize=12:antialias=true:autohint=true";$/;"	v	typeref:typename:char *
font	suckless/.suckless/st/config.h	/^static char *font = "Office Code Pro Medium:pixelsize=14:antialias=true:autohint=true";$/;"	v	typeref:typename:char *
font	suckless/.suckless/st/x.c	/^	Font font, bfont, ifont, ibfont;$/;"	m	struct:__anon6574b7aa0808	typeref:typename:Font	file:
font	suckless/.suckless/st/x.c	/^	XftFont *font;$/;"	m	struct:__anon6574b7aa0a08	typeref:typename:XftFont *	file:
font	suckless/.suckless/tabbed/config.def.h	/^static const char font[]        = "monospace:size=9";$/;"	v	typeref:typename:const char[]
font	suckless/.suckless/tabbed/config.h	/^static const char font[]        = "monospace:size=9";$/;"	v	typeref:typename:const char[]
font	suckless/.suckless/tabbed/tabbed.c	/^	} font;$/;"	m	struct:__anon0f72b96f0508	typeref:struct:__anon0f72b96f0508::__anon0f72b96f0608	file:
fonts	suckless/.suckless/dmenu/config.def.h	/^static const char *fonts[] = {$/;"	v	typeref:typename:const char * []
fonts	suckless/.suckless/dmenu/config.h	/^static const char *fonts[] = {$/;"	v	typeref:typename:const char * []
fonts	suckless/.suckless/dmenu/drw.h	/^	Fnt *fonts;$/;"	m	struct:__anonacedaf960308	typeref:typename:Fnt *
fonts	suckless/.suckless/dwm/config.def.h	/^static const char *fonts[]          = { "monospace:size=10" };$/;"	v	typeref:typename:const char * []
fonts	suckless/.suckless/dwm/drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon3552f5450308	typeref:typename:Fnt *
fonts	suckless/.suckless/dwm/themes/default.c	/^static const char *fonts[]          = { "Office Code Pro Medium:size=10" };$/;"	v	typeref:typename:const char * []	file:
fonts	suckless/.suckless/dwm/themes/nord.c	/^static const char *fonts[]          = { "Office Code Pro Medium:size=10",$/;"	v	typeref:typename:const char * []	file:
fonts	suckless/.suckless/dwm/themes/onedark.c	/^static const char *fonts[]          = { "Office Code Pro Medium:size=10",$/;"	v	typeref:typename:const char * []	file:
forceselmod	suckless/.suckless/st/config.def.h	/^static uint forceselmod = ShiftMask;$/;"	v	typeref:typename:uint
forceselmod	suckless/.suckless/st/config.h	/^static uint forceselmod = ShiftMask;$/;"	v	typeref:typename:uint
foreground	suckless/.suckless/tabbed/config.def.h	/^static const Bool foreground    = True;$/;"	v	typeref:typename:const Bool
foreground	suckless/.suckless/tabbed/config.h	/^static const Bool foreground    = True;$/;"	v	typeref:typename:const Bool
format	weechat/.weechat/buflist.conf	/^[format]$/;"	s
format	weechat/.weechat/fset.conf	/^[format]$/;"	s
format_number	weechat/.weechat/fset.conf	/^format_number = 1$/;"	k	section:look
frc	suckless/.suckless/st/x.c	/^static Fontcache *frc = NULL;$/;"	v	typeref:typename:Fontcache *	file:
frccap	suckless/.suckless/st/x.c	/^static int frccap = 0;$/;"	v	typeref:typename:int	file:
frclen	suckless/.suckless/st/x.c	/^static int frclen = 0;$/;"	v	typeref:typename:int	file:
fstrncmp	suckless/.suckless/dmenu/dmenu.c	/^static int (*fstrncmp)(const char *, const char *, size_t) = strncmp;$/;"	v	typeref:typename:int (*)(const char *,const char *,size_t)	file:
fstrstr	suckless/.suckless/dmenu/dmenu.c	/^static char *(*fstrstr)(const char *, const char *) = strstr;$/;"	v	typeref:typename:char * (*)(const char *,const char *)	file:
fsync	weechat/.weechat/logger.conf	/^fsync = off$/;"	k	section:file
fullscreen	suckless/.suckless/surf/surf.c	/^	int progress, fullscreen, https, insecure, errorpage;$/;"	m	struct:Client	typeref:typename:int	file:
fullscreen	suckless/.suckless/tabbed/tabbed.c	/^fullscreen(const Arg *arg)$/;"	f	typeref:typename:void
fulluseragent	suckless/.suckless/surf/config.def.h	/^static char *fulluseragent  = ""; \/* Or override the whole user agent string *\/$/;"	v	typeref:typename:char *
fulluseragent	suckless/.suckless/surf/config.h	/^static char *fulluseragent  = ""; \/* Or override the whole user agent string *\/$/;"	v	typeref:typename:char *
func	suckless/.suckless/dwm/dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon3555889b0808	typeref:typename:void (*)(const Arg *)	file:
func	suckless/.suckless/dwm/dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anon3555889b0708	typeref:typename:void (*)(const Arg * arg)	file:
func	suckless/.suckless/st/st.h	/^	 void (*func)(const Arg *);$/;"	m	struct:__anon140a125e0308	typeref:typename:void (*)(const Arg *)
func	suckless/.suckless/st/x.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon6574b7aa0108	typeref:typename:void (*)(const Arg *)	file:
func	suckless/.suckless/surf/surf.c	/^	void (*func)(Client *c, const Arg *a);$/;"	m	struct:__anonb95973ab0608	typeref:typename:void (*)(Client * c,const Arg * a)	file:
func	suckless/.suckless/surf/surf.c	/^	void (*func)(Client *c, const Arg *a, WebKitHitTestResult *h);$/;"	m	struct:__anonb95973ab0708	typeref:typename:void (*)(Client * c,const Arg * a,WebKitHitTestResult * h)	file:
func	suckless/.suckless/tabbed/tabbed.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon0f72b96f0408	typeref:typename:void (*)(const Arg *)	file:
fuzzymatch	suckless/.suckless/dmenu/dmenu.c	/^fuzzymatch(void)$/;"	f	typeref:typename:void	file:
g:AutoPairsFlyMode	config/.config/nvim/init.vim	/^let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsShortcutBackInsert	config/.config/nvim/init.vim	/^let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsUseInsertedCount	config/.config/nvim/init.vim	/^	let g:AutoPairsUseInsertedCount = 1$/;"	v
g:Illuminate_delay	config/.config/nvim/init.vim	/^	let g:Illuminate_delay = 250$/;"	v
g:Illuminate_ftHighlightGroups	config/.config/nvim/init.vim	/^	let g:Illuminate_ftHighlightGroups = {$/;"	v
g:Illuminate_ftblacklist	config/.config/nvim/init.vim	/^	let g:Illuminate_ftblacklist = ['nerdtree']$/;"	v
g:JavaComplete_LibsPath	config/.config/nvim/init.vim	/^let g:JavaComplete_LibsPath = "~\/java\/algs4.jar"$/;"	v
g:OmniSharp_selector_ui	config/.config/nvim/init.vim	/^		let g:OmniSharp_selector_ui = 'ctrlp'  " Use ctrlp.vim$/;"	v
g:UltiSnipsEditSplit	config/.config/nvim/init.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsJumpBackwardTrigger	config/.config/nvim/init.vim	/^let g:UltiSnipsJumpBackwardTrigger="<c-z>"$/;"	v
g:UltiSnipsJumpForwardTrigger	config/.config/nvim/init.vim	/^let g:UltiSnipsJumpForwardTrigger="<c-b>"$/;"	v
g:UltiSnipsSnippetDirectories	config/.config/nvim/init.vim	/^let g:UltiSnipsSnippetDirectories = ['~\/.dotfiles\/config\/.config\/nvim\/UltiSnips', 'UltiSnip/;"	v
g:_plug_bang	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:ale_completion_enabled	config/.config/nvim/init.vim	/^let g:ale_completion_enabled = 1$/;"	v
g:ale_echo_msg_error_str	config/.config/nvim/init.vim	/^let g:ale_echo_msg_error_str = 'E'$/;"	v
g:ale_echo_msg_format	config/.config/nvim/init.vim	/^let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'$/;"	v
g:ale_echo_msg_warning_str	config/.config/nvim/init.vim	/^let g:ale_echo_msg_warning_str = 'W'$/;"	v
g:ale_enable	config/.config/nvim/init.vim	/^let g:ale_enable = 1 $/;"	v
g:ale_fix_on_save	config/.config/nvim/init.vim	/^let g:ale_fix_on_save = 1$/;"	v
g:ale_fixers	config/.config/nvim/init.vim	/^let g:ale_fixers = {$/;"	v
g:ale_java_javac_classpath	config/.config/nvim/init.vim	/^let g:ale_java_javac_classpath = "\/usr\/local\/algs4\/algs4.jar"$/;"	v
g:ale_linters	config/.config/nvim/init.vim	/^let g:ale_linters = {$/;"	v
g:ale_sign_column_always	config/.config/nvim/init.vim	/^let g:ale_sign_column_always = 1 " Keeps the error column open$/;"	v
g:ale_sign_error	config/.config/nvim/init.vim	/^let g:ale_sign_error = ''$/;"	v
g:ale_sign_warning	config/.config/nvim/init.vim	/^let g:ale_sign_warning = '>?'$/;"	v
g:closetag_filenames	config/.config/nvim/init.vim	/^	let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.php,*.jsx,*.js"$/;"	v
g:ctrlp_by_filename	config/.config/nvim/init.vim	/^	let g:ctrlp_by_filename = 1$/;"	v
g:ctrlp_custom_ignore	config/.config/nvim/init.vim	/^	let g:ctrlp_custom_ignore = {$/;"	v
g:deoplete#auto_completion_start_length	config/.config/nvim/init.vim	/^	let g:deoplete#auto_completion_start_length = 2$/;"	v
g:deoplete#enable_at_startup	config/.config/nvim/init.vim	/^	let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#file#enable_buffer_path	config/.config/nvim/init.vim	/^	let g:deoplete#file#enable_buffer_path = 1$/;"	v
g:deoplete#omni_patterns	config/.config/nvim/init.vim	/^	let g:deoplete#omni_patterns = {}$/;"	v
g:deoplete#sources	config/.config/nvim/init.vim	/^	let g:deoplete#sources = {}$/;"	v
g:deoplete#sources	config/.config/nvim/init.vim	/^	let g:deoplete#sources._ = []$/;"	v
g:deoplete#sources#ternjs#filetypes	config/.config/nvim/init.vim	/^	let g:deoplete#sources#ternjs#filetypes = [$/;"	v
g:gitgutter_async	config/.config/nvim/init.vim	/^		let g:gitgutter_async = 1$/;"	v
g:gitgutter_max_signs	config/.config/nvim/init.vim	/^		let g:gitgutter_max_signs = 500  " default value$/;"	v
g:gitgutter_sign_added	config/.config/nvim/init.vim	/^		let g:gitgutter_sign_added = '|'$/;"	v
g:gitgutter_sign_modified	config/.config/nvim/init.vim	/^		let g:gitgutter_sign_modified = '|'$/;"	v
g:gitgutter_sign_removed	config/.config/nvim/init.vim	/^		let g:gitgutter_sign_removed = '|'$/;"	v
g:lightline	config/.config/nvim/init.vim	/^let g:lightline = {$/;"	v
g:loaded_plug	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:md_pdf_engine	config/.config/nvim/init.vim	/^			let g:md_pdf_engine='pdflatex'	$/;"	v
g:md_pdf_viewer	config/.config/nvim/init.vim	/^			let g:md_pdf_viewer='zathura'$/;"	v
g:move_key_modifier	config/.config/nvim/init.vim	/^let g:move_key_modifier = 'C' $/;"	v
g:pandoc#filetypes#handled	config/.config/nvim/init.vim	/^let g:pandoc#filetypes#handled = ["pandoc", "markdown"]$/;"	v
g:pandoc#filetypes#pandoc_markdown	config/.config/nvim/init.vim	/^let g:pandoc#filetypes#pandoc_markdown = 0$/;"	v
g:plug_home	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:startify_bookmarks	config/.config/nvim/init.vim	/^    let g:startify_bookmarks = [$/;"	v
g:tex_flavor	config/.config/nvim/init.vim	/^let g:tex_flavor = 'latex'$/;"	v
g:vimtex_compiler_progname	config/.config/nvim/init.vim	/^let g:vimtex_compiler_progname = 'nvr'$/;"	v
g:vimtex_view_method	config/.config/nvim/init.vim	/^let g:vimtex_view_method = 'zathura'$/;"	v
gappx	suckless/.suckless/dwm/config.h	/^static const unsigned int gappx     = 6;        \/* gap pixel between windows *\/$/;"	v	typeref:typename:const unsigned int
gc	suckless/.suckless/dmenu/drw.h	/^	GC gc;$/;"	m	struct:__anonacedaf960308	typeref:typename:GC
gc	suckless/.suckless/dwm/drw.h	/^	GC gc;$/;"	m	struct:__anon3552f5450308	typeref:typename:GC
gc	suckless/.suckless/st/x.c	/^	GC gc;$/;"	m	struct:__anon6574b7aa0808	typeref:typename:GC	file:
gc	suckless/.suckless/tabbed/tabbed.c	/^	GC gc;$/;"	m	struct:__anon0f72b96f0508	typeref:typename:GC	file:
gdkkb	suckless/.suckless/surf/surf.c	/^static GdkDevice *gdkkb;$/;"	v	typeref:typename:GdkDevice *	file:
gen_list	bin/.bin/book-search	/^gen_list(){$/;"	f
geometry	suckless/.suckless/tabbed/tabbed.c	/^static const char *geometry;$/;"	v	typeref:typename:const char *	file:
get_books	bin/.bin/book-search	/^get_books() {$/;"	f
get_brightness	bin/.bin/brightness	/^function get_brightness {$/;"	f
get_dwm_path	suckless/.suckless/dwm/selfrestart.c	/^char *get_dwm_path(){$/;"	f	typeref:typename:char *
getatom	suckless/.suckless/surf/surf.c	/^getatom(Client *c, int a)$/;"	f	typeref:typename:const char *
getatom	suckless/.suckless/tabbed/tabbed.c	/^getatom(int a)$/;"	f	typeref:typename:char *
getatomprop	suckless/.suckless/dwm/dwm.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getcert	suckless/.suckless/surf/surf.c	/^getcert(const char *uri)$/;"	f	typeref:typename:const char *
getclient	suckless/.suckless/tabbed/tabbed.c	/^getclient(Window w)$/;"	f	typeref:typename:int
getcolor	suckless/.suckless/tabbed/tabbed.c	/^getcolor(const char *colstr)$/;"	f	typeref:typename:XftColor
getcurrentuserhomedir	suckless/.suckless/surf/surf.c	/^getcurrentuserhomedir(void)$/;"	f	typeref:typename:const char *	file:
getenv	bin/.bin/open	/^				sub getenv$/;"	s
getfirsttab	suckless/.suckless/tabbed/tabbed.c	/^getfirsttab(void)$/;"	f	typeref:typename:int
getpagestats	suckless/.suckless/surf/surf.c	/^getpagestats(Client *c)$/;"	f	typeref:typename:void
getrootptr	suckless/.suckless/dwm/dwm.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getsel	suckless/.suckless/st/st.c	/^getsel(void)$/;"	f	typeref:typename:char *
getstate	suckless/.suckless/dwm/dwm.c	/^getstate(Window w)$/;"	f	typeref:typename:long
getstyle	suckless/.suckless/surf/surf.c	/^getstyle(const char *uri)$/;"	f	typeref:typename:const char *
gettextprop	suckless/.suckless/dwm/dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
gettextprop	suckless/.suckless/tabbed/tabbed.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:Bool
gettogglestats	suckless/.suckless/surf/surf.c	/^gettogglestats(Client *c)$/;"	f	typeref:typename:void
geturi	suckless/.suckless/surf/surf.c	/^geturi(Client *c)$/;"	f	typeref:typename:const char *
getuserhomedir	suckless/.suckless/surf/surf.c	/^getuserhomedir(const char *user)$/;"	f	typeref:typename:const char *	file:
gitinit	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^gitinit() ($/;"	f
glyph_attribute	suckless/.suckless/st/st.h	/^enum glyph_attribute {$/;"	g
gm	suckless/.suckless/st/x.c	/^	int gm; \/* geometry mask *\/$/;"	m	struct:__anon6574b7aa0508	typeref:typename:int	file:
gnutls_ca_file	weechat/.weechat/weechat.conf	/^gnutls_ca_file = "\/etc\/ssl\/certs\/ca-certificates.crt"$/;"	k	section:network
gnutls_handshake_timeout	weechat/.weechat/weechat.conf	/^gnutls_handshake_timeout = 30$/;"	k	section:network
grabbuttons	suckless/.suckless/dwm/dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabfocus	suckless/.suckless/dmenu/dmenu.c	/^grabfocus(void)$/;"	f	typeref:typename:void	file:
grabkeyboard	suckless/.suckless/dmenu/dmenu.c	/^grabkeyboard(void)$/;"	f	typeref:typename:void	file:
grabkeys	suckless/.suckless/dwm/dwm.c	/^grabkeys(void)$/;"	f	typeref:typename:void
h	suckless/.suckless/dmenu/drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	suckless/.suckless/dmenu/drw.h	/^	unsigned int w, h;$/;"	m	struct:__anonacedaf960308	typeref:typename:unsigned int
h	suckless/.suckless/dwm/drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	suckless/.suckless/dwm/drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon3552f5450308	typeref:typename:unsigned int
h	suckless/.suckless/dwm/dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
h	suckless/.suckless/st/x.c	/^	int w, h; \/* window width and height *\/$/;"	m	struct:__anon6574b7aa0408	typeref:typename:int	file:
h	suckless/.suckless/tabbed/tabbed.c	/^	int x, y, w, h;$/;"	m	struct:__anon0f72b96f0508	typeref:typename:int	file:
h	weechat/.weechat/weechat.conf	/^meta-h = "\/input hotlist_clear"$/;"	k	section:key
handleplumb	suckless/.suckless/surf/surf.c	/^handleplumb(Client *c, const char *uri)$/;"	f	typeref:typename:void
handler	suckless/.suckless/dwm/dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
handler	suckless/.suckless/st/x.c	/^static void (*handler[LASTEvent])(XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
handler	suckless/.suckless/tabbed/tabbed.c	/^static void (*handler[LASTEvent]) (const XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(const XEvent *)	file:
header_edit	bin/.bin/open	/^sub header_edit$/;"	s
height	suckless/.suckless/st/x.c	/^	int height;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:int	file:
height	suckless/.suckless/tabbed/tabbed.c	/^		int height;$/;"	m	struct:__anon0f72b96f0508::__anon0f72b96f0608	typeref:typename:int	file:
help_default_value	weechat/.weechat/fset.conf	/^help_default_value = white$/;"	k	section:color
help_description	weechat/.weechat/fset.conf	/^help_description = default$/;"	k	section:color
help_name	weechat/.weechat/fset.conf	/^help_name = white$/;"	k	section:color
help_quotes	weechat/.weechat/fset.conf	/^help_quotes = darkgray$/;"	k	section:color
help_values	weechat/.weechat/fset.conf	/^help_values = default$/;"	k	section:color
hidden	weechat/.weechat/weechat.conf	/^buddylist.hidden = on$/;"	k	section:bar
hidden	weechat/.weechat/weechat.conf	/^buflist.hidden = off$/;"	k	section:bar
hidden	weechat/.weechat/weechat.conf	/^fset.hidden = off$/;"	k	section:bar
hidden	weechat/.weechat/weechat.conf	/^input.hidden = off$/;"	k	section:bar
hidden	weechat/.weechat/weechat.conf	/^nicklist.hidden = off$/;"	k	section:bar
hidden	weechat/.weechat/weechat.conf	/^status.hidden = on$/;"	k	section:bar
hidden	weechat/.weechat/weechat.conf	/^title.hidden = off$/;"	k	section:bar
highlight	weechat/.weechat/weechat.conf	/^highlight = ""$/;"	k	section:look
highlight_channel	weechat/.weechat/irc.conf	/^highlight_channel = "$nick"$/;"	k	section:look
highlight_pv	weechat/.weechat/irc.conf	/^highlight_pv = "$nick"$/;"	k	section:look
highlight_regex	weechat/.weechat/weechat.conf	/^highlight_regex = ""$/;"	k	section:look
highlight_server	weechat/.weechat/irc.conf	/^highlight_server = "$nick"$/;"	k	section:look
highlight_tags	weechat/.weechat/weechat.conf	/^highlight_tags = ""$/;"	k	section:look
highlight_tags_restrict	weechat/.weechat/irc.conf	/^highlight_tags_restrict = "irc_privmsg,irc_notice"$/;"	k	section:look
hist	suckless/.suckless/st/st.c	/^	Line hist[HISTSIZE]; \/* history buffer *\/$/;"	m	struct:__anon140a12590408	typeref:typename:Line[]	file:
histbuf	suckless/.suckless/dmenu/dmenu.c	/^static char *histbuf, *histptr;$/;"	v	typeref:typename:char *	file:
histfile	suckless/.suckless/dmenu/dmenu.c	/^static char *histfile;$/;"	v	typeref:typename:char *	file:
histi	suckless/.suckless/st/diffs/.tmux.conf	/^+		term.histi = (term.histi + 1) % HISTSIZE;$/;"	k
histi	suckless/.suckless/st/diffs/.tmux.conf	/^+		term.histi = (term.histi - 1 + HISTSIZE) % HISTSIZE;$/;"	k
histi	suckless/.suckless/st/st.c	/^	int histi;    \/* history index *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
history	weechat/.weechat/weechat.conf	/^[history]$/;"	s
histptr	suckless/.suckless/dmenu/dmenu.c	/^static char *histbuf, *histptr;$/;"	v	typeref:typename:char **	file:
histsz	suckless/.suckless/dmenu/dmenu.c	/^static size_t histsz;$/;"	v	typeref:typename:size_t	file:
hold	weechat/.weechat/script.conf	/^hold = ""$/;"	k	section:scripts
hook	weechat/.weechat/trigger.conf	/^beep.hook = print$/;"	k	section:trigger
hook	weechat/.weechat/trigger.conf	/^cmd_pass.hook = modifier$/;"	k	section:trigger
hook	weechat/.weechat/trigger.conf	/^cmd_pass_register.hook = modifier$/;"	k	section:trigger
hook	weechat/.weechat/trigger.conf	/^msg_auth.hook = modifier$/;"	k	section:trigger
hook	weechat/.weechat/trigger.conf	/^server_pass.hook = modifier$/;"	k	section:trigger
hotlist	weechat/.weechat/buflist.conf	/^hotlist = " ${color:green}(${hotlist}${color:green})"$/;"	k	section:format
hotlist_add_conditions	weechat/.weechat/weechat.conf	/^hotlist_add_conditions = "${away} || ${buffer.num_displayed} == 0 || ${info:relay_client_count,w/;"	k	section:look
hotlist_buffer_separator	weechat/.weechat/weechat.conf	/^hotlist_buffer_separator = ", "$/;"	k	section:look
hotlist_count_max	weechat/.weechat/weechat.conf	/^hotlist_count_max = 2$/;"	k	section:look
hotlist_count_min_msg	weechat/.weechat/weechat.conf	/^hotlist_count_min_msg = 2$/;"	k	section:look
hotlist_highlight	weechat/.weechat/buflist.conf	/^hotlist_highlight = "${color:magenta}"$/;"	k	section:format
hotlist_low	weechat/.weechat/buflist.conf	/^hotlist_low = "${color:white}"$/;"	k	section:format
hotlist_message	weechat/.weechat/buflist.conf	/^hotlist_message = "${color:brown}"$/;"	k	section:format
hotlist_names_count	weechat/.weechat/weechat.conf	/^hotlist_names_count = 3$/;"	k	section:look
hotlist_names_length	weechat/.weechat/weechat.conf	/^hotlist_names_length = 0$/;"	k	section:look
hotlist_names_level	weechat/.weechat/weechat.conf	/^hotlist_names_level = 12$/;"	k	section:look
hotlist_names_merged_buffers	weechat/.weechat/weechat.conf	/^hotlist_names_merged_buffers = off$/;"	k	section:look
hotlist_none	weechat/.weechat/buflist.conf	/^hotlist_none = "${color:default}"$/;"	k	section:format
hotlist_prefix	weechat/.weechat/weechat.conf	/^hotlist_prefix = "H: "$/;"	k	section:look
hotlist_private	weechat/.weechat/buflist.conf	/^hotlist_private = "${color:green}"$/;"	k	section:format
hotlist_remove	weechat/.weechat/weechat.conf	/^hotlist_remove = merged$/;"	k	section:look
hotlist_separator	weechat/.weechat/buflist.conf	/^hotlist_separator = "${color:default},"$/;"	k	section:format
hotlist_short_names	weechat/.weechat/weechat.conf	/^hotlist_short_names = on$/;"	k	section:look
hotlist_sort	weechat/.weechat/weechat.conf	/^hotlist_sort = group_time_asc$/;"	k	section:look
hotlist_suffix	weechat/.weechat/weechat.conf	/^hotlist_suffix = ""$/;"	k	section:look
hotlist_unique_numbers	weechat/.weechat/weechat.conf	/^hotlist_unique_numbers = on$/;"	k	section:look
https	suckless/.suckless/surf/surf.c	/^	int progress, fullscreen, https, insecure, errorpage;$/;"	m	struct:Client	typeref:typename:int	file:
i	suckless/.suckless/dwm/dwm.c	/^	int i;$/;"	m	union:__anon3555889b060a	typeref:typename:int	file:
i	suckless/.suckless/st/diffs/.tmux.conf	/^+	for (i = 0; i < HISTSIZE; i++) {$/;"	k
i	suckless/.suckless/st/st.h	/^	int i;$/;"	m	union:__anon140a125e020a	typeref:typename:int
i	suckless/.suckless/surf/surf.c	/^	int i;$/;"	m	union:__anonb95973ab040a	typeref:typename:int	file:
i	suckless/.suckless/tabbed/tabbed.c	/^	int i;$/;"	m	union:__anon0f72b96f030a	typeref:typename:int	file:
ibfont	suckless/.suckless/st/x.c	/^	Font font, bfont, ifont, ibfont;$/;"	m	struct:__anon6574b7aa0808	typeref:typename:Font	file:
icharset	suckless/.suckless/st/st.c	/^	int icharset; \/* selected charset for sequence *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
id	suckless/.suckless/surf/libsurf-webext.c	/^	guint64 id;$/;"	m	struct:Page	typeref:typename:guint64	file:
ifont	suckless/.suckless/st/x.c	/^	Font font, bfont, ifont, ibfont;$/;"	m	struct:__anon6574b7aa0808	typeref:typename:Font	file:
ignore	weechat/.weechat/irc.conf	/^[ignore]$/;"	s
ignoremod	suckless/.suckless/st/config.def.h	/^static uint ignoremod = Mod2Mask|XK_SWITCH_MOD;$/;"	v	typeref:typename:uint
ignoremod	suckless/.suckless/st/config.h	/^static uint ignoremod = Mod2Mask|XK_SWITCH_MOD;$/;"	v	typeref:typename:uint
inch	suckless/.suckless/dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
incnmaster	suckless/.suckless/dwm/dwm.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incw	suckless/.suckless/dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
indent	weechat/.weechat/buflist.conf	/^indent = "  "$/;"	k	section:format
index	weechat/.weechat/fset.conf	/^index = cyan$/;"	k	section:color
index_selected	weechat/.weechat/fset.conf	/^index_selected = lightcyan$/;"	k	section:color
info_lines	weechat/.weechat/logger.conf	/^info_lines = off$/;"	k	section:file
initfont	suckless/.suckless/tabbed/tabbed.c	/^initfont(const char *fontstr)$/;"	f	typeref:typename:void
initwebextensions	suckless/.suckless/surf/surf.c	/^initwebextensions(WebKitWebContext *wc, Client *c)$/;"	f	typeref:typename:void
input	bin/.bin/pp	/^        $input = trim($body);$/;"	v
input	bin/.bin/pp	/^$input = file_get_contents('php:\/\/stdin');$/;"	v
input	bin/.bin/pp	/^$input = trim($input);$/;"	v
input_actions	weechat/.weechat/weechat.conf	/^input_actions = lightgreen$/;"	k	section:color
input_cursor_scroll	weechat/.weechat/weechat.conf	/^input_cursor_scroll = 20$/;"	k	section:look
input_nick	weechat/.weechat/irc.conf	/^input_nick = lightcyan$/;"	k	section:color
input_share	weechat/.weechat/weechat.conf	/^input_share = none$/;"	k	section:look
input_share_overwrite	weechat/.weechat/weechat.conf	/^input_share_overwrite = off$/;"	k	section:look
input_text_not_found	weechat/.weechat/weechat.conf	/^input_text_not_found = red$/;"	k	section:color
input_undo_max	weechat/.weechat/weechat.conf	/^input_undo_max = 32$/;"	k	section:look
inputw	suckless/.suckless/dmenu/dmenu.c	/^static int inputw = 0, promptw;$/;"	v	typeref:typename:int	file:
insecure	suckless/.suckless/surf/surf.c	/^	int progress, fullscreen, https, insecure, errorpage;$/;"	m	struct:Client	typeref:typename:int	file:
insecurecontent	suckless/.suckless/surf/surf.c	/^insecurecontent(WebKitWebView *v, WebKitInsecureContentEvent e, Client *c)$/;"	f	typeref:typename:void
insert	suckless/.suckless/dmenu/dmenu.c	/^insert(const char *str, ssize_t n)$/;"	f	typeref:typename:void	file:
inspector	suckless/.suckless/surf/surf.c	/^	WebKitWebInspector *inspector;$/;"	m	struct:Client	typeref:typename:WebKitWebInspector *	file:
install	suckless/.suckless/dmenu/Makefile	/^install: all$/;"	t
install	suckless/.suckless/dwm/Makefile	/^install: all$/;"	t
install	suckless/.suckless/st/Makefile	/^install: st$/;"	t
install	suckless/.suckless/surf/Makefile	/^install: all$/;"	t
install	suckless/.suckless/tabbed/Makefile	/^install: all$/;"	t
instance	suckless/.suckless/dwm/dwm.c	/^	const char *instance;$/;"	m	struct:__anon3555889b0a08	typeref:typename:const char *	file:
int n	suckless/.suckless/st/diffs/.tmux.conf	/^+	int n = a->i;$/;"	k
iofd	suckless/.suckless/st/st.c	/^static int iofd = 1;$/;"	v	typeref:typename:int	file:
ipv6	weechat/.weechat/irc.conf	/^ipv6 = on$/;"	k	section:server_default
ipv6	weechat/.weechat/relay.conf	/^ipv6 = on$/;"	k	section:network
irc	weechat/.weechat/relay.conf	/^[irc]$/;"	s
irc_smart	weechat/.weechat/weechat.conf	/^irc_smart = on;*;irc_smart_filter;*$/;"	k	section:filter
isFullscreenFake	suckless/.suckless/dwm/config.h	/^static int isFullscreenFake = 1;$/;"	v	typeref:typename:int
isfixed	suckless/.suckless/dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfixed	suckless/.suckless/st/x.c	/^	int isfixed; \/* is fixed geometry? *\/$/;"	m	struct:__anon6574b7aa0508	typeref:typename:int	file:
isfloating	suckless/.suckless/dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	suckless/.suckless/dwm/dwm.c	/^	int isfloating;$/;"	m	struct:__anon3555889b0a08	typeref:typename:int	file:
isfullscreen	suckless/.suckless/dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isgnu	bin/.bin/stowsh	/^isgnu() {$/;"	f
isprotodel	suckless/.suckless/tabbed/tabbed.c	/^isprotodel(int c)$/;"	f	typeref:typename:Bool
isuniquegeom	suckless/.suckless/dwm/dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isurgent	suckless/.suckless/dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
item	suckless/.suckless/dmenu/dmenu.c	/^struct item {$/;"	s	file:
item_away	weechat/.weechat/weechat.conf	/^item_away = yellow$/;"	k	section:color
item_away_message	weechat/.weechat/weechat.conf	/^item_away_message = on$/;"	k	section:look
item_buffer_filter	weechat/.weechat/weechat.conf	/^item_buffer_filter = "*"$/;"	k	section:look
item_buffer_zoom	weechat/.weechat/weechat.conf	/^item_buffer_zoom = "!"$/;"	k	section:look
item_channel_modes	weechat/.weechat/irc.conf	/^item_channel_modes = red$/;"	k	section:color
item_channel_modes_hide_args	weechat/.weechat/irc.conf	/^item_channel_modes_hide_args = "k"$/;"	k	section:look
item_display_server	weechat/.weechat/irc.conf	/^item_display_server = buffer_plugin$/;"	k	section:look
item_lag_counting	weechat/.weechat/irc.conf	/^item_lag_counting = default$/;"	k	section:color
item_lag_finished	weechat/.weechat/irc.conf	/^item_lag_finished = yellow$/;"	k	section:color
item_mouse_status	weechat/.weechat/weechat.conf	/^item_mouse_status = "M"$/;"	k	section:look
item_nick_modes	weechat/.weechat/irc.conf	/^item_nick_modes = default$/;"	k	section:color
item_nick_modes	weechat/.weechat/irc.conf	/^item_nick_modes = on$/;"	k	section:look
item_nick_prefix	weechat/.weechat/irc.conf	/^item_nick_prefix = on$/;"	k	section:look
item_time_format	weechat/.weechat/weechat.conf	/^item_time_format = "%H:%M"$/;"	k	section:look
items	suckless/.suckless/dmenu/dmenu.c	/^static struct item *items = NULL;$/;"	v	typeref:struct:item *	file:
items	weechat/.weechat/weechat.conf	/^buddylist.items = "buddylist"$/;"	k	section:bar
items	weechat/.weechat/weechat.conf	/^buflist.items = "buflist"$/;"	k	section:bar
items	weechat/.weechat/weechat.conf	/^fset.items = "fset"$/;"	k	section:bar
items	weechat/.weechat/weechat.conf	/^input.items = "[input_prompt]+(away),[input_search],[input_paste],input_text"$/;"	k	section:bar
items	weechat/.weechat/weechat.conf	/^nicklist.items = "buffer_nicklist"$/;"	k	section:bar
items	weechat/.weechat/weechat.conf	/^status.items = "this is a test------------------------------------------------------------------/;"	k	section:bar
items	weechat/.weechat/weechat.conf	/^title.items = "buffer_title"$/;"	k	section:bar
j	suckless/.suckless/st/diffs/.tmux.conf	/^+		for (j = mincol; j < col; j++) {$/;"	k
j01	weechat/.weechat/weechat.conf	/^meta-j01 = "\/buffer *1"$/;"	k	section:key
j02	weechat/.weechat/weechat.conf	/^meta-j02 = "\/buffer *2"$/;"	k	section:key
j03	weechat/.weechat/weechat.conf	/^meta-j03 = "\/buffer *3"$/;"	k	section:key
j04	weechat/.weechat/weechat.conf	/^meta-j04 = "\/buffer *4"$/;"	k	section:key
j05	weechat/.weechat/weechat.conf	/^meta-j05 = "\/buffer *5"$/;"	k	section:key
j06	weechat/.weechat/weechat.conf	/^meta-j06 = "\/buffer *6"$/;"	k	section:key
j07	weechat/.weechat/weechat.conf	/^meta-j07 = "\/buffer *7"$/;"	k	section:key
j08	weechat/.weechat/weechat.conf	/^meta-j08 = "\/buffer *8"$/;"	k	section:key
j09	weechat/.weechat/weechat.conf	/^meta-j09 = "\/buffer *9"$/;"	k	section:key
j10	weechat/.weechat/weechat.conf	/^meta-j10 = "\/buffer *10"$/;"	k	section:key
j11	weechat/.weechat/weechat.conf	/^meta-j11 = "\/buffer *11"$/;"	k	section:key
j12	weechat/.weechat/weechat.conf	/^meta-j12 = "\/buffer *12"$/;"	k	section:key
j13	weechat/.weechat/weechat.conf	/^meta-j13 = "\/buffer *13"$/;"	k	section:key
j14	weechat/.weechat/weechat.conf	/^meta-j14 = "\/buffer *14"$/;"	k	section:key
j15	weechat/.weechat/weechat.conf	/^meta-j15 = "\/buffer *15"$/;"	k	section:key
j16	weechat/.weechat/weechat.conf	/^meta-j16 = "\/buffer *16"$/;"	k	section:key
j17	weechat/.weechat/weechat.conf	/^meta-j17 = "\/buffer *17"$/;"	k	section:key
j18	weechat/.weechat/weechat.conf	/^meta-j18 = "\/buffer *18"$/;"	k	section:key
j19	weechat/.weechat/weechat.conf	/^meta-j19 = "\/buffer *19"$/;"	k	section:key
j20	weechat/.weechat/weechat.conf	/^meta-j20 = "\/buffer *20"$/;"	k	section:key
j21	weechat/.weechat/weechat.conf	/^meta-j21 = "\/buffer *21"$/;"	k	section:key
j22	weechat/.weechat/weechat.conf	/^meta-j22 = "\/buffer *22"$/;"	k	section:key
j23	weechat/.weechat/weechat.conf	/^meta-j23 = "\/buffer *23"$/;"	k	section:key
j24	weechat/.weechat/weechat.conf	/^meta-j24 = "\/buffer *24"$/;"	k	section:key
j25	weechat/.weechat/weechat.conf	/^meta-j25 = "\/buffer *25"$/;"	k	section:key
j26	weechat/.weechat/weechat.conf	/^meta-j26 = "\/buffer *26"$/;"	k	section:key
j27	weechat/.weechat/weechat.conf	/^meta-j27 = "\/buffer *27"$/;"	k	section:key
j28	weechat/.weechat/weechat.conf	/^meta-j28 = "\/buffer *28"$/;"	k	section:key
j29	weechat/.weechat/weechat.conf	/^meta-j29 = "\/buffer *29"$/;"	k	section:key
j30	weechat/.weechat/weechat.conf	/^meta-j30 = "\/buffer *30"$/;"	k	section:key
j31	weechat/.weechat/weechat.conf	/^meta-j31 = "\/buffer *31"$/;"	k	section:key
j32	weechat/.weechat/weechat.conf	/^meta-j32 = "\/buffer *32"$/;"	k	section:key
j33	weechat/.weechat/weechat.conf	/^meta-j33 = "\/buffer *33"$/;"	k	section:key
j34	weechat/.weechat/weechat.conf	/^meta-j34 = "\/buffer *34"$/;"	k	section:key
j35	weechat/.weechat/weechat.conf	/^meta-j35 = "\/buffer *35"$/;"	k	section:key
j36	weechat/.weechat/weechat.conf	/^meta-j36 = "\/buffer *36"$/;"	k	section:key
j37	weechat/.weechat/weechat.conf	/^meta-j37 = "\/buffer *37"$/;"	k	section:key
j38	weechat/.weechat/weechat.conf	/^meta-j38 = "\/buffer *38"$/;"	k	section:key
j39	weechat/.weechat/weechat.conf	/^meta-j39 = "\/buffer *39"$/;"	k	section:key
j40	weechat/.weechat/weechat.conf	/^meta-j40 = "\/buffer *40"$/;"	k	section:key
j41	weechat/.weechat/weechat.conf	/^meta-j41 = "\/buffer *41"$/;"	k	section:key
j42	weechat/.weechat/weechat.conf	/^meta-j42 = "\/buffer *42"$/;"	k	section:key
j43	weechat/.weechat/weechat.conf	/^meta-j43 = "\/buffer *43"$/;"	k	section:key
j44	weechat/.weechat/weechat.conf	/^meta-j44 = "\/buffer *44"$/;"	k	section:key
j45	weechat/.weechat/weechat.conf	/^meta-j45 = "\/buffer *45"$/;"	k	section:key
j46	weechat/.weechat/weechat.conf	/^meta-j46 = "\/buffer *46"$/;"	k	section:key
j47	weechat/.weechat/weechat.conf	/^meta-j47 = "\/buffer *47"$/;"	k	section:key
j48	weechat/.weechat/weechat.conf	/^meta-j48 = "\/buffer *48"$/;"	k	section:key
j49	weechat/.weechat/weechat.conf	/^meta-j49 = "\/buffer *49"$/;"	k	section:key
j50	weechat/.weechat/weechat.conf	/^meta-j50 = "\/buffer *50"$/;"	k	section:key
j51	weechat/.weechat/weechat.conf	/^meta-j51 = "\/buffer *51"$/;"	k	section:key
j52	weechat/.weechat/weechat.conf	/^meta-j52 = "\/buffer *52"$/;"	k	section:key
j53	weechat/.weechat/weechat.conf	/^meta-j53 = "\/buffer *53"$/;"	k	section:key
j54	weechat/.weechat/weechat.conf	/^meta-j54 = "\/buffer *54"$/;"	k	section:key
j55	weechat/.weechat/weechat.conf	/^meta-j55 = "\/buffer *55"$/;"	k	section:key
j56	weechat/.weechat/weechat.conf	/^meta-j56 = "\/buffer *56"$/;"	k	section:key
j57	weechat/.weechat/weechat.conf	/^meta-j57 = "\/buffer *57"$/;"	k	section:key
j58	weechat/.weechat/weechat.conf	/^meta-j58 = "\/buffer *58"$/;"	k	section:key
j59	weechat/.weechat/weechat.conf	/^meta-j59 = "\/buffer *59"$/;"	k	section:key
j60	weechat/.weechat/weechat.conf	/^meta-j60 = "\/buffer *60"$/;"	k	section:key
j61	weechat/.weechat/weechat.conf	/^meta-j61 = "\/buffer *61"$/;"	k	section:key
j62	weechat/.weechat/weechat.conf	/^meta-j62 = "\/buffer *62"$/;"	k	section:key
j63	weechat/.weechat/weechat.conf	/^meta-j63 = "\/buffer *63"$/;"	k	section:key
j64	weechat/.weechat/weechat.conf	/^meta-j64 = "\/buffer *64"$/;"	k	section:key
j65	weechat/.weechat/weechat.conf	/^meta-j65 = "\/buffer *65"$/;"	k	section:key
j66	weechat/.weechat/weechat.conf	/^meta-j66 = "\/buffer *66"$/;"	k	section:key
j67	weechat/.weechat/weechat.conf	/^meta-j67 = "\/buffer *67"$/;"	k	section:key
j68	weechat/.weechat/weechat.conf	/^meta-j68 = "\/buffer *68"$/;"	k	section:key
j69	weechat/.weechat/weechat.conf	/^meta-j69 = "\/buffer *69"$/;"	k	section:key
j70	weechat/.weechat/weechat.conf	/^meta-j70 = "\/buffer *70"$/;"	k	section:key
j71	weechat/.weechat/weechat.conf	/^meta-j71 = "\/buffer *71"$/;"	k	section:key
j72	weechat/.weechat/weechat.conf	/^meta-j72 = "\/buffer *72"$/;"	k	section:key
j73	weechat/.weechat/weechat.conf	/^meta-j73 = "\/buffer *73"$/;"	k	section:key
j74	weechat/.weechat/weechat.conf	/^meta-j74 = "\/buffer *74"$/;"	k	section:key
j75	weechat/.weechat/weechat.conf	/^meta-j75 = "\/buffer *75"$/;"	k	section:key
j76	weechat/.weechat/weechat.conf	/^meta-j76 = "\/buffer *76"$/;"	k	section:key
j77	weechat/.weechat/weechat.conf	/^meta-j77 = "\/buffer *77"$/;"	k	section:key
j78	weechat/.weechat/weechat.conf	/^meta-j78 = "\/buffer *78"$/;"	k	section:key
j79	weechat/.weechat/weechat.conf	/^meta-j79 = "\/buffer *79"$/;"	k	section:key
j80	weechat/.weechat/weechat.conf	/^meta-j80 = "\/buffer *80"$/;"	k	section:key
j81	weechat/.weechat/weechat.conf	/^meta-j81 = "\/buffer *81"$/;"	k	section:key
j82	weechat/.weechat/weechat.conf	/^meta-j82 = "\/buffer *82"$/;"	k	section:key
j83	weechat/.weechat/weechat.conf	/^meta-j83 = "\/buffer *83"$/;"	k	section:key
j84	weechat/.weechat/weechat.conf	/^meta-j84 = "\/buffer *84"$/;"	k	section:key
j85	weechat/.weechat/weechat.conf	/^meta-j85 = "\/buffer *85"$/;"	k	section:key
j86	weechat/.weechat/weechat.conf	/^meta-j86 = "\/buffer *86"$/;"	k	section:key
j87	weechat/.weechat/weechat.conf	/^meta-j87 = "\/buffer *87"$/;"	k	section:key
j88	weechat/.weechat/weechat.conf	/^meta-j88 = "\/buffer *88"$/;"	k	section:key
j89	weechat/.weechat/weechat.conf	/^meta-j89 = "\/buffer *89"$/;"	k	section:key
j90	weechat/.weechat/weechat.conf	/^meta-j90 = "\/buffer *90"$/;"	k	section:key
j91	weechat/.weechat/weechat.conf	/^meta-j91 = "\/buffer *91"$/;"	k	section:key
j92	weechat/.weechat/weechat.conf	/^meta-j92 = "\/buffer *92"$/;"	k	section:key
j93	weechat/.weechat/weechat.conf	/^meta-j93 = "\/buffer *93"$/;"	k	section:key
j94	weechat/.weechat/weechat.conf	/^meta-j94 = "\/buffer *94"$/;"	k	section:key
j95	weechat/.weechat/weechat.conf	/^meta-j95 = "\/buffer *95"$/;"	k	section:key
j96	weechat/.weechat/weechat.conf	/^meta-j96 = "\/buffer *96"$/;"	k	section:key
j97	weechat/.weechat/weechat.conf	/^meta-j97 = "\/buffer *97"$/;"	k	section:key
j98	weechat/.weechat/weechat.conf	/^meta-j98 = "\/buffer *98"$/;"	k	section:key
j99	weechat/.weechat/weechat.conf	/^meta-j99 = "\/buffer *99"$/;"	k	section:key
join_auto_add_chantype	weechat/.weechat/irc.conf	/^join_auto_add_chantype = off$/;"	k	section:look
jump_current_to_previous_buffer	weechat/.weechat/weechat.conf	/^jump_current_to_previous_buffer = on$/;"	k	section:look
jump_previous_buffer_when_closing	weechat/.weechat/weechat.conf	/^jump_previous_buffer_when_closing = on$/;"	k	section:look
jump_smart_back_to_buffer	weechat/.weechat/weechat.conf	/^jump_smart_back_to_buffer = on$/;"	k	section:look
k	suckless/.suckless/st/x.c	/^	KeySym k;$/;"	m	struct:__anon6574b7aa0308	typeref:typename:KeySym	file:
k	weechat/.weechat/weechat.conf	/^meta-k = "\/input grab_key_command"$/;"	k	section:key
key	suckless/.suckless/st/config.def.h	/^static Key key[] = {$/;"	v	typeref:typename:Key[]
key	suckless/.suckless/st/config.h	/^static Key key[] = {$/;"	v	typeref:typename:Key[]
key	weechat/.weechat/weechat.conf	/^[key]$/;"	s
key_bind_safe	weechat/.weechat/weechat.conf	/^key_bind_safe = on$/;"	k	section:look
key_cursor	weechat/.weechat/weechat.conf	/^[key_cursor]$/;"	s
key_grab_delay	weechat/.weechat/weechat.conf	/^key_grab_delay = 800$/;"	k	section:look
key_mouse	weechat/.weechat/weechat.conf	/^[key_mouse]$/;"	s
key_search	weechat/.weechat/weechat.conf	/^[key_search]$/;"	s
keypress	suckless/.suckless/dmenu/dmenu.c	/^keypress(XKeyEvent *ev)$/;"	f	typeref:typename:void	file:
keypress	suckless/.suckless/dwm/dwm.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keypress	suckless/.suckless/tabbed/tabbed.c	/^keypress(const XEvent *e)$/;"	f	typeref:typename:void
keys	suckless/.suckless/dwm/config.def.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	suckless/.suckless/dwm/config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	suckless/.suckless/surf/config.def.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	suckless/.suckless/surf/config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	suckless/.suckless/tabbed/config.def.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	suckless/.suckless/tabbed/config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keysym	suckless/.suckless/dwm/dwm.c	/^	KeySym keysym;$/;"	m	struct:__anon3555889b0808	typeref:typename:KeySym	file:
keysym	suckless/.suckless/st/x.c	/^	KeySym keysym;$/;"	m	struct:__anon6574b7aa0108	typeref:typename:KeySym	file:
keysym	suckless/.suckless/tabbed/tabbed.c	/^	KeySym keysym;$/;"	m	struct:__anon0f72b96f0408	typeref:typename:KeySym	file:
keyval	suckless/.suckless/surf/surf.c	/^	guint keyval;$/;"	m	struct:__anonb95973ab0608	typeref:typename:guint	file:
killclient	suckless/.suckless/dwm/dwm.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
killclient	suckless/.suckless/tabbed/tabbed.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
killclientsfirst	suckless/.suckless/tabbed/tabbed.c	/^            killclientsfirst = False;$/;"	v	typeref:typename:Bool	file:
kmap	suckless/.suckless/st/x.c	/^kmap(KeySym k, uint state)$/;"	f	typeref:typename:char *
kpress	suckless/.suckless/st/x.c	/^kpress(XEvent *ev)$/;"	f	typeref:typename:void
kscrolldown	suckless/.suckless/st/st.c	/^kscrolldown(const Arg* a)$/;"	f	typeref:typename:void
kscrollup	suckless/.suckless/st/st.c	/^kscrollup(const Arg* a)$/;"	f	typeref:typename:void
l	suckless/.suckless/st/x.c	/^	int l, t; \/* left and top offset *\/$/;"	m	struct:__anon6574b7aa0508	typeref:typename:int	file:
l	weechat/.weechat/weechat.conf	/^meta-jmeta-l = "\/buffer +"$/;"	k	section:key
l	weechat/.weechat/weechat.conf	/^meta-l = "\/window bare"$/;"	k	section:key
lag	weechat/.weechat/buflist.conf	/^lag = " ${color:green}[${color:brown}${lag}${color:green}]"$/;"	k	section:format
lag_check	weechat/.weechat/irc.conf	/^lag_check = 60$/;"	k	section:network
lag_max	weechat/.weechat/irc.conf	/^lag_max = 1800$/;"	k	section:network
lag_min_show	weechat/.weechat/irc.conf	/^lag_min_show = 500$/;"	k	section:network
lag_reconnect	weechat/.weechat/irc.conf	/^lag_reconnect = 300$/;"	k	section:network
lag_refresh_interval	weechat/.weechat/irc.conf	/^lag_refresh_interval = 1$/;"	k	section:network
lastsel	suckless/.suckless/tabbed/tabbed.c	/^static int nclients, sel = -1, lastsel = -1;$/;"	v	typeref:typename:int	file:
layout	weechat/.weechat/weechat.conf	/^[layout]$/;"	s
layouts	suckless/.suckless/dwm/config.def.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
layouts	suckless/.suckless/dwm/config.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
lbearing	suckless/.suckless/st/x.c	/^	short lbearing;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:short	file:
left	suckless/.suckless/dmenu/dmenu.c	/^	struct item *left, *right;$/;"	m	struct:item	typeref:struct:item *	file:
len	suckless/.suckless/st/st.c	/^	int len;               \/* raw string length *\/$/;"	m	struct:__anon140a12590508	typeref:typename:int	file:
len	suckless/.suckless/st/st.c	/^	int len;               \/* raw string length *\/$/;"	m	struct:__anon140a12590608	typeref:typename:int	file:
level	weechat/.weechat/logger.conf	/^[level]$/;"	s
libsurf-webext.so	suckless/.suckless/surf/Makefile	/^libsurf-webext.so: $(WEBEXTOBJ) $(COBJ)$/;"	t
limitexceeded	suckless/.suckless/dwm/dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
line	suckless/.suckless/st/st.c	/^	Line *line;   \/* screen *\/$/;"	m	struct:__anon140a12590408	typeref:typename:Line *	file:
line_marked_bg1	weechat/.weechat/fset.conf	/^line_marked_bg1 = default$/;"	k	section:color
line_marked_bg2	weechat/.weechat/fset.conf	/^line_marked_bg2 = default$/;"	k	section:color
line_selected_bg1	weechat/.weechat/fset.conf	/^line_selected_bg1 = blue$/;"	k	section:color
line_selected_bg2	weechat/.weechat/fset.conf	/^line_selected_bg2 = red$/;"	k	section:color
lines	suckless/.suckless/dmenu/config.def.h	/^static unsigned int lines      = 0;$/;"	v	typeref:typename:unsigned int
lines	suckless/.suckless/dmenu/config.h	/^static unsigned int lines      = 0;$/;"	v	typeref:typename:unsigned int
loadchanged	suckless/.suckless/surf/surf.c	/^loadchanged(WebKitWebView *v, WebKitLoadEvent e, Client *c)$/;"	f	typeref:typename:void
loadcommitted	suckless/.suckless/surf/surf.c	/^static ParamName loadcommitted[] = {$/;"	v	typeref:typename:ParamName[]	file:
loadfailedtls	suckless/.suckless/surf/surf.c	/^loadfailedtls(WebKitWebView *v, gchar *uri, GTlsCertificate *cert,$/;"	f	typeref:typename:gboolean
loadfinished	suckless/.suckless/surf/surf.c	/^static ParamName loadfinished[] = {$/;"	v	typeref:typename:ParamName[]	file:
loadhistory	suckless/.suckless/dmenu/dmenu.c	/^loadhistory(void)$/;"	f	typeref:typename:void	file:
loadtransient	suckless/.suckless/surf/surf.c	/^static ParamName loadtransient[] = {$/;"	v	typeref:typename:ParamName[]	file:
loaduri	suckless/.suckless/surf/surf.c	/^loaduri(Client *c, const Arg *a)$/;"	f	typeref:typename:void
local_hostname	weechat/.weechat/irc.conf	/^local_hostname = ""$/;"	k	section:server_default
lockfileVersion	config/.config/nvim/ftplugin/package-lock.json	/^  "lockfileVersion": 1$/;"	n
look	weechat/.weechat/aspell.conf	/^[look]$/;"	s
look	weechat/.weechat/buflist.conf	/^[look]$/;"	s
look	weechat/.weechat/fset.conf	/^[look]$/;"	s
look	weechat/.weechat/irc.conf	/^[look]$/;"	s
look	weechat/.weechat/logger.conf	/^[look]$/;"	s
look	weechat/.weechat/lua.conf	/^[look]$/;"	s
look	weechat/.weechat/perl.conf	/^[look]$/;"	s
look	weechat/.weechat/python.conf	/^[look]$/;"	s
look	weechat/.weechat/relay.conf	/^[look]$/;"	s
look	weechat/.weechat/ruby.conf	/^[look]$/;"	s
look	weechat/.weechat/script.conf	/^[look]$/;"	s
look	weechat/.weechat/trigger.conf	/^[look]$/;"	s
look	weechat/.weechat/weechat.conf	/^[look]$/;"	s
look	weechat/.weechat/xfer.conf	/^[look]$/;"	s
lrpad	suckless/.suckless/dmenu/dmenu.c	/^static int lrpad; \/* sum of left and right padding *\/$/;"	v	typeref:typename:int	file:
lrpad	suckless/.suckless/dwm/dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lt	suckless/.suckless/dwm/dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
ltidxs	suckless/.suckless/dwm/dwm.c	/^	const Layout *ltidxs[LENGTH(tags) + 1][2]; \/* matrix of tags and layouts indexes  *\/$/;"	m	struct:Pertag	typeref:typename:const Layout * [][2]	file:
ltsymbol	suckless/.suckless/dwm/dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
m	weechat/.weechat/weechat.conf	/^meta-m = "\/mute mouse toggle"$/;"	k	section:key
main	bin/.bin/book-search	/^main() {$/;"	f
main	suckless/.suckless/dmenu/dmenu.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	suckless/.suckless/dmenu/stest.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	suckless/.suckless/dwm/dwm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	suckless/.suckless/dwm/transient.c	/^int main(void) {$/;"	f	typeref:typename:int
main	suckless/.suckless/st/x.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	suckless/.suckless/surf/surf.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	suckless/.suckless/tabbed/tabbed.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	suckless/.suckless/tabbed/xembed.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
make_dirs	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^make_dirs() ($/;"	f
manage	suckless/.suckless/dwm/dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
manage	suckless/.suckless/tabbed/tabbed.c	/^manage(Window w)$/;"	f	typeref:typename:void
mappedkeys	suckless/.suckless/st/config.def.h	/^static KeySym mappedkeys[] = { -1 };$/;"	v	typeref:typename:KeySym[]
mappedkeys	suckless/.suckless/st/config.h	/^static KeySym mappedkeys[] = { -1 };$/;"	v	typeref:typename:KeySym[]
mappingnotify	suckless/.suckless/dwm/dwm.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
maprequest	suckless/.suckless/dwm/dwm.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
maprequest	suckless/.suckless/tabbed/tabbed.c	/^maprequest(const XEvent *e)$/;"	f	typeref:typename:void
marked	weechat/.weechat/fset.conf	/^marked = brown$/;"	k	section:color
marked_selected	weechat/.weechat/fset.conf	/^marked_selected = yellow$/;"	k	section:color
marked_string	weechat/.weechat/fset.conf	/^marked_string = "*"$/;"	k	section:look
mask	suckless/.suckless/dwm/dwm.c	/^	unsigned int mask;$/;"	m	struct:__anon3555889b0708	typeref:typename:unsigned int	file:
mask	suckless/.suckless/st/st.h	/^	 uint mask;$/;"	m	struct:__anon140a125e0308	typeref:typename:uint
mask	suckless/.suckless/st/x.c	/^	uint mask;$/;"	m	struct:__anon6574b7aa0208	typeref:typename:uint	file:
mask	suckless/.suckless/st/x.c	/^	uint mask;$/;"	m	struct:__anon6574b7aa0308	typeref:typename:uint	file:
mask	suckless/.suckless/surf/surf.c	/^	unsigned int mask;$/;"	m	struct:__anonb95973ab0708	typeref:typename:unsigned int	file:
mask	weechat/.weechat/logger.conf	/^[mask]$/;"	s
mask	weechat/.weechat/logger.conf	/^mask = "$plugin.$name.weechatlog"$/;"	k	section:file
match	suckless/.suckless/dmenu/dmenu.c	/^match(void)$/;"	f	typeref:typename:void	file:
match	suckless/.suckless/dmenu/stest.c	/^static int match = 0;$/;"	v	typeref:typename:int	file:
match	suckless/.suckless/st/x.c	/^	XftFont *match;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:XftFont *	file:
match	suckless/.suckless/st/x.c	/^match(uint mask, uint state)$/;"	f	typeref:typename:int
matchend	suckless/.suckless/dmenu/dmenu.c	/^static struct item *matches, *matchend;$/;"	v	typeref:struct:item **	file:
matches	suckless/.suckless/dmenu/dmenu.c	/^static struct item *matches, *matchend;$/;"	v	typeref:struct:item *	file:
max	weechat/.weechat/fset.conf	/^max = default$/;"	k	section:color
max_buffer_lines_minutes	weechat/.weechat/weechat.conf	/^max_buffer_lines_minutes = 0$/;"	k	section:history
max_buffer_lines_number	weechat/.weechat/weechat.conf	/^max_buffer_lines_number = 4096$/;"	k	section:history
max_clients	weechat/.weechat/relay.conf	/^max_clients = 5$/;"	k	section:network
max_commands	weechat/.weechat/weechat.conf	/^max_commands = 100$/;"	k	section:history
max_selected	weechat/.weechat/fset.conf	/^max_selected = white$/;"	k	section:color
max_visited_buffers	weechat/.weechat/weechat.conf	/^max_visited_buffers = 50$/;"	k	section:history
maxa	suckless/.suckless/dwm/dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxh	suckless/.suckless/dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	suckless/.suckless/dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
message_chghost	weechat/.weechat/irc.conf	/^message_chghost = brown$/;"	k	section:color
message_join	weechat/.weechat/irc.conf	/^message_join = green$/;"	k	section:color
message_quit	weechat/.weechat/irc.conf	/^message_quit = red$/;"	k	section:color
mfact	suckless/.suckless/dwm/config.def.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	suckless/.suckless/dwm/config.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	suckless/.suckless/dwm/dwm.c	/^	float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mfacts	suckless/.suckless/dwm/dwm.c	/^	float mfacts[LENGTH(tags) + 1]; \/* mfacts per tag *\/$/;"	m	struct:Pertag	typeref:typename:float[]	file:
mh	suckless/.suckless/dmenu/dmenu.c	/^static int bh, mw, mh;$/;"	v	typeref:typename:int	file:
mh	suckless/.suckless/dwm/dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
min	weechat/.weechat/fset.conf	/^min = default$/;"	k	section:color
min_selected	weechat/.weechat/fset.conf	/^min_selected = white$/;"	k	section:color
mina	suckless/.suckless/dwm/dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
minh	suckless/.suckless/dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minw	suckless/.suckless/dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mirc_remap	weechat/.weechat/irc.conf	/^mirc_remap = "1,-1:darkgray"$/;"	k	section:color
misspelled	weechat/.weechat/aspell.conf	/^misspelled = lightred$/;"	k	section:color
mkeys	suckless/.suckless/st/config.def.h	/^MouseKey mkeys[] = {$/;"	v	typeref:typename:MouseKey[]
mkeys	suckless/.suckless/st/config.h	/^MouseKey mkeys[] = {$/;"	v	typeref:typename:MouseKey[]
mod	suckless/.suckless/dwm/dwm.c	/^	unsigned int mod;$/;"	m	struct:__anon3555889b0808	typeref:typename:unsigned int	file:
mod	suckless/.suckless/st/x.c	/^	uint mod;$/;"	m	struct:__anon6574b7aa0108	typeref:typename:uint	file:
mod	suckless/.suckless/surf/surf.c	/^	guint mod;$/;"	m	struct:__anonb95973ab0608	typeref:typename:guint	file:
mod	suckless/.suckless/tabbed/tabbed.c	/^	unsigned int mod;$/;"	m	struct:__anon0f72b96f0408	typeref:typename:unsigned int	file:
mode	suckless/.suckless/st/st.c	/^	char mode[2];$/;"	m	struct:__anon140a12590508	typeref:typename:char[2]	file:
mode	suckless/.suckless/st/st.c	/^	int mode;     \/* terminal mode flags *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
mode	suckless/.suckless/st/st.c	/^	int mode;$/;"	m	struct:__anon140a12590208	typeref:typename:int	file:
mode	suckless/.suckless/st/st.h	/^	ushort mode;      \/* attribute flags *\/$/;"	m	struct:__anon140a125e0108	typeref:typename:ushort
mode	suckless/.suckless/st/x.c	/^	int mode; \/* window state\/mode flags *\/$/;"	m	struct:__anon6574b7aa0408	typeref:typename:int	file:
modparams	suckless/.suckless/surf/surf.c	/^static int modparams[ParameterLast];$/;"	v	typeref:typename:int[]	file:
mon	suckless/.suckless/dmenu/dmenu.c	/^static int mon = -1, screen;$/;"	v	typeref:typename:int	file:
mon	suckless/.suckless/dwm/dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
monitor	suckless/.suckless/dwm/dwm.c	/^	int monitor;$/;"	m	struct:__anon3555889b0a08	typeref:typename:int	file:
monitor_strip_colors	weechat/.weechat/trigger.conf	/^monitor_strip_colors = off$/;"	k	section:look
monocle	suckless/.suckless/dwm/dwm.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
mons	suckless/.suckless/dwm/dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
motionnotify	suckless/.suckless/dwm/dwm.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
mouse	weechat/.weechat/weechat.conf	/^mouse = on$/;"	k	section:look
mouse_jump_visited_buffer	weechat/.weechat/buflist.conf	/^mouse_jump_visited_buffer = off$/;"	k	section:look
mouse_move_buffer	weechat/.weechat/buflist.conf	/^mouse_move_buffer = on$/;"	k	section:look
mouse_timer_delay	weechat/.weechat/weechat.conf	/^mouse_timer_delay = 100$/;"	k	section:look
mouse_wheel	weechat/.weechat/buflist.conf	/^mouse_wheel = on$/;"	k	section:look
mousebg	suckless/.suckless/st/config.def.h	/^static unsigned int mousebg = 0;$/;"	v	typeref:typename:unsigned int
mousebg	suckless/.suckless/st/config.h	/^static unsigned int mousebg = 0;$/;"	v	typeref:typename:unsigned int
mousefg	suckless/.suckless/st/config.def.h	/^static unsigned int mousefg = 7;$/;"	v	typeref:typename:unsigned int
mousefg	suckless/.suckless/st/config.h	/^static unsigned int mousefg = 7;$/;"	v	typeref:typename:unsigned int
mousepos	suckless/.suckless/surf/surf.c	/^	WebKitHitTestResult *mousepos;$/;"	m	struct:Client	typeref:typename:WebKitHitTestResult *	file:
mousereport	suckless/.suckless/st/x.c	/^mousereport(XEvent *e)$/;"	f	typeref:typename:void
mousesel	suckless/.suckless/st/x.c	/^mousesel(XEvent *e, int done)$/;"	f	typeref:typename:void
mouseshape	suckless/.suckless/st/config.def.h	/^static unsigned int mouseshape = XC_xterm;$/;"	v	typeref:typename:unsigned int
mouseshape	suckless/.suckless/st/config.h	/^static unsigned int mouseshape = XC_xterm;$/;"	v	typeref:typename:unsigned int
mousetargetchanged	suckless/.suckless/surf/surf.c	/^mousetargetchanged(WebKitWebView *v, WebKitHitTestResult *h, guint modifiers,$/;"	f	typeref:typename:void
move	suckless/.suckless/tabbed/tabbed.c	/^move(const Arg *arg)$/;"	f	typeref:typename:void
movemouse	suckless/.suckless/dwm/dwm.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
movetab	suckless/.suckless/tabbed/tabbed.c	/^movetab(const Arg *arg)$/;"	f	typeref:typename:void
movewordedge	suckless/.suckless/dmenu/dmenu.c	/^movewordedge(int dir)$/;"	f	typeref:typename:void	file:
msg_kick	weechat/.weechat/irc.conf	/^msg_kick = ""$/;"	k	section:server_default
msg_part	weechat/.weechat/irc.conf	/^msg_part = "WeeChat ${info:version}"$/;"	k	section:server_default
msg_quit	weechat/.weechat/irc.conf	/^msg_quit = "WeeChat ${info:version}"$/;"	k	section:server_default
msgbuffer	weechat/.weechat/irc.conf	/^[msgbuffer]$/;"	s
msgbuffer_fallback	weechat/.weechat/irc.conf	/^msgbuffer_fallback = current$/;"	k	section:look
msgext	suckless/.suckless/surf/surf.c	/^msgext(Client *c, char type, const Arg *a)$/;"	f	typeref:typename:void	file:
msgsurf	suckless/.suckless/surf/libsurf-webext.c	/^msgsurf(Page *p, const char *s)$/;"	f	typeref:typename:void	file:
mshortcuts	suckless/.suckless/st/config.def.h	/^static MouseShortcut mshortcuts[] = {$/;"	v	typeref:typename:MouseShortcut[]
mshortcuts	suckless/.suckless/st/config.h	/^static MouseShortcut mshortcuts[] = {$/;"	v	typeref:typename:MouseShortcut[]
mw	suckless/.suckless/dmenu/dmenu.c	/^static int bh, mw, mh;$/;"	v	typeref:typename:int	file:
mw	suckless/.suckless/dwm/dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	suckless/.suckless/dwm/dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	suckless/.suckless/dwm/dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
myvimrchooks	config/.config/nvim/init.vim	/^		augroup myvimrchooks$/;"	a
n	weechat/.weechat/weechat.conf	/^meta-n = "\/window scroll_next_highlight"$/;"	k	section:key
name	suckless/.suckless/dwm/dwm.c	/^	char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
name	suckless/.suckless/tabbed/tabbed.c	/^	char name[256];$/;"	m	struct:__anon0f72b96f0708	typeref:typename:char[256]	file:
name	weechat/.weechat/buflist.conf	/^name = "${name}"$/;"	k	section:format
name	weechat/.weechat/fset.conf	/^name = default$/;"	k	section:color
name_changed	weechat/.weechat/fset.conf	/^name_changed = brown$/;"	k	section:color
name_changed_selected	weechat/.weechat/fset.conf	/^name_changed_selected = yellow$/;"	k	section:color
name_lower_case	weechat/.weechat/logger.conf	/^name_lower_case = on$/;"	k	section:file
name_selected	weechat/.weechat/fset.conf	/^name_selected = white$/;"	k	section:color
narg	suckless/.suckless/st/st.c	/^	int narg;              \/* nb of args *\/$/;"	m	struct:__anon140a12590508	typeref:typename:int	file:
narg	suckless/.suckless/st/st.c	/^	int narg;              \/* nb of args *\/$/;"	m	struct:__anon140a12590608	typeref:typename:int	file:
navhistory	suckless/.suckless/dmenu/dmenu.c	/^navhistory(int dir)$/;"	f	typeref:typename:void	file:
navigate	suckless/.suckless/surf/surf.c	/^navigate(Client *c, const Arg *a)$/;"	f	typeref:typename:void
nb	suckless/.suckless/st/st.c	/^	} nb, ne, ob, oe;$/;"	m	struct:__anon140a12590208	typeref:struct:__anon140a12590208::__anon140a12590308	file:
nclients	suckless/.suckless/tabbed/tabbed.c	/^static int nclients, sel = -1, lastsel = -1;$/;"	v	typeref:typename:int	file:
ne	suckless/.suckless/st/st.c	/^	} nb, ne, ob, oe;$/;"	m	struct:__anon140a12590208	typeref:struct:__anon140a12590208::__anon140a12590308	file:
needle	suckless/.suckless/surf/surf.c	/^	const char *needle;$/;"	m	struct:Client	typeref:typename:const char *	file:
net	weechat/.weechat/plugins.conf	/^perl.buddylist.display.social.net = "on"$/;"	k	section:var
net	weechat/.weechat/plugins.conf	/^perl.buddylist.display.social.net = "using bitlbee, buddies will be sorted in sublists with soci/;"	k	section:desc
netatom	suckless/.suckless/dwm/dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[][]	file:
netwmname	suckless/.suckless/st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmpid;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Atom	file:
netwmpid	suckless/.suckless/st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmpid;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Atom	file:
network	weechat/.weechat/irc.conf	/^[network]$/;"	s
network	weechat/.weechat/relay.conf	/^[network]$/;"	s
network	weechat/.weechat/weechat.conf	/^[network]$/;"	s
network	weechat/.weechat/xfer.conf	/^[network]$/;"	s
neverfocus	suckless/.suckless/dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
new	suckless/.suckless/dmenu/stest.c	/^static struct stat old, new;$/;"	v	typeref:struct:stat	file:
new_channel_position	weechat/.weechat/irc.conf	/^new_channel_position = none$/;"	k	section:look
new_pv_position	weechat/.weechat/irc.conf	/^new_pv_position = none$/;"	k	section:look
newclient	suckless/.suckless/surf/surf.c	/^newclient(Client *rc)$/;"	f	typeref:typename:Client *
newpage	suckless/.suckless/surf/libsurf-webext.c	/^newpage(WebKitWebPage *page)$/;"	f	typeref:typename:Page *
newposition	suckless/.suckless/tabbed/config.def.h	/^static int  newposition   = 0;$/;"	v	typeref:typename:int
newposition	suckless/.suckless/tabbed/config.h	/^static int  newposition   = 0;$/;"	v	typeref:typename:int
newview	suckless/.suckless/surf/surf.c	/^newview(Client *c, WebKitWebView *rv)$/;"	f	typeref:typename:WebKitWebView *
newwindow	suckless/.suckless/surf/surf.c	/^newwindow(Client *c, const Arg *a, int noembed)$/;"	f	typeref:typename:void
next	suckless/.suckless/dmenu/dmenu.c	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item ***	file:
next	suckless/.suckless/dmenu/drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	suckless/.suckless/dwm/drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	suckless/.suckless/dwm/dwm.c	/^	Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	suckless/.suckless/dwm/dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
next	suckless/.suckless/surf/libsurf-webext.c	/^	struct Page *next;$/;"	m	struct:Page	typeref:struct:Page *	file:
next	suckless/.suckless/surf/surf.c	/^	struct Client *next;$/;"	m	struct:Client	typeref:struct:Client *	file:
next_song	bin/.bin/spotify-controller	/^next_song(){$/;"	f
nextfocus	suckless/.suckless/tabbed/tabbed.c	/^static Bool running = True, nextfocus, doinitspawn = True,$/;"	v	typeref:typename:Bool	file:
nextrune	suckless/.suckless/dmenu/dmenu.c	/^nextrune(int inc)$/;"	f	typeref:typename:size_t	file:
nexttiled	suckless/.suckless/dwm/dwm.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nick	weechat/.weechat/plugins.conf	/^perl.buddylist.display.original.nick = "display original nickname even if buddy changed his \/ni/;"	k	section:desc
nick	weechat/.weechat/plugins.conf	/^perl.buddylist.display.original.nick = "off"$/;"	k	section:var
nick_add_space	weechat/.weechat/weechat.conf	/^nick_add_space = on$/;"	k	section:completion
nick_case_sensitive	weechat/.weechat/weechat.conf	/^nick_case_sensitive = off$/;"	k	section:completion
nick_color_force	weechat/.weechat/weechat.conf	/^nick_color_force = ""$/;"	k	section:look
nick_color_hash	weechat/.weechat/weechat.conf	/^nick_color_hash = djb2$/;"	k	section:look
nick_color_stop_chars	weechat/.weechat/weechat.conf	/^nick_color_stop_chars = "_|["$/;"	k	section:look
nick_completer	weechat/.weechat/weechat.conf	/^nick_completer = ": "$/;"	k	section:completion
nick_completion_smart	weechat/.weechat/irc.conf	/^nick_completion_smart = speakers$/;"	k	section:look
nick_first_only	weechat/.weechat/weechat.conf	/^nick_first_only = off$/;"	k	section:completion
nick_ignore_chars	weechat/.weechat/weechat.conf	/^nick_ignore_chars = "[]`_-^"$/;"	k	section:completion
nick_mode	weechat/.weechat/irc.conf	/^nick_mode = prefix$/;"	k	section:look
nick_mode_empty	weechat/.weechat/irc.conf	/^nick_mode_empty = off$/;"	k	section:look
nick_prefix	weechat/.weechat/buflist.conf	/^nick_prefix = "${color_nick_prefix}${nick_prefix}"$/;"	k	section:format
nick_prefix	weechat/.weechat/buflist.conf	/^nick_prefix = off$/;"	k	section:look
nick_prefix	weechat/.weechat/logger.conf	/^nick_prefix = ""$/;"	k	section:file
nick_prefix	weechat/.weechat/weechat.conf	/^nick_prefix = ""$/;"	k	section:look
nick_prefix_empty	weechat/.weechat/buflist.conf	/^nick_prefix_empty = on$/;"	k	section:look
nick_prefixes	weechat/.weechat/irc.conf	/^nick_prefixes = "y:lightred;q:lightred;a:lightcyan;o:lightgreen;h:lightmagenta;v:yellow;*:lightb/;"	k	section:color
nick_suffix	weechat/.weechat/logger.conf	/^nick_suffix = ""$/;"	k	section:file
nick_suffix	weechat/.weechat/weechat.conf	/^nick_suffix = ""$/;"	k	section:look
nicklist_away	weechat/.weechat/weechat.conf	/^nicklist_away = cyan$/;"	k	section:color
nicklist_group	weechat/.weechat/weechat.conf	/^nicklist_group = green$/;"	k	section:color
nicks	weechat/.weechat/irc.conf	/^nicks = "DuckyDev"$/;"	k	section:server_default
nicks_alternate	weechat/.weechat/irc.conf	/^nicks_alternate = on$/;"	k	section:server_default
nicks_hide_password	weechat/.weechat/irc.conf	/^nicks_hide_password = "nickserv"$/;"	k	section:look
nmaster	suckless/.suckless/dwm/config.def.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	suckless/.suckless/dwm/config.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	suckless/.suckless/dwm/dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
nmasters	suckless/.suckless/dwm/dwm.c	/^	int nmasters[LENGTH(tags) + 1]; \/* number of windows in master area *\/$/;"	m	struct:Pertag	typeref:typename:int[]	file:
norm	suckless/.suckless/tabbed/tabbed.c	/^	XftColor norm[ColLast];$/;"	m	struct:__anon0f72b96f0508	typeref:typename:XftColor[]	file:
normbgcolor	suckless/.suckless/tabbed/config.def.h	/^static const char* normbgcolor  = "#222222";$/;"	v	typeref:typename:const char *
normbgcolor	suckless/.suckless/tabbed/config.h	/^static const char* normbgcolor  = "#222222";$/;"	v	typeref:typename:const char *
normfgcolor	suckless/.suckless/tabbed/config.def.h	/^static const char* normfgcolor  = "#cccccc";$/;"	v	typeref:typename:const char *
normfgcolor	suckless/.suckless/tabbed/config.h	/^static const char* normfgcolor  = "#cccccc";$/;"	v	typeref:typename:const char *
notice	weechat/.weechat/irc.conf	/^notice = green$/;"	k	section:color
notice_as_pv	weechat/.weechat/irc.conf	/^notice_as_pv = auto$/;"	k	section:look
notice_welcome_redirect	weechat/.weechat/irc.conf	/^notice_welcome_redirect = on$/;"	k	section:look
notice_welcome_tags	weechat/.weechat/irc.conf	/^notice_welcome_tags = ""$/;"	k	section:look
notify	weechat/.weechat/irc.conf	/^notify = ""$/;"	k	section:server_default
notify	weechat/.weechat/weechat.conf	/^[notify]$/;"	s
notify_check_ison	weechat/.weechat/irc.conf	/^notify_check_ison = 1$/;"	k	section:network
notify_check_whois	weechat/.weechat/irc.conf	/^notify_check_whois = 5$/;"	k	section:network
notify_tags_ison	weechat/.weechat/irc.conf	/^notify_tags_ison = "notify_message"$/;"	k	section:look
notify_tags_whois	weechat/.weechat/irc.conf	/^notify_tags_whois = "notify_message"$/;"	k	section:look
npisrelative	suckless/.suckless/tabbed/config.def.h	/^static Bool npisrelative  = False;$/;"	v	typeref:typename:Bool
npisrelative	suckless/.suckless/tabbed/config.h	/^static Bool npisrelative  = False;$/;"	v	typeref:typename:Bool
num	suckless/.suckless/dwm/dwm.c	/^	int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
number	weechat/.weechat/buflist.conf	/^number = "${color:green}${number}${if:${number_displayed}?.: }"$/;"	k	section:format
number	weechat/.weechat/plugins.conf	/^perl.buddylist.color.number = "color for channel number (default: lightred). If empty, channel l/;"	k	section:desc
number	weechat/.weechat/plugins.conf	/^perl.buddylist.color.number = "lightred"$/;"	k	section:var
numlock	suckless/.suckless/st/x.c	/^numlock(const Arg *dummy)$/;"	f	typeref:typename:void
numlockmask	suckless/.suckless/dwm/dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
numlockmask	suckless/.suckless/tabbed/tabbed.c	/^static unsigned int numlockmask;$/;"	v	typeref:typename:unsigned int	file:
o	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
ob	suckless/.suckless/st/st.c	/^	} nb, ne, ob, oe;$/;"	m	struct:__anon140a12590208	typeref:struct:__anon140a12590208::__anon140a12590308	file:
ocx	suckless/.suckless/st/st.c	/^	int ocx;      \/* old cursor col *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
ocy	suckless/.suckless/st/st.c	/^	int ocy;      \/* old cursor row *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
oe	suckless/.suckless/st/st.c	/^	} nb, ne, ob, oe;$/;"	m	struct:__anon140a12590208	typeref:struct:__anon140a12590208::__anon140a12590308	file:
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.color.offline = "blue"$/;"	k	section:var
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.color.offline = "color for offline buddies"$/;"	k	section:desc
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.color.server.offline = "color for disconnected server (default: hide)"$/;"	k	section:desc
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.color.server.offline = "hide"$/;"	k	section:var
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.hide.buddy.if.offline = "hide buddy if offline (default: off)"$/;"	k	section:desc
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.hide.buddy.if.offline = "off"$/;"	k	section:var
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.hide.server.if.buddies.offline = "hides server when all buddies are offline for t/;"	k	section:desc
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.hide.server.if.buddies.offline = "off"$/;"	k	section:var
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.text.offline = ""$/;"	k	section:var
offline	weechat/.weechat/plugins.conf	/^perl.buddylist.text.offline = "optional offline text in buddylist (sort method has to be 'status/;"	k	section:desc
old	suckless/.suckless/dmenu/stest.c	/^static struct stat old, new;$/;"	v	typeref:struct:stat	file:
oldbutton	suckless/.suckless/st/x.c	/^static int oldbutton = 3; \/* button event on startup: 3 = release *\/$/;"	v	typeref:typename:int	file:
oldbw	suckless/.suckless/dwm/dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	suckless/.suckless/dwm/dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	suckless/.suckless/dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
oldw	suckless/.suckless/dwm/dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	suckless/.suckless/dwm/dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	suckless/.suckless/dwm/dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
online	weechat/.weechat/plugins.conf	/^perl.buddylist.color.online = "color for online buddies"$/;"	k	section:desc
online	weechat/.weechat/plugins.conf	/^perl.buddylist.color.online = "yellow"$/;"	k	section:var
online	weechat/.weechat/plugins.conf	/^perl.buddylist.text.online = ""$/;"	k	section:var
online	weechat/.weechat/plugins.conf	/^perl.buddylist.text.online = "optional online text in buddylist (sort method has to be 'status')/;"	k	section:desc
open_smart	bin/.bin/open	/^sub open_smart$/;"	s
opt_class	suckless/.suckless/st/x.c	/^static char *opt_class = NULL;$/;"	v	typeref:typename:char *	file:
opt_cmd	suckless/.suckless/st/x.c	/^static char **opt_cmd  = NULL;$/;"	v	typeref:typename:char **	file:
opt_embed	suckless/.suckless/st/x.c	/^static char *opt_embed = NULL;$/;"	v	typeref:typename:char *	file:
opt_font	suckless/.suckless/st/x.c	/^static char *opt_font  = NULL;$/;"	v	typeref:typename:char *	file:
opt_io	suckless/.suckless/st/x.c	/^static char *opt_io    = NULL;$/;"	v	typeref:typename:char *	file:
opt_line	suckless/.suckless/st/x.c	/^static char *opt_line  = NULL;$/;"	v	typeref:typename:char *	file:
opt_name	suckless/.suckless/st/x.c	/^static char *opt_name  = NULL;$/;"	v	typeref:typename:char *	file:
opt_title	suckless/.suckless/st/x.c	/^static char *opt_title = NULL;$/;"	v	typeref:typename:char *	file:
option	weechat/.weechat/aspell.conf	/^[option]$/;"	s
option	weechat/.weechat/fset.conf	/^option = default$/;"	k	section:color
option1	weechat/.weechat/fset.conf	/^option1 = ""$/;"	k	section:format
option2	weechat/.weechat/fset.conf	/^option2 = "${marked} ${name}  ${type}  ${value2}${newline}  ${empty_name}  ${_default_value}${co/;"	k	section:format
option_changed	weechat/.weechat/fset.conf	/^option_changed = brown$/;"	k	section:color
option_changed_selected	weechat/.weechat/fset.conf	/^option_changed_selected = yellow$/;"	k	section:color
option_selected	weechat/.weechat/fset.conf	/^option_selected = white$/;"	k	section:color
options	suckless/.suckless/dmenu/Makefile	/^options:$/;"	t
options	suckless/.suckless/dwm/Makefile	/^options:$/;"	t
options	suckless/.suckless/st/Makefile	/^options:$/;"	t
options	suckless/.suckless/surf/Makefile	/^options:$/;"	t
options	suckless/.suckless/tabbed/Makefile	/^options:$/;"	t
out	suckless/.suckless/dmenu/dmenu.c	/^	int out;$/;"	m	struct:item	typeref:typename:int	file:
overtitle	suckless/.suckless/surf/surf.c	/^	const char *title, *overtitle, *targeturi;$/;"	m	struct:Client	typeref:typename:const char **	file:
own_ip	weechat/.weechat/xfer.conf	/^own_ip = ""$/;"	k	section:network
p	weechat/.weechat/weechat.conf	/^meta-p = "\/window scroll_previous_highlight"$/;"	k	section:key
pageid	suckless/.suckless/surf/surf.c	/^	unsigned long pageid;$/;"	m	struct:Client	typeref:typename:unsigned long	file:
pages	suckless/.suckless/surf/libsurf-webext.c	/^static Page *pages;$/;"	v	typeref:typename:Page *	file:
pagestats	suckless/.suckless/surf/surf.c	/^static char pagestats[2];$/;"	v	typeref:typename:char[2]	file:
palette	weechat/.weechat/weechat.conf	/^[palette]$/;"	s
pandoc_syntax	config/.config/nvim/init.vim	/^augroup pandoc_syntax$/;"	a
parent_name	weechat/.weechat/fset.conf	/^parent_name = default$/;"	k	section:color
parent_name_selected	weechat/.weechat/fset.conf	/^parent_name_selected = white$/;"	k	section:color
parent_value	weechat/.weechat/fset.conf	/^parent_value = cyan$/;"	k	section:color
parent_value_selected	weechat/.weechat/fset.conf	/^parent_value_selected = lightcyan$/;"	k	section:color
parentwin	suckless/.suckless/dmenu/dmenu.c	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window	file:
parseuri	suckless/.suckless/surf/surf.c	/^parseuri(const gchar *uri) {$/;"	f	typeref:typename:gchar *
part_closes_buffer	weechat/.weechat/irc.conf	/^part_closes_buffer = off$/;"	k	section:look
partial_completion_alert	weechat/.weechat/weechat.conf	/^partial_completion_alert = on$/;"	k	section:completion
partial_completion_command	weechat/.weechat/weechat.conf	/^partial_completion_command = off$/;"	k	section:completion
partial_completion_command_arg	weechat/.weechat/weechat.conf	/^partial_completion_command_arg = off$/;"	k	section:completion
partial_completion_count	weechat/.weechat/weechat.conf	/^partial_completion_count = on$/;"	k	section:completion
partial_completion_other	weechat/.weechat/weechat.conf	/^partial_completion_other = off$/;"	k	section:completion
partial_completion_templates	weechat/.weechat/weechat.conf	/^partial_completion_templates = "config_options"$/;"	k	section:completion
password	weechat/.weechat/irc.conf	/^BNC.password = "Supermand91!"$/;"	k	section:server
password	weechat/.weechat/irc.conf	/^OFTC.password = "Supermand91!"$/;"	k	section:server
password	weechat/.weechat/irc.conf	/^password = ""$/;"	k	section:server_default
password	weechat/.weechat/relay.conf	/^password = ""$/;"	k	section:network
paste	suckless/.suckless/dmenu/dmenu.c	/^paste(void)$/;"	f	typeref:typename:void	file:
paste_auto_add_newline	weechat/.weechat/weechat.conf	/^paste_auto_add_newline = on$/;"	k	section:look
paste_bracketed	weechat/.weechat/weechat.conf	/^paste_bracketed = on$/;"	k	section:look
paste_bracketed_timer_delay	weechat/.weechat/weechat.conf	/^paste_bracketed_timer_delay = 10$/;"	k	section:look
paste_max_lines	weechat/.weechat/weechat.conf	/^paste_max_lines = 1$/;"	k	section:look
pasteuri	suckless/.suckless/surf/surf.c	/^pasteuri(GtkClipboard *clipboard, const char *text, gpointer d)$/;"	f	typeref:typename:void
path	weechat/.weechat/fifo.conf	/^path = "%h\/weechat_fifo"$/;"	k	section:file
path	weechat/.weechat/logger.conf	/^path = "%h\/logs\/"$/;"	k	section:file
path	weechat/.weechat/relay.conf	/^[path]$/;"	s
path	weechat/.weechat/script.conf	/^path = "%h\/script"$/;"	k	section:scripts
path	weechat/.weechat/weechat.conf	/^path = "%h\/plugins"$/;"	k	section:plugin
pattern	suckless/.suckless/dmenu/drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pattern	suckless/.suckless/dwm/drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pattern	suckless/.suckless/st/x.c	/^	FcPattern *pattern;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:FcPattern *	file:
permissionrequested	suckless/.suckless/surf/surf.c	/^permissionrequested(WebKitWebView *v, WebKitPermissionRequest *r, Client *c)$/;"	f	typeref:typename:gboolean
pertag	suckless/.suckless/dwm/dwm.c	/^	Pertag *pertag;$/;"	m	struct:Monitor	typeref:typename:Pertag *	file:
pid	suckless/.suckless/st/st.c	/^static pid_t pid;$/;"	v	typeref:typename:pid_t	file:
pipein	suckless/.suckless/surf/libsurf-webext.c	/^static int pipein, pipeout;$/;"	v	typeref:typename:int	file:
pipein	suckless/.suckless/surf/surf.c	/^static int pipein[2], pipeout[2];$/;"	v	typeref:typename:int[2]	file:
pipeout	suckless/.suckless/surf/libsurf-webext.c	/^static int pipein, pipeout;$/;"	v	typeref:typename:int	file:
pipeout	suckless/.suckless/surf/surf.c	/^static int pipein[2], pipeout[2];$/;"	v	typeref:typename:int[2][2]	file:
plug#	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plugin	weechat/.weechat/weechat.conf	/^[plugin]$/;"	s
pop	suckless/.suckless/dwm/dwm.c	/^pop(Client *c)$/;"	f	typeref:typename:void
port	weechat/.weechat/relay.conf	/^[port]$/;"	s
port_range	weechat/.weechat/xfer.conf	/^port_range = ""$/;"	k	section:network
position	weechat/.weechat/weechat.conf	/^buddylist.position = top$/;"	k	section:bar
position	weechat/.weechat/weechat.conf	/^buflist.position = left$/;"	k	section:bar
position	weechat/.weechat/weechat.conf	/^fset.position = top$/;"	k	section:bar
position	weechat/.weechat/weechat.conf	/^input.position = bottom$/;"	k	section:bar
position	weechat/.weechat/weechat.conf	/^nicklist.position = right$/;"	k	section:bar
position	weechat/.weechat/weechat.conf	/^status.position = bottom$/;"	k	section:bar
position	weechat/.weechat/weechat.conf	/^title.position = top$/;"	k	section:bar
post_action	weechat/.weechat/trigger.conf	/^beep.post_action = none$/;"	k	section:trigger
post_action	weechat/.weechat/trigger.conf	/^cmd_pass.post_action = none$/;"	k	section:trigger
post_action	weechat/.weechat/trigger.conf	/^cmd_pass_register.post_action = none$/;"	k	section:trigger
post_action	weechat/.weechat/trigger.conf	/^msg_auth.post_action = none$/;"	k	section:trigger
post_action	weechat/.weechat/trigger.conf	/^server_pass.post_action = none$/;"	k	section:trigger
prefix_action	weechat/.weechat/weechat.conf	/^prefix_action = " *"$/;"	k	section:look
prefix_align	weechat/.weechat/weechat.conf	/^prefix_align = right$/;"	k	section:look
prefix_align_max	weechat/.weechat/weechat.conf	/^prefix_align_max = 0$/;"	k	section:look
prefix_align_min	weechat/.weechat/weechat.conf	/^prefix_align_min = 0$/;"	k	section:look
prefix_align_more	weechat/.weechat/weechat.conf	/^prefix_align_more = "+"$/;"	k	section:look
prefix_align_more_after	weechat/.weechat/weechat.conf	/^prefix_align_more_after = on$/;"	k	section:look
prefix_buffer_align	weechat/.weechat/weechat.conf	/^prefix_buffer_align = right$/;"	k	section:look
prefix_buffer_align_max	weechat/.weechat/weechat.conf	/^prefix_buffer_align_max = 0$/;"	k	section:look
prefix_buffer_align_more	weechat/.weechat/weechat.conf	/^prefix_buffer_align_more = "+"$/;"	k	section:look
prefix_buffer_align_more_after	weechat/.weechat/weechat.conf	/^prefix_buffer_align_more_after = on$/;"	k	section:look
prefix_error	weechat/.weechat/weechat.conf	/^prefix_error = "=!="$/;"	k	section:look
prefix_join	weechat/.weechat/weechat.conf	/^prefix_join = "-->"$/;"	k	section:look
prefix_network	weechat/.weechat/weechat.conf	/^prefix_network = "--"$/;"	k	section:look
prefix_quit	weechat/.weechat/weechat.conf	/^prefix_quit = "<--"$/;"	k	section:look
prefix_same_nick	weechat/.weechat/weechat.conf	/^prefix_same_nick = ""$/;"	k	section:look
prefix_same_nick_middle	weechat/.weechat/weechat.conf	/^prefix_same_nick_middle = ""$/;"	k	section:look
prefix_suffix	weechat/.weechat/weechat.conf	/^prefix_suffix = "|"$/;"	k	section:look
prepare	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^prepare() {$/;"	f
prev	suckless/.suckless/dmenu/dmenu.c	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *	file:
prev_song	bin/.bin/spotify-controller	/^prev_song(){$/;"	f
prevtag	suckless/.suckless/dwm/dwm.c	/^	unsigned int curtag, prevtag; \/* current and previous tag *\/$/;"	m	struct:Pertag	typeref:typename:unsigned int	file:
primary	suckless/.suckless/st/x.c	/^	char *primary, *clipboard;$/;"	m	struct:__anon6574b7aa0608	typeref:typename:char *	file:
print	suckless/.suckless/surf/surf.c	/^print(Client *c, const Arg *a)$/;"	f	typeref:typename:void
printscreen	suckless/.suckless/st/st.c	/^printscreen(const Arg *arg)$/;"	f	typeref:typename:void
printsel	suckless/.suckless/st/st.c	/^printsel(const Arg *arg)$/;"	f	typeref:typename:void
prio	suckless/.suckless/surf/surf.c	/^	int prio;$/;"	m	struct:__anonb95973ab0508	typeref:typename:int	file:
priority	weechat/.weechat/weechat.conf	/^buddylist.priority = 0$/;"	k	section:bar
priority	weechat/.weechat/weechat.conf	/^buflist.priority = 0$/;"	k	section:bar
priority	weechat/.weechat/weechat.conf	/^fset.priority = 0$/;"	k	section:bar
priority	weechat/.weechat/weechat.conf	/^input.priority = 1000$/;"	k	section:bar
priority	weechat/.weechat/weechat.conf	/^nicklist.priority = 200$/;"	k	section:bar
priority	weechat/.weechat/weechat.conf	/^status.priority = 500$/;"	k	section:bar
priority	weechat/.weechat/weechat.conf	/^title.priority = 500$/;"	k	section:bar
priv	suckless/.suckless/st/st.c	/^	char priv;$/;"	m	struct:__anon140a12590508	typeref:typename:char	file:
processx	suckless/.suckless/surf/surf.c	/^processx(GdkXEvent *e, GdkEvent *event, gpointer d)$/;"	f	typeref:typename:GdkFilterReturn
progress	suckless/.suckless/surf/surf.c	/^	int progress, fullscreen, https, insecure, errorpage;$/;"	m	struct:Client	typeref:typename:int	file:
progress_bar_size	weechat/.weechat/xfer.conf	/^progress_bar_size = 20$/;"	k	section:look
progresschanged	suckless/.suckless/surf/surf.c	/^progresschanged(WebKitWebView *v, GParamSpec *ps, Client *c)$/;"	f	typeref:typename:void
prompt	suckless/.suckless/dmenu/config.def.h	/^static const char *prompt      = NULL;      \/* -p  option; prompt to the left of input field *\/$/;"	v	typeref:typename:const char *
prompt	suckless/.suckless/dmenu/config.h	/^static const char *prompt      = NULL;      \/* -p  option; prompt to the left of input field *\/$/;"	v	typeref:typename:const char *
promptw	suckless/.suckless/dmenu/dmenu.c	/^static int inputw = 0, promptw;$/;"	v	typeref:typename:int	file:
propertynotify	suckless/.suckless/dwm/dwm.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
propertynotify	suckless/.suckless/tabbed/tabbed.c	/^propertynotify(const XEvent *e)$/;"	f	typeref:typename:void
propnotify	suckless/.suckless/st/x.c	/^propnotify(XEvent *e)$/;"	f	typeref:typename:void
proxy	weechat/.weechat/irc.conf	/^proxy = ""$/;"	k	section:server_default
proxy	weechat/.weechat/weechat.conf	/^[proxy]$/;"	s
proxy_curl	weechat/.weechat/weechat.conf	/^proxy_curl = ""$/;"	k	section:network
purge_delay	weechat/.weechat/exec.conf	/^purge_delay = 0$/;"	k	section:command
pv_buffer	weechat/.weechat/irc.conf	/^pv_buffer = independent$/;"	k	section:look
pv_tags	weechat/.weechat/irc.conf	/^pv_tags = "notify_private"$/;"	k	section:look
pv_tags	weechat/.weechat/xfer.conf	/^pv_tags = "notify_private"$/;"	k	section:look
python_highlight_all	config/.config/nvim/ftplugin/python.vim	/^let python_highlight_all=1$/;"	v
q	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  nnoremap <silent> <buffer> q  :if b:plug_preview==1<bar>pc<bar>endif<bar>bd<cr>$/;"	m
q	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
query	weechat/.weechat/plugins.conf	/^perl.buddylist.show.query = "displays a query buffer in front of the channel list"$/;"	k	section:desc
query	weechat/.weechat/plugins.conf	/^perl.buddylist.show.query = "on"$/;"	k	section:var
quiet_actions	weechat/.weechat/script.conf	/^quiet_actions = on$/;"	k	section:look
quit	suckless/.suckless/dwm/dwm.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
quote_nick_prefix	weechat/.weechat/weechat.conf	/^quote_nick_prefix = "<"$/;"	k	section:look
quote_nick_suffix	weechat/.weechat/weechat.conf	/^quote_nick_suffix = ">"$/;"	k	section:look
quote_time_format	weechat/.weechat/weechat.conf	/^quote_time_format = "%H:%M:%S"$/;"	k	section:look
quotes	weechat/.weechat/fset.conf	/^quotes = darkgray$/;"	k	section:color
quotes_changed	weechat/.weechat/fset.conf	/^quotes_changed = default$/;"	k	section:color
quotes_changed_selected	weechat/.weechat/fset.conf	/^quotes_changed_selected = white$/;"	k	section:color
quotes_selected	weechat/.weechat/fset.conf	/^quotes_selected = default$/;"	k	section:color
r	weechat/.weechat/weechat.conf	/^meta-jmeta-r = "\/server raw"$/;"	k	section:key
r	weechat/.weechat/weechat.conf	/^meta-r = "\/input delete_line"$/;"	k	section:key
raise_error	bin/.bin/spotify-controller	/^raise_error() {$/;"	f
raw_messages	weechat/.weechat/irc.conf	/^raw_messages = 256$/;"	k	section:look
raw_messages	weechat/.weechat/relay.conf	/^raw_messages = 256$/;"	k	section:look
rbearing	suckless/.suckless/st/x.c	/^	short rbearing;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:short	file:
re	suckless/.suckless/surf/surf.c	/^	regex_t re;$/;"	m	struct:__anonb95973ab0908	typeref:typename:regex_t	file:
re	suckless/.suckless/surf/surf.c	/^	regex_t re;$/;"	m	struct:__anonb95973ab0a08	typeref:typename:regex_t	file:
read_maps	bin/.bin/open	/^	sub read_maps$/;"	s
read_marker	weechat/.weechat/weechat.conf	/^read_marker = line$/;"	k	section:look
read_marker_always_show	weechat/.weechat/weechat.conf	/^read_marker_always_show = off$/;"	k	section:look
read_marker_string	weechat/.weechat/weechat.conf	/^read_marker_string = "- "$/;"	k	section:look
readpipe	suckless/.suckless/surf/libsurf-webext.c	/^readpipe(GIOChannel *s, GIOCondition c, gpointer unused)$/;"	f	typeref:typename:gboolean	file:
readpipe	suckless/.suckless/surf/surf.c	/^readpipe(GIOChannel *s, GIOCondition ioc, gpointer unused)$/;"	f	typeref:typename:gboolean	file:
readstdin	suckless/.suckless/dmenu/dmenu.c	/^readstdin(void)$/;"	f	typeref:typename:void	file:
real_time	weechat/.weechat/aspell.conf	/^real_time = off$/;"	k	section:check
realname	weechat/.weechat/irc.conf	/^realname = ""$/;"	k	section:server_default
reason_quit	weechat/.weechat/irc.conf	/^reason_quit = default$/;"	k	section:color
recttomon	suckless/.suckless/dwm/dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
redirection	weechat/.weechat/plugins.conf	/^perl.buddylist.use.redirection = "on"$/;"	k	section:var
redirection	weechat/.weechat/plugins.conf	/^perl.buddylist.use.redirection = "using redirection to get status of buddies (needs weechat >=0./;"	k	section:desc
redraw	suckless/.suckless/st/st.c	/^redraw(void)$/;"	f	typeref:typename:void
regex	suckless/.suckless/surf/surf.c	/^	char *regex;$/;"	m	struct:__anonb95973ab0a08	typeref:typename:char *	file:
regex	weechat/.weechat/trigger.conf	/^beep.regex = ""$/;"	k	section:trigger
regex	weechat/.weechat/trigger.conf	/^cmd_pass.regex = "==^((\/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +(id|identify|set +password|/;"	k	section:trigger
regex	weechat/.weechat/trigger.conf	/^cmd_pass_register.regex = "==^(\/(msg|m|quote) +nickserv +register +)([^ ]+)(.*)==${re:1}${hide:/;"	k	section:trigger
regex	weechat/.weechat/trigger.conf	/^msg_auth.regex = "==^(.*(id|identify|set +password|register|ghost +[^ ]+|release +[^ ]+|regain +/;"	k	section:trigger
regex	weechat/.weechat/trigger.conf	/^regex = white$/;"	k	section:color
regex	weechat/.weechat/trigger.conf	/^server_pass.regex = "==^(\/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${/;"	k	section:trigger
reload	suckless/.suckless/surf/surf.c	/^reload(Client *c, const Arg *a)$/;"	f	typeref:typename:void
replace	weechat/.weechat/trigger.conf	/^replace = cyan$/;"	k	section:color
replacement_char	weechat/.weechat/logger.conf	/^replacement_char = "_"$/;"	k	section:file
resettitle	suckless/.suckless/st/st.c	/^resettitle(void)$/;"	f	typeref:typename:void
resize	suckless/.suckless/dwm/dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resize	suckless/.suckless/st/x.c	/^resize(XEvent *e)$/;"	f	typeref:typename:void
resize	suckless/.suckless/tabbed/tabbed.c	/^resize(int c, int w, int h)$/;"	f	typeref:typename:void
resizeclient	suckless/.suckless/dwm/dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizehints	suckless/.suckless/dwm/config.def.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizehints	suckless/.suckless/dwm/config.h	/^static const int resizehints = 0;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizemouse	suckless/.suckless/dwm/dwm.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
responsereceived	suckless/.suckless/surf/surf.c	/^responsereceived(WebKitDownload *d, GParamSpec *ps, Client *c)$/;"	f	typeref:typename:void
restack	suckless/.suckless/dwm/dwm.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
return_code	weechat/.weechat/trigger.conf	/^beep.return_code = ok$/;"	k	section:trigger
return_code	weechat/.weechat/trigger.conf	/^cmd_pass.return_code = ok$/;"	k	section:trigger
return_code	weechat/.weechat/trigger.conf	/^cmd_pass_register.return_code = ok$/;"	k	section:trigger
return_code	weechat/.weechat/trigger.conf	/^msg_auth.return_code = ok$/;"	k	section:trigger
return_code	weechat/.weechat/trigger.conf	/^server_pass.return_code = ok$/;"	k	section:trigger
reveal	bin/.bin/open	/^sub reveal$/;"	s
right	suckless/.suckless/dmenu/dmenu.c	/^	struct item *left, *right;$/;"	m	struct:item	typeref:struct:item **	file:
root	suckless/.suckless/dmenu/dmenu.c	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window	file:
root	suckless/.suckless/dmenu/drw.h	/^	Window root;$/;"	m	struct:__anonacedaf960308	typeref:typename:Window
root	suckless/.suckless/dwm/drw.h	/^	Window root;$/;"	m	struct:__anon3552f5450308	typeref:typename:Window
root	suckless/.suckless/dwm/dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
root	suckless/.suckless/tabbed/tabbed.c	/^static Window root, win;$/;"	v	typeref:typename:Window	file:
rotate	suckless/.suckless/tabbed/tabbed.c	/^rotate(const Arg *arg)$/;"	f	typeref:typename:void
row	suckless/.suckless/st/st.c	/^	int row;      \/* nb row *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
rows	suckless/.suckless/st/config.def.h	/^static unsigned int rows = 24;$/;"	v	typeref:typename:unsigned int
rows	suckless/.suckless/st/config.h	/^static unsigned int rows = 24;$/;"	v	typeref:typename:unsigned int
rules	suckless/.suckless/dwm/config.def.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
rules	suckless/.suckless/dwm/config.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
run	suckless/.suckless/dmenu/dmenu.c	/^run(void)$/;"	f	typeref:typename:void	file:
run	suckless/.suckless/dwm/dwm.c	/^run(void)$/;"	f	typeref:typename:void
run	suckless/.suckless/st/x.c	/^run(void)$/;"	f	typeref:typename:void
run	suckless/.suckless/tabbed/tabbed.c	/^run(void)$/;"	f	typeref:typename:void
running	suckless/.suckless/dwm/dwm.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
running	suckless/.suckless/tabbed/tabbed.c	/^static Bool running = True, nextfocus, doinitspawn = True,$/;"	v	typeref:typename:Bool	file:
runscript	suckless/.suckless/surf/surf.c	/^runscript(Client *c)$/;"	f	typeref:typename:void
runtabbed	suckless/.suckless/surf/surf-open.sh	/^runtabbed() {$/;"	f
s	suckless/.suckless/st/x.c	/^	char *s;$/;"	m	struct:__anon6574b7aa0208	typeref:typename:char *	file:
s	suckless/.suckless/st/x.c	/^	char *s;$/;"	m	struct:__anon6574b7aa0308	typeref:typename:char *	file:
s	weechat/.weechat/weechat.conf	/^meta-jmeta-s = "\/server jump"$/;"	k	section:key
s	weechat/.weechat/weechat.conf	/^meta-s = "\/mute aspell toggle"$/;"	k	section:key
s	weechat/.weechat/weechat.conf	/^meta-wmeta-s = "\/window swap"$/;"	k	section:key
s:TYPE	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:append_ul	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:ask	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assign_name	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:bang	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:bar()$/;"	f
s:base_spec	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:batchfile	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
s:check_ruby	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checkout	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:chsh	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:compare_git_uri	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:cpo_save	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:define_commands	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:delete	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete_op	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:diff	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:diff()$/;"	f
s:dirpath	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:do	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:doautocmd	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:err	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:esc	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escrtp	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:extract_name	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:find_name	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:finish	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:first_rtp	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:format_git_log	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_message	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:git_validate	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version_requirement	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:glob	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob_dir	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:goyo_enter	config/.config/nvim/init.vim	/^	function! s:goyo_enter()$/;"	f
s:goyo_leave	config/.config/nvim/init.vim	/^	function! s:goyo_leave()$/;"	f
s:hash_match	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:infer_properties	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:install	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:is_local_plug	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_managed	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_preview_window_open	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_updated	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_win	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:job_abort	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_out_cb	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:last_non_empty_line	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_rtp	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:lastline	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:lazy	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:lines	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:load_plugin	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:loaded	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded_names	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:lod	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log4	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:logpos	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:mac_gui	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:me	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:names	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:names(...)$/;"	f
s:new_window	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:new_window()$/;"	f
s:nvim	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:parse_options	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:path	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:plug_buf	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_window_exists	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:prepare	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:preview_commit	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:progress_bar	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:reap	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:regress_bar	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:reload_plugins	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remove_rtp	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_triggers	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:reorg_rtp	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:retry	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:retry()$/;"	f
s:revert	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:revert()$/;"	f
s:rm_rf	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:rtp	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
s:section	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:shellesc_cmd	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
s:shellesc_ps1	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
s:snapshot	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:source	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:spawn	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:split_rtp	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:status	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:status()$/;"	f
s:status_load	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:switch_in	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:syntax	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:syntax()$/;"	f
s:system	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system_chomp	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:tick	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:tick()$/;"	f
s:to_a	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_s	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:triggers	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:update	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_finish	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_impl	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_python	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_ruby	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_vim	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:upgrade	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:version_requirement	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:vim8	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:warn	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:with_cd	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
s:wrap_cmds	config/.config/nvim/plugged/vim-plug/autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
sasl_fail	weechat/.weechat/irc.conf	/^sasl_fail = continue$/;"	k	section:server_default
sasl_fail_unavailable	weechat/.weechat/irc.conf	/^sasl_fail_unavailable = on$/;"	k	section:network
sasl_key	weechat/.weechat/irc.conf	/^sasl_key = ""$/;"	k	section:server_default
sasl_mechanism	weechat/.weechat/irc.conf	/^sasl_mechanism = plain$/;"	k	section:server_default
sasl_password	weechat/.weechat/irc.conf	/^sasl_password = ""$/;"	k	section:server_default
sasl_timeout	weechat/.weechat/irc.conf	/^sasl_timeout = 15$/;"	k	section:server_default
sasl_username	weechat/.weechat/irc.conf	/^sasl_username = ""$/;"	k	section:server_default
save_config_on_exit	weechat/.weechat/weechat.conf	/^save_config_on_exit = on$/;"	k	section:look
save_config_on_unload	weechat/.weechat/weechat.conf	/^save_config_on_unload = on$/;"	k	section:plugin
save_config_with_fsync	weechat/.weechat/weechat.conf	/^save_config_with_fsync = off$/;"	k	section:look
save_layout_on_exit	weechat/.weechat/weechat.conf	/^save_layout_on_exit = none$/;"	k	section:look
savehistory	suckless/.suckless/dmenu/dmenu.c	/^savehistory(char *str)$/;"	f	typeref:typename:void	file:
scan	suckless/.suckless/dwm/dwm.c	/^scan(void)$/;"	f	typeref:typename:void
scheme	suckless/.suckless/dmenu/dmenu.c	/^static Clr *scheme[SchemeLast];$/;"	v	typeref:typename:Clr * []	file:
scheme	suckless/.suckless/dmenu/drw.h	/^	Clr *scheme;$/;"	m	struct:__anonacedaf960308	typeref:typename:Clr *
scheme	suckless/.suckless/dwm/drw.h	/^	Clr *scheme;$/;"	m	struct:__anon3552f5450308	typeref:typename:Clr *
scheme	suckless/.suckless/dwm/dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
scr	suckless/.suckless/st/diffs/.tmux.conf	/^+		term.scr = MIN(term.scr + n, HISTSIZE-1);$/;"	k
scr	suckless/.suckless/st/diffs/.tmux.conf	/^+	if (term.scr == 0)$/;"	k
scr	suckless/.suckless/st/st.c	/^	int scr;      \/* scroll back *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
scr	suckless/.suckless/st/x.c	/^	int scr;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:int	file:
scratchpadcmd	suckless/.suckless/dwm/config.h	/^static const char *scratchpadcmd[] = { "st", "-t", scratchpadname, "-g", "120x34", NULL };$/;"	v	typeref:typename:const char * []
scratchpadname	suckless/.suckless/dwm/config.h	/^static const char scratchpadname[] = "scratchpad";$/;"	v	typeref:typename:const char[]
scratchtag	suckless/.suckless/dwm/dwm.c	/^static unsigned int scratchtag = 1 << LENGTH(tags);$/;"	v	typeref:typename:unsigned int	file:
screen	suckless/.suckless/dmenu/dmenu.c	/^static int mon = -1, screen;$/;"	v	typeref:typename:int	file:
screen	suckless/.suckless/dmenu/drw.h	/^	int screen;$/;"	m	struct:__anonacedaf960308	typeref:typename:int
screen	suckless/.suckless/dwm/drw.h	/^	int screen;$/;"	m	struct:__anon3552f5450308	typeref:typename:int
screen	suckless/.suckless/dwm/dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
screen	suckless/.suckless/tabbed/tabbed.c	/^static int screen;$/;"	v	typeref:typename:int	file:
scriptfile	suckless/.suckless/surf/config.def.h	/^static char *scriptfile     = "~\/.surf\/script.js";$/;"	v	typeref:typename:char *
scriptfile	suckless/.suckless/surf/config.h	/^static char *scriptfile     = "~\/.surf\/script.js";$/;"	v	typeref:typename:char *
scripts	weechat/.weechat/script.conf	/^[scripts]$/;"	s
scroll_amount	weechat/.weechat/weechat.conf	/^scroll_amount = 3$/;"	k	section:look
scroll_bottom_after_switch	weechat/.weechat/weechat.conf	/^scroll_bottom_after_switch = off$/;"	k	section:look
scroll_horizontal	weechat/.weechat/fset.conf	/^scroll_horizontal = 10$/;"	k	section:look
scroll_page_percent	weechat/.weechat/weechat.conf	/^scroll_page_percent = 100$/;"	k	section:look
scrollh	suckless/.suckless/surf/surf.c	/^scrollh(Client *c, const Arg *a)$/;"	f	typeref:typename:void
scrollv	suckless/.suckless/surf/surf.c	/^scrollv(Client *c, const Arg *a)$/;"	f	typeref:typename:void
search_text_not_found_alert	weechat/.weechat/weechat.conf	/^search_text_not_found_alert = on$/;"	k	section:look
searchengines	suckless/.suckless/surf/config.h	/^static SearchEngine searchengines[] = {$/;"	v	typeref:typename:SearchEngine[]
section	weechat/.weechat/fset.conf	/^section = default$/;"	k	section:color
section_changed	weechat/.weechat/fset.conf	/^section_changed = brown$/;"	k	section:color
section_changed_selected	weechat/.weechat/fset.conf	/^section_changed_selected = yellow$/;"	k	section:color
section_selected	weechat/.weechat/fset.conf	/^section_selected = white$/;"	k	section:color
sel	suckless/.suckless/dmenu/dmenu.c	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item ****	file:
sel	suckless/.suckless/dwm/dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
sel	suckless/.suckless/st/st.c	/^static Selection sel;$/;"	v	typeref:typename:Selection	file:
sel	suckless/.suckless/tabbed/tabbed.c	/^	XftColor sel[ColLast];$/;"	m	struct:__anon0f72b96f0508	typeref:typename:XftColor[]	file:
sel	suckless/.suckless/tabbed/tabbed.c	/^static int nclients, sel = -1, lastsel = -1;$/;"	v	typeref:typename:int	file:
selbgcolor	suckless/.suckless/tabbed/config.def.h	/^static const char* selbgcolor   = "#555555";$/;"	v	typeref:typename:const char *
selbgcolor	suckless/.suckless/tabbed/config.h	/^static const char* selbgcolor   = "#555555";$/;"	v	typeref:typename:const char *
selclear	suckless/.suckless/st/st.c	/^selclear(void)$/;"	f	typeref:typename:void
selclear_	suckless/.suckless/st/x.c	/^selclear_(XEvent *e)$/;"	f	typeref:typename:void
select_vim	config/.config/nvim/plugged/vim-plug/autoload/test/run	/^select_vim() {$/;"	f
selected	suckless/.suckless/st/st.c	/^selected(int x, int y)$/;"	f	typeref:typename:int
selection_mode	suckless/.suckless/st/st.h	/^enum selection_mode {$/;"	g
selection_snap	suckless/.suckless/st/st.h	/^enum selection_snap {$/;"	g
selection_type	suckless/.suckless/st/st.h	/^enum selection_type {$/;"	g
selextend	suckless/.suckless/st/st.c	/^selextend(int col, int row, int type, int done)$/;"	f	typeref:typename:void
self_restart	suckless/.suckless/dwm/selfrestart.c	/^void self_restart(const Arg *arg) {$/;"	f	typeref:typename:void
selfgcolor	suckless/.suckless/tabbed/config.def.h	/^static const char* selfgcolor   = "#ffffff";$/;"	v	typeref:typename:const char *
selfgcolor	suckless/.suckless/tabbed/config.h	/^static const char* selfgcolor   = "#ffffff";$/;"	v	typeref:typename:const char *
selinit	suckless/.suckless/st/st.c	/^selinit(void)$/;"	f	typeref:typename:void
sellt	suckless/.suckless/dwm/dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sellts	suckless/.suckless/dwm/dwm.c	/^	unsigned int sellts[LENGTH(tags) + 1]; \/* selected layouts *\/$/;"	m	struct:Pertag	typeref:typename:unsigned int[]	file:
selmasks	suckless/.suckless/st/config.def.h	/^static uint selmasks[] = {$/;"	v	typeref:typename:uint[]
selmasks	suckless/.suckless/st/config.h	/^static uint selmasks[] = {$/;"	v	typeref:typename:uint[]
selmon	suckless/.suckless/dwm/dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor **	file:
selnormalize	suckless/.suckless/st/st.c	/^selnormalize(void)$/;"	f	typeref:typename:void
selnotify	suckless/.suckless/st/x.c	/^selnotify(XEvent *e)$/;"	f	typeref:typename:void
selpaste	suckless/.suckless/st/x.c	/^selpaste(const Arg *dummy)$/;"	f	typeref:typename:void
selrequest	suckless/.suckless/st/x.c	/^selrequest(XEvent *e)$/;"	f	typeref:typename:void
selscroll	suckless/.suckless/st/st.c	/^selscroll(int orig, int n)$/;"	f	typeref:typename:void
selsnap	suckless/.suckless/st/st.c	/^selsnap(int *x, int *y, int direction)$/;"	f	typeref:typename:void
selstart	suckless/.suckless/st/st.c	/^selstart(int col, int row, int snap)$/;"	f	typeref:typename:void
seltags	suckless/.suckless/dwm/dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
send_ack	weechat/.weechat/xfer.conf	/^send_ack = on$/;"	k	section:network
send_notification	bin/.bin/brightness	/^function send_notification {$/;"	f
send_unknown_commands	weechat/.weechat/irc.conf	/^send_unknown_commands = off$/;"	k	section:network
sendbreak	suckless/.suckless/st/st.c	/^sendbreak(const Arg *arg)$/;"	f	typeref:typename:void
sendevent	suckless/.suckless/dwm/dwm.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendmon	suckless/.suckless/dwm/dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
sendxembed	suckless/.suckless/tabbed/tabbed.c	/^sendxembed(int c, long msg, long detail, long d1, long d2)$/;"	f	typeref:typename:void
separator	weechat/.weechat/weechat.conf	/^buddylist.separator = on$/;"	k	section:bar
separator	weechat/.weechat/weechat.conf	/^buflist.separator = on$/;"	k	section:bar
separator	weechat/.weechat/weechat.conf	/^fset.separator = on$/;"	k	section:bar
separator	weechat/.weechat/weechat.conf	/^input.separator = off$/;"	k	section:bar
separator	weechat/.weechat/weechat.conf	/^nicklist.separator = on$/;"	k	section:bar
separator	weechat/.weechat/weechat.conf	/^separator = blue$/;"	k	section:color
separator	weechat/.weechat/weechat.conf	/^status.separator = off$/;"	k	section:bar
separator	weechat/.weechat/weechat.conf	/^title.separator = off$/;"	k	section:bar
separator_horizontal	weechat/.weechat/weechat.conf	/^separator_horizontal = "-"$/;"	k	section:look
separator_vertical	weechat/.weechat/weechat.conf	/^separator_vertical = ""$/;"	k	section:look
server	weechat/.weechat/irc.conf	/^[server]$/;"	s
server	weechat/.weechat/plugins.conf	/^perl.buddylist.buddy.on.server = "on"$/;"	k	section:var
server	weechat/.weechat/plugins.conf	/^perl.buddylist.buddy.on.server = "show buddy who is connected to a server, but not visiting the /;"	k	section:desc
server	weechat/.weechat/plugins.conf	/^perl.buddylist.color.server = "color for servername"$/;"	k	section:desc
server	weechat/.weechat/plugins.conf	/^perl.buddylist.color.server = "white"$/;"	k	section:var
server_buffer	weechat/.weechat/irc.conf	/^server_buffer = merge_with_core$/;"	k	section:look
server_default	weechat/.weechat/irc.conf	/^[server_default]$/;"	s
set	suckless/.suckless/st/x.c	/^	FcFontSet *set;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:FcFontSet *	file:
setatom	suckless/.suckless/surf/surf.c	/^setatom(Client *c, int a, const char *v)$/;"	f	typeref:typename:void
setcert	suckless/.suckless/surf/surf.c	/^setcert(Client *c, const char *uri)$/;"	f	typeref:typename:void
setclientstate	suckless/.suckless/dwm/dwm.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setcmd	suckless/.suckless/tabbed/tabbed.c	/^setcmd(int argc, char *argv[], int replace)$/;"	f	typeref:typename:void
setfocus	suckless/.suckless/dwm/dwm.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfullscreen	suckless/.suckless/dwm/dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setlayout	suckless/.suckless/dwm/dwm.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	suckless/.suckless/dwm/dwm.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setparameter	suckless/.suckless/surf/surf.c	/^setparameter(Client *c, int refresh, ParamName p, const Arg *a)$/;"	f	typeref:typename:void
setsel	suckless/.suckless/st/x.c	/^setsel(char *str, Time t)$/;"	f	typeref:typename:void
setstyle	suckless/.suckless/surf/surf.c	/^setstyle(Client *c, const char *file)$/;"	f	typeref:typename:void
setup	suckless/.suckless/dmenu/dmenu.c	/^setup(void)$/;"	f	typeref:typename:void	file:
setup	suckless/.suckless/dwm/dwm.c	/^setup(void)$/;"	f	typeref:typename:void
setup	suckless/.suckless/surf/surf.c	/^setup(void)$/;"	f	typeref:typename:void
setup	suckless/.suckless/tabbed/tabbed.c	/^setup(void)$/;"	f	typeref:typename:void
seturgent	suckless/.suckless/dwm/dwm.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
seturiparameters	suckless/.suckless/surf/surf.c	/^seturiparameters(Client *c, const char *uri, ParamName *params)$/;"	f	typeref:typename:void
sh	suckless/.suckless/dwm/dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
shell	suckless/.suckless/st/config.def.h	/^static char *shell = "\/bin\/sh";$/;"	v	typeref:typename:char *
shell	suckless/.suckless/st/config.h	/^static char *shell = "\/bin\/zsh";$/;"	v	typeref:typename:char *
shell	weechat/.weechat/exec.conf	/^shell = "sh"$/;"	k	section:command
shortcuts	suckless/.suckless/st/config.def.h	/^static Shortcut shortcuts[] = {$/;"	v	typeref:typename:Shortcut[]
shortcuts	suckless/.suckless/st/config.h	/^static Shortcut shortcuts[] = {$/;"	v	typeref:typename:Shortcut[]
show_plugins_desc	weechat/.weechat/fset.conf	/^show_plugins_desc = off$/;"	k	section:look
showbar	suckless/.suckless/dwm/config.def.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	suckless/.suckless/dwm/config.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	suckless/.suckless/dwm/dwm.c	/^	int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showbars	suckless/.suckless/dwm/dwm.c	/^	int showbars[LENGTH(tags) + 1]; \/* display bar for the current tag *\/$/;"	m	struct:Pertag	typeref:typename:int[]	file:
showcert	suckless/.suckless/surf/surf.c	/^showcert(Client *c, const Arg *a)$/;"	f	typeref:typename:void
showhide	suckless/.suckless/dwm/dwm.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
showview	suckless/.suckless/surf/surf.c	/^showview(WebKitWebView *v, Client *c)$/;"	f	typeref:typename:void
showxid	suckless/.suckless/surf/surf.c	/^static int showxid;$/;"	v	typeref:typename:int	file:
sigchld	suckless/.suckless/dwm/dwm.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
sigchld	suckless/.suckless/st/st.c	/^sigchld(int a)$/;"	f	typeref:typename:void
sigchld	suckless/.suckless/surf/surf.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
sigchld	suckless/.suckless/tabbed/tabbed.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
sighup	suckless/.suckless/surf/surf.c	/^sighup(int unused)$/;"	f	typeref:typename:void
signals_refresh	weechat/.weechat/buflist.conf	/^signals_refresh = ""$/;"	k	section:look
simpleXML	bin/.bin/pp	/^if ($simpleXML = simplexml_load_string($input)) {$/;"	v
sixd_to_16bit	suckless/.suckless/st/x.c	/^sixd_to_16bit(int x)$/;"	f	typeref:typename:ushort
size	weechat/.weechat/weechat.conf	/^buddylist.size = 0$/;"	k	section:bar
size	weechat/.weechat/weechat.conf	/^buflist.size = 0$/;"	k	section:bar
size	weechat/.weechat/weechat.conf	/^fset.size = 3$/;"	k	section:bar
size	weechat/.weechat/weechat.conf	/^input.size = 1$/;"	k	section:bar
size	weechat/.weechat/weechat.conf	/^nicklist.size = 0$/;"	k	section:bar
size	weechat/.weechat/weechat.conf	/^status.size = 1$/;"	k	section:bar
size	weechat/.weechat/weechat.conf	/^title.size = 1$/;"	k	section:bar
size_max	weechat/.weechat/weechat.conf	/^buddylist.size_max = 0$/;"	k	section:bar
size_max	weechat/.weechat/weechat.conf	/^buflist.size_max = 0$/;"	k	section:bar
size_max	weechat/.weechat/weechat.conf	/^fset.size_max = 3$/;"	k	section:bar
size_max	weechat/.weechat/weechat.conf	/^input.size_max = 0$/;"	k	section:bar
size_max	weechat/.weechat/weechat.conf	/^nicklist.size_max = 0$/;"	k	section:bar
size_max	weechat/.weechat/weechat.conf	/^status.size_max = 0$/;"	k	section:bar
size_max	weechat/.weechat/weechat.conf	/^title.size_max = 0$/;"	k	section:bar
smart_filter	weechat/.weechat/irc.conf	/^smart_filter = on$/;"	k	section:look
smart_filter_chghost	weechat/.weechat/irc.conf	/^smart_filter_chghost = on$/;"	k	section:look
smart_filter_delay	weechat/.weechat/irc.conf	/^smart_filter_delay = 5$/;"	k	section:look
smart_filter_join	weechat/.weechat/irc.conf	/^smart_filter_join = on$/;"	k	section:look
smart_filter_join_unmask	weechat/.weechat/irc.conf	/^smart_filter_join_unmask = 30$/;"	k	section:look
smart_filter_mode	weechat/.weechat/irc.conf	/^smart_filter_mode = "+"$/;"	k	section:look
smart_filter_nick	weechat/.weechat/irc.conf	/^smart_filter_nick = on$/;"	k	section:look
smart_filter_quit	weechat/.weechat/irc.conf	/^smart_filter_quit = on$/;"	k	section:look
snap	suckless/.suckless/dwm/config.def.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snap	suckless/.suckless/dwm/config.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snap	suckless/.suckless/st/st.c	/^	int snap;$/;"	m	struct:__anon140a12590208	typeref:typename:int	file:
snext	suckless/.suckless/dwm/dwm.c	/^	Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
sort	weechat/.weechat/buflist.conf	/^sort = "number,-active"$/;"	k	section:look
sort	weechat/.weechat/fset.conf	/^sort = "~name"$/;"	k	section:look
sort	weechat/.weechat/plugins.conf	/^perl.buddylist.sort = "default"$/;"	k	section:var
sort	weechat/.weechat/plugins.conf	/^perl.buddylist.sort = "sort method for buddylist (default = buddylist will be sort by nickname, /;"	k	section:desc
sort	weechat/.weechat/script.conf	/^sort = "i,p,n"$/;"	k	section:look
spawn	suckless/.suckless/dwm/dwm.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
spawn	suckless/.suckless/surf/surf.c	/^spawn(Client *c, const Arg *a)$/;"	f	typeref:typename:void
spawn	suckless/.suckless/tabbed/tabbed.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
specbuf	suckless/.suckless/st/x.c	/^	GlyphFontSpec *specbuf; \/* font spec buffer used for rendering *\/$/;"	m	struct:__anon6574b7aa0508	typeref:typename:GlyphFontSpec *	file:
speed_limit_recv	weechat/.weechat/xfer.conf	/^speed_limit_recv = 0$/;"	k	section:network
speed_limit_send	weechat/.weechat/xfer.conf	/^speed_limit_send = 0$/;"	k	section:network
spiral	suckless/.suckless/dwm/fibonacci.c	/^spiral(Monitor *mon) {$/;"	f	typeref:typename:void
split_msg_max_length	weechat/.weechat/irc.conf	/^split_msg_max_length = 512$/;"	k	section:server_default
ssl	weechat/.weechat/irc.conf	/^BNC.ssl = on$/;"	k	section:server
ssl	weechat/.weechat/irc.conf	/^OFTC.ssl = on$/;"	k	section:server
ssl	weechat/.weechat/irc.conf	/^ssl = off$/;"	k	section:server_default
ssl_cert	weechat/.weechat/irc.conf	/^ssl_cert = ""$/;"	k	section:server_default
ssl_cert_key	weechat/.weechat/relay.conf	/^ssl_cert_key = "%h\/ssl\/relay.pem"$/;"	k	section:network
ssl_dhkey_size	weechat/.weechat/irc.conf	/^ssl_dhkey_size = 2048$/;"	k	section:server_default
ssl_fingerprint	weechat/.weechat/irc.conf	/^BNC.ssl_fingerprint = "b9fcbcd01c822b115b4459f9c848a86a861f903bc157bfb4bc549016f5692d3749b6a0edc/;"	k	section:server
ssl_fingerprint	weechat/.weechat/irc.conf	/^OFTC.ssl_fingerprint = "b9fcbcd01c822b115b4459f9c848a86a861f903bc157bfb4bc549016f5692d3749b6a0ed/;"	k	section:server
ssl_fingerprint	weechat/.weechat/irc.conf	/^ssl_fingerprint = ""$/;"	k	section:server_default
ssl_priorities	weechat/.weechat/irc.conf	/^ssl_priorities = "NORMAL:-VERS-SSL3.0"$/;"	k	section:server_default
ssl_priorities	weechat/.weechat/relay.conf	/^ssl_priorities = "NORMAL:-VERS-SSL3.0"$/;"	k	section:network
ssl_verify	weechat/.weechat/irc.conf	/^ssl_verify = on$/;"	k	section:server_default
st	suckless/.suckless/st/Makefile	/^st: $(OBJ)$/;"	t
st.o	suckless/.suckless/st/Makefile	/^st.o: config.h st.h win.h$/;"	t
stack	suckless/.suckless/dwm/dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
startup	weechat/.weechat/weechat.conf	/^[startup]$/;"	s
state	suckless/.suckless/st/st.c	/^	char state;$/;"	m	struct:__anon140a12590108	typeref:typename:char	file:
status_aborted	weechat/.weechat/xfer.conf	/^status_aborted = lightred$/;"	k	section:color
status_active	weechat/.weechat/relay.conf	/^status_active = lightblue$/;"	k	section:color
status_active	weechat/.weechat/xfer.conf	/^status_active = lightblue$/;"	k	section:color
status_auth_failed	weechat/.weechat/relay.conf	/^status_auth_failed = lightred$/;"	k	section:color
status_autoloaded	weechat/.weechat/script.conf	/^status_autoloaded = cyan$/;"	k	section:color
status_connecting	weechat/.weechat/relay.conf	/^status_connecting = yellow$/;"	k	section:color
status_connecting	weechat/.weechat/xfer.conf	/^status_connecting = yellow$/;"	k	section:color
status_count_highlight	weechat/.weechat/weechat.conf	/^status_count_highlight = magenta$/;"	k	section:color
status_count_msg	weechat/.weechat/weechat.conf	/^status_count_msg = brown$/;"	k	section:color
status_count_other	weechat/.weechat/weechat.conf	/^status_count_other = default$/;"	k	section:color
status_count_private	weechat/.weechat/weechat.conf	/^status_count_private = green$/;"	k	section:color
status_data_highlight	weechat/.weechat/weechat.conf	/^status_data_highlight = lightmagenta$/;"	k	section:color
status_data_msg	weechat/.weechat/weechat.conf	/^status_data_msg = yellow$/;"	k	section:color
status_data_other	weechat/.weechat/weechat.conf	/^status_data_other = default$/;"	k	section:color
status_data_private	weechat/.weechat/weechat.conf	/^status_data_private = lightgreen$/;"	k	section:color
status_disconnected	weechat/.weechat/relay.conf	/^status_disconnected = lightred$/;"	k	section:color
status_done	weechat/.weechat/xfer.conf	/^status_done = lightgreen$/;"	k	section:color
status_failed	weechat/.weechat/xfer.conf	/^status_failed = lightred$/;"	k	section:color
status_filter	weechat/.weechat/weechat.conf	/^status_filter = green$/;"	k	section:color
status_held	weechat/.weechat/script.conf	/^status_held = white$/;"	k	section:color
status_installed	weechat/.weechat/script.conf	/^status_installed = lightcyan$/;"	k	section:color
status_more	weechat/.weechat/weechat.conf	/^status_more = yellow$/;"	k	section:color
status_mouse	weechat/.weechat/weechat.conf	/^status_mouse = green$/;"	k	section:color
status_name	weechat/.weechat/weechat.conf	/^status_name = white$/;"	k	section:color
status_name_ssl	weechat/.weechat/weechat.conf	/^status_name_ssl = lightgreen$/;"	k	section:color
status_nicklist_count	weechat/.weechat/weechat.conf	/^status_nicklist_count = default$/;"	k	section:color
status_number	weechat/.weechat/weechat.conf	/^status_number = yellow$/;"	k	section:color
status_obsolete	weechat/.weechat/script.conf	/^status_obsolete = lightmagenta$/;"	k	section:color
status_popular	weechat/.weechat/script.conf	/^status_popular = yellow$/;"	k	section:color
status_running	weechat/.weechat/script.conf	/^status_running = lightgreen$/;"	k	section:color
status_time	weechat/.weechat/weechat.conf	/^status_time = default$/;"	k	section:color
status_unknown	weechat/.weechat/script.conf	/^status_unknown = lightred$/;"	k	section:color
status_waiting	weechat/.weechat/xfer.conf	/^status_waiting = lightcyan$/;"	k	section:color
status_waiting_auth	weechat/.weechat/relay.conf	/^status_waiting_auth = brown$/;"	k	section:color
stdin_to_editor	bin/.bin/open	/^sub stdin_to_editor$/;"	s
stest	suckless/.suckless/dmenu/Makefile	/^stest: stest.o$/;"	t
stext	suckless/.suckless/dwm/dwm.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
stop	suckless/.suckless/surf/surf.c	/^stop(Client *c, const Arg *a)$/;"	f	typeref:typename:void
stopevent	suckless/.suckless/surf/surf.c	/^	unsigned int stopevent;$/;"	m	struct:__anonb95973ab0708	typeref:typename:unsigned int	file:
stowsh_help	bin/.bin/stowsh	/^stowsh_help() {$/;"	f
stowsh_install	bin/.bin/stowsh	/^stowsh_install() {$/;"	f
stowsh_setpaths	bin/.bin/stowsh	/^stowsh_setpaths() {$/;"	f
stowsh_uninstall	bin/.bin/stowsh	/^stowsh_uninstall() {$/;"	f
strdump	suckless/.suckless/st/st.c	/^strdump(void)$/;"	f	typeref:typename:void
strescseq	suckless/.suckless/st/st.c	/^static STREscape strescseq;$/;"	v	typeref:typename:STREscape	file:
strhandle	suckless/.suckless/st/st.c	/^strhandle(void)$/;"	f	typeref:typename:void
string_values	weechat/.weechat/fset.conf	/^string_values = default$/;"	k	section:color
string_values_selected	weechat/.weechat/fset.conf	/^string_values_selected = white$/;"	k	section:color
strparse	suckless/.suckless/st/st.c	/^strparse(void)$/;"	f	typeref:typename:void
strreset	suckless/.suckless/st/st.c	/^strreset(void)$/;"	f	typeref:typename:void
stty	suckless/.suckless/st/st.c	/^stty(char **args)$/;"	f	typeref:typename:void
stty_args	suckless/.suckless/st/config.def.h	/^char *stty_args = "stty raw pass8 nl -echo -iexten -cstopb 38400";$/;"	v	typeref:typename:char *
stty_args	suckless/.suckless/st/config.h	/^char *stty_args = "stty raw pass8 nl -echo -iexten -cstopb 38400";$/;"	v	typeref:typename:char *
styledir	suckless/.suckless/surf/config.def.h	/^static char *styledir       = "~\/.surf\/styles\/";$/;"	v	typeref:typename:char *
styledir	suckless/.suckless/surf/config.h	/^static char *styledir       = "~\/.surf\/styles\/";$/;"	v	typeref:typename:char *
stylefile	suckless/.suckless/surf/surf.c	/^static char *stylefile;$/;"	v	typeref:typename:char *	file:
styles	suckless/.suckless/surf/config.def.h	/^static SiteSpecific styles[] = {$/;"	v	typeref:typename:SiteSpecific[]
styles	suckless/.suckless/surf/config.h	/^static SiteSpecific styles[] = {$/;"	v	typeref:typename:SiteSpecific[]
suggestion	weechat/.weechat/aspell.conf	/^suggestion = default$/;"	k	section:color
suggestion_delimiter_dict	weechat/.weechat/aspell.conf	/^suggestion_delimiter_dict = " \/ "$/;"	k	section:look
suggestion_delimiter_dict	weechat/.weechat/aspell.conf	/^suggestion_delimiter_dict = cyan$/;"	k	section:color
suggestion_delimiter_word	weechat/.weechat/aspell.conf	/^suggestion_delimiter_word = ","$/;"	k	section:look
suggestion_delimiter_word	weechat/.weechat/aspell.conf	/^suggestion_delimiter_word = cyan$/;"	k	section:color
suggestions	weechat/.weechat/aspell.conf	/^suggestions = -1$/;"	k	section:check
surf	suckless/.suckless/surf/Makefile	/^surf: $(OBJ) $(COBJ)$/;"	t
surfuseragent	suckless/.suckless/surf/config.def.h	/^static int surfuseragent    = 1;  \/* Append Surf version to default WebKit user agent *\/$/;"	v	typeref:typename:int
surfuseragent	suckless/.suckless/surf/config.h	/^static int surfuseragent    = 1;  \/* Append Surf version to default WebKit user agent *\/$/;"	v	typeref:typename:int
sw	suckless/.suckless/dwm/dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
symbol	suckless/.suckless/dwm/dwm.c	/^	const char *symbol;$/;"	m	struct:__anon3555889b0908	typeref:typename:const char *	file:
sys_rlimit	weechat/.weechat/weechat.conf	/^sys_rlimit = ""$/;"	k	section:startup
t	suckless/.suckless/st/x.c	/^	int l, t; \/* left and top offset *\/$/;"	m	struct:__anon6574b7aa0508	typeref:typename:int	file:
tab_width	weechat/.weechat/weechat.conf	/^tab_width = 1$/;"	k	section:look
tabs	suckless/.suckless/st/st.c	/^	int *tabs;$/;"	m	struct:__anon140a12590408	typeref:typename:int *	file:
tabspaces	suckless/.suckless/st/config.def.h	/^unsigned int tabspaces = 8;$/;"	v	typeref:typename:unsigned int
tabspaces	suckless/.suckless/st/config.h	/^unsigned int tabspaces = 8;$/;"	v	typeref:typename:unsigned int
tabwidth	suckless/.suckless/tabbed/config.def.h	/^static const int  tabwidth      = 200;$/;"	v	typeref:typename:const int
tabwidth	suckless/.suckless/tabbed/config.h	/^static const int  tabwidth      = 200;$/;"	v	typeref:typename:const int
tabx	suckless/.suckless/tabbed/tabbed.c	/^	int tabx;$/;"	m	struct:__anon0f72b96f0708	typeref:typename:int	file:
tag	suckless/.suckless/dwm/dwm.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	suckless/.suckless/dwm/dwm.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tags	suckless/.suckless/dwm/config.def.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	suckless/.suckless/dwm/config.h	/^static const char *tags[] = { "WEB", "TERM", "DEV", "CHAT" ,"MEDIA", "RAND" };$/;"	v	typeref:typename:const char * []
tags	suckless/.suckless/dwm/dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	suckless/.suckless/dwm/dwm.c	/^	unsigned int tags;$/;"	m	struct:__anon3555889b0a08	typeref:typename:unsigned int	file:
tagset	suckless/.suckless/dwm/dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
target	suckless/.suckless/surf/surf.c	/^	unsigned int target;$/;"	m	struct:__anonb95973ab0708	typeref:typename:unsigned int	file:
targeturi	suckless/.suckless/surf/surf.c	/^	const char *title, *overtitle, *targeturi;$/;"	m	struct:Client	typeref:typename:const char ***	file:
tattrset	suckless/.suckless/st/st.c	/^tattrset(int attr)$/;"	f	typeref:typename:int
tclearregion	suckless/.suckless/st/st.c	/^tclearregion(int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
tclick1	suckless/.suckless/st/x.c	/^	struct timespec tclick1;$/;"	m	struct:__anon6574b7aa0608	typeref:struct:timespec	file:
tclick2	suckless/.suckless/st/x.c	/^	struct timespec tclick2;$/;"	m	struct:__anon6574b7aa0608	typeref:struct:timespec	file:
tcontrolcode	suckless/.suckless/st/st.c	/^tcontrolcode(uchar ascii)$/;"	f	typeref:typename:void
tcursor	suckless/.suckless/st/st.c	/^tcursor(int mode)$/;"	f	typeref:typename:void
tdectest	suckless/.suckless/st/st.c	/^tdectest(char c)$/;"	f	typeref:typename:void
tdefcolor	suckless/.suckless/st/st.c	/^tdefcolor(int *attr, int *npar, int l)$/;"	f	typeref:typename:int32_t
tdeftran	suckless/.suckless/st/st.c	/^tdeftran(char ascii)$/;"	f	typeref:typename:void
tdefutf8	suckless/.suckless/st/st.c	/^tdefutf8(char ascii)$/;"	f	typeref:typename:void
tdeletechar	suckless/.suckless/st/st.c	/^tdeletechar(int n)$/;"	f	typeref:typename:void
tdeleteline	suckless/.suckless/st/st.c	/^tdeleteline(int n)$/;"	f	typeref:typename:void
tdump	suckless/.suckless/st/st.c	/^tdump(void)$/;"	f	typeref:typename:void
tdumpline	suckless/.suckless/st/st.c	/^tdumpline(int n)$/;"	f	typeref:typename:void
tdumpsel	suckless/.suckless/st/st.c	/^tdumpsel(void)$/;"	f	typeref:typename:void
temporary_servers	weechat/.weechat/irc.conf	/^temporary_servers = off$/;"	k	section:look
term	suckless/.suckless/st/st.c	/^static Term term;$/;"	v	typeref:typename:Term	file:
term_mode	suckless/.suckless/st/st.c	/^enum term_mode {$/;"	g	file:
termcmd	suckless/.suckless/dwm/config.def.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
termname	suckless/.suckless/st/config.def.h	/^char *termname = "st-256color";$/;"	v	typeref:typename:char *
termname	suckless/.suckless/st/config.h	/^char *termname = "st-256color";$/;"	v	typeref:typename:char *
test	suckless/.suckless/dmenu/stest.c	/^test(const char *path, const char *name)$/;"	f	typeref:typename:void	file:
text	suckless/.suckless/dmenu/dmenu.c	/^	char *text;$/;"	m	struct:item	typeref:typename:char *	file:
text	suckless/.suckless/dmenu/dmenu.c	/^static char text[BUFSIZ] = "";$/;"	v	typeref:typename:char[]	file:
text	weechat/.weechat/relay.conf	/^text = default$/;"	k	section:color
text	weechat/.weechat/script.conf	/^text = default$/;"	k	section:color
text	weechat/.weechat/xfer.conf	/^text = default$/;"	k	section:color
text_bg	weechat/.weechat/relay.conf	/^text_bg = default$/;"	k	section:color
text_bg	weechat/.weechat/script.conf	/^text_bg = default$/;"	k	section:color
text_bg	weechat/.weechat/xfer.conf	/^text_bg = default$/;"	k	section:color
text_bg_selected	weechat/.weechat/script.conf	/^text_bg_selected = red$/;"	k	section:color
text_date	weechat/.weechat/script.conf	/^text_date = default$/;"	k	section:color
text_date_selected	weechat/.weechat/script.conf	/^text_date_selected = white$/;"	k	section:color
text_delimiters	weechat/.weechat/script.conf	/^text_delimiters = default$/;"	k	section:color
text_description	weechat/.weechat/script.conf	/^text_description = default$/;"	k	section:color
text_description_selected	weechat/.weechat/script.conf	/^text_description_selected = white$/;"	k	section:color
text_extension	weechat/.weechat/script.conf	/^text_extension = default$/;"	k	section:color
text_extension_selected	weechat/.weechat/script.conf	/^text_extension_selected = white$/;"	k	section:color
text_name	weechat/.weechat/script.conf	/^text_name = cyan$/;"	k	section:color
text_name_selected	weechat/.weechat/script.conf	/^text_name_selected = lightcyan$/;"	k	section:color
text_selected	weechat/.weechat/relay.conf	/^text_selected = white$/;"	k	section:color
text_selected	weechat/.weechat/script.conf	/^text_selected = white$/;"	k	section:color
text_selected	weechat/.weechat/xfer.conf	/^text_selected = white$/;"	k	section:color
text_tags	weechat/.weechat/script.conf	/^text_tags = brown$/;"	k	section:color
text_tags_selected	weechat/.weechat/script.conf	/^text_tags_selected = yellow$/;"	k	section:color
text_version	weechat/.weechat/script.conf	/^text_version = magenta$/;"	k	section:color
text_version_loaded	weechat/.weechat/script.conf	/^text_version_loaded = default$/;"	k	section:color
text_version_loaded_selected	weechat/.weechat/script.conf	/^text_version_loaded_selected = white$/;"	k	section:color
text_version_selected	weechat/.weechat/script.conf	/^text_version_selected = lightmagenta$/;"	k	section:color
textnw	suckless/.suckless/tabbed/tabbed.c	/^textnw(const char *text, unsigned int len)$/;"	f	typeref:typename:int
tfulldirt	suckless/.suckless/st/st.c	/^tfulldirt(void)$/;"	f	typeref:typename:void
th	suckless/.suckless/st/x.c	/^	int tw, th; \/* tty width and height *\/$/;"	m	struct:__anon6574b7aa0408	typeref:typename:int	file:
tile	suckless/.suckless/dwm/dwm.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void
time_format	weechat/.weechat/logger.conf	/^time_format = "%Y-%m-%d %H:%M:%S"$/;"	k	section:file
time_format	weechat/.weechat/weechat.conf	/^time_format = "%a, %d %b %Y %T"$/;"	k	section:look
timeout	weechat/.weechat/plugins.conf	/^perl.buddylist.callback.timeout = "60"$/;"	k	section:var
timeout	weechat/.weechat/plugins.conf	/^perl.buddylist.callback.timeout = "time in seconds to wait for answer from server. (default: 60)/;"	k	section:desc
timeout	weechat/.weechat/xfer.conf	/^timeout = 300$/;"	k	section:network
tinsertblank	suckless/.suckless/st/st.c	/^tinsertblank(int n)$/;"	f	typeref:typename:void
tinsertblankline	suckless/.suckless/st/st.c	/^tinsertblankline(int n)$/;"	f	typeref:typename:void
tisaltscr	suckless/.suckless/st/st.c	/^int tisaltscr(void)$/;"	f	typeref:typename:int
title	suckless/.suckless/dwm/dwm.c	/^	const char *title;$/;"	m	struct:__anon3555889b0a08	typeref:typename:const char *	file:
title	suckless/.suckless/surf/surf.c	/^	const char *title, *overtitle, *targeturi;$/;"	m	struct:Client	typeref:typename:const char *	file:
title_count_options	weechat/.weechat/fset.conf	/^title_count_options = cyan$/;"	k	section:color
title_current_option	weechat/.weechat/fset.conf	/^title_current_option = lightcyan$/;"	k	section:color
title_filter	weechat/.weechat/fset.conf	/^title_filter = yellow$/;"	k	section:color
title_marked_options	weechat/.weechat/fset.conf	/^title_marked_options = lightgreen$/;"	k	section:color
title_sort	weechat/.weechat/fset.conf	/^title_sort = white$/;"	k	section:color
titlechanged	suckless/.suckless/surf/surf.c	/^titlechanged(WebKitWebView *view, GParamSpec *ps, Client *c)$/;"	f	typeref:typename:void
titletrim	suckless/.suckless/tabbed/config.def.h	/^static const char titletrim[]   = "...";$/;"	v	typeref:typename:const char[]
titletrim	suckless/.suckless/tabbed/config.h	/^static const char titletrim[]   = "...";$/;"	v	typeref:typename:const char[]
tlinelen	suckless/.suckless/st/st.c	/^tlinelen(int y)$/;"	f	typeref:typename:int
tlserr	suckless/.suckless/surf/surf.c	/^	GTlsCertificateFlags tlserr;$/;"	m	struct:Client	typeref:typename:GTlsCertificateFlags	file:
tmoveato	suckless/.suckless/st/st.c	/^tmoveato(int x, int y)$/;"	f	typeref:typename:void
tmoveto	suckless/.suckless/st/st.c	/^tmoveto(int x, int y)$/;"	f	typeref:typename:void
tnew	suckless/.suckless/st/st.c	/^tnew(int col, int row)$/;"	f	typeref:typename:void
tnewline	suckless/.suckless/st/st.c	/^tnewline(int first_col)$/;"	f	typeref:typename:void
toggle	bin/.bin/spotify-controller	/^toggle(){$/;"	f
toggle	suckless/.suckless/surf/surf.c	/^toggle(Client *c, const Arg *a)$/;"	f	typeref:typename:void
toggle	suckless/.suckless/tabbed/tabbed.c	/^toggle(const Arg *arg)$/;"	f	typeref:typename:void
toggleFakeFullscreen	suckless/.suckless/dwm/dwm.c	/^toggleFakeFullscreen(void){$/;"	f	typeref:typename:void
togglebar	suckless/.suckless/dwm/dwm.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglecookiepolicy	suckless/.suckless/surf/surf.c	/^togglecookiepolicy(Client *c, const Arg *a)$/;"	f	typeref:typename:void
togglefloating	suckless/.suckless/dwm/dwm.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscreen	suckless/.suckless/surf/surf.c	/^togglefullscreen(Client *c, const Arg *a)$/;"	f	typeref:typename:void
toggleinspector	suckless/.suckless/surf/surf.c	/^toggleinspector(Client *c, const Arg *a)$/;"	f	typeref:typename:void
toggleprinter	suckless/.suckless/st/st.c	/^toggleprinter(const Arg *arg)$/;"	f	typeref:typename:void
togglescratch	suckless/.suckless/dwm/dwm.c	/^togglescratch(const Arg *arg)$/;"	f	typeref:typename:void
togglestats	suckless/.suckless/surf/surf.c	/^static char togglestats[12];$/;"	v	typeref:typename:char[12]	file:
toggletag	suckless/.suckless/dwm/dwm.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	suckless/.suckless/dwm/dwm.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
token	suckless/.suckless/surf/surf.c	/^	char *token;$/;"	m	struct:__anonb95973ab0808	typeref:typename:char *	file:
top	suckless/.suckless/st/st.c	/^	int top;      \/* top    scroll limit *\/$/;"	m	struct:__anon140a12590408	typeref:typename:int	file:
topbar	suckless/.suckless/dmenu/config.def.h	/^static int topbar = 1;                      \/* -b  option; if 0, dmenu appears at bottom     *\/$/;"	v	typeref:typename:int
topbar	suckless/.suckless/dmenu/config.h	/^static int topbar = 1;                      \/* -b  option; if 0, dmenu appears at bottom     *\/$/;"	v	typeref:typename:int
topbar	suckless/.suckless/dwm/config.def.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	suckless/.suckless/dwm/config.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	suckless/.suckless/dwm/dwm.c	/^	int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
topic_current	weechat/.weechat/irc.conf	/^topic_current = default$/;"	k	section:color
topic_new	weechat/.weechat/irc.conf	/^topic_new = white$/;"	k	section:color
topic_old	weechat/.weechat/irc.conf	/^topic_old = default$/;"	k	section:color
topic_strip_colors	weechat/.weechat/irc.conf	/^topic_strip_colors = off$/;"	k	section:look
totp_secret	weechat/.weechat/relay.conf	/^totp_secret = ""$/;"	k	section:network
totp_window	weechat/.weechat/relay.conf	/^totp_window = 0$/;"	k	section:network
tprinter	suckless/.suckless/st/st.c	/^tprinter(char *s, size_t len)$/;"	f	typeref:typename:void
tputc	suckless/.suckless/st/st.c	/^tputc(Rune u)$/;"	f	typeref:typename:void
tputtab	suckless/.suckless/st/st.c	/^tputtab(int n)$/;"	f	typeref:typename:void
translate_description	weechat/.weechat/script.conf	/^translate_description = on$/;"	k	section:look
trantbl	suckless/.suckless/st/st.c	/^	char trantbl[4]; \/* charset table translation *\/$/;"	m	struct:__anon140a12590408	typeref:typename:char[4]	file:
treset	suckless/.suckless/st/st.c	/^treset(void)$/;"	f	typeref:typename:void
tresize	suckless/.suckless/st/st.c	/^tresize(int col, int row)$/;"	f	typeref:typename:void
trigger	weechat/.weechat/trigger.conf	/^[trigger]$/;"	s
trigger	weechat/.weechat/trigger.conf	/^trigger = green$/;"	k	section:color
trigger_disabled	weechat/.weechat/trigger.conf	/^trigger_disabled = red$/;"	k	section:color
tripleclicktimeout	suckless/.suckless/st/config.def.h	/^static unsigned int tripleclicktimeout = 600;$/;"	v	typeref:typename:unsigned int
tripleclicktimeout	suckless/.suckless/st/config.h	/^static unsigned int tripleclicktimeout = 600;$/;"	v	typeref:typename:unsigned int
tscrolldown	suckless/.suckless/st/st.c	/^tscrolldown(int orig, int n, int copyhist)$/;"	f	typeref:typename:void
tscrollup	suckless/.suckless/st/st.c	/^tscrollup(int orig, int n, int copyhist)$/;"	f	typeref:typename:void
tsetattr	suckless/.suckless/st/st.c	/^tsetattr(int *attr, int l)$/;"	f	typeref:typename:void
tsetchar	suckless/.suckless/st/st.c	/^tsetchar(Rune u, Glyph *attr, int x, int y)$/;"	f	typeref:typename:void
tsetdirt	suckless/.suckless/st/st.c	/^tsetdirt(int top, int bot)$/;"	f	typeref:typename:void
tsetdirtattr	suckless/.suckless/st/st.c	/^tsetdirtattr(int attr)$/;"	f	typeref:typename:void
tsetmode	suckless/.suckless/st/st.c	/^tsetmode(int priv, int set, int *args, int narg)$/;"	f	typeref:typename:void
tsetscroll	suckless/.suckless/st/st.c	/^tsetscroll(int t, int b)$/;"	f	typeref:typename:void
tstrsequence	suckless/.suckless/st/st.c	/^tstrsequence(uchar c)$/;"	f	typeref:typename:void
tswapscreen	suckless/.suckless/st/st.c	/^tswapscreen(void)$/;"	f	typeref:typename:void
ttyhangup	suckless/.suckless/st/st.c	/^ttyhangup()$/;"	f	typeref:typename:void
ttynew	suckless/.suckless/st/st.c	/^ttynew(char *line, char *cmd, char *out, char **args)$/;"	f	typeref:typename:int
ttyread	suckless/.suckless/st/st.c	/^ttyread(void)$/;"	f	typeref:typename:size_t
ttyresize	suckless/.suckless/st/st.c	/^ttyresize(int tw, int th)$/;"	f	typeref:typename:void
ttywrite	suckless/.suckless/st/st.c	/^ttywrite(const char *s, size_t n, int may_echo)$/;"	f	typeref:typename:void
ttywriteraw	suckless/.suckless/st/st.c	/^ttywriteraw(const char *s, size_t n)$/;"	f	typeref:typename:void
tw	suckless/.suckless/st/x.c	/^	int tw, th; \/* tty width and height *\/$/;"	m	struct:__anon6574b7aa0408	typeref:typename:int	file:
twrite	suckless/.suckless/st/st.c	/^twrite(const char *buf, int buflen, int show_ctrl)$/;"	f	typeref:typename:int
type	suckless/.suckless/st/st.c	/^	char type;             \/* ESC type ... *\/$/;"	m	struct:__anon140a12590608	typeref:typename:char	file:
type	suckless/.suckless/st/st.c	/^	int type;$/;"	m	struct:__anon140a12590208	typeref:typename:int	file:
type	weechat/.weechat/fset.conf	/^type = green$/;"	k	section:color
type	weechat/.weechat/weechat.conf	/^buddylist.type = root$/;"	k	section:bar
type	weechat/.weechat/weechat.conf	/^buflist.type = root$/;"	k	section:bar
type	weechat/.weechat/weechat.conf	/^fset.type = window$/;"	k	section:bar
type	weechat/.weechat/weechat.conf	/^input.type = window$/;"	k	section:bar
type	weechat/.weechat/weechat.conf	/^nicklist.type = window$/;"	k	section:bar
type	weechat/.weechat/weechat.conf	/^status.type = window$/;"	k	section:bar
type	weechat/.weechat/weechat.conf	/^title.type = window$/;"	k	section:bar
type_selected	weechat/.weechat/fset.conf	/^type_selected = lightgreen$/;"	k	section:color
u	suckless/.suckless/st/st.h	/^	Rune u;           \/* character code *\/$/;"	m	struct:__anon140a125e0108	typeref:typename:Rune
u	weechat/.weechat/weechat.conf	/^meta-u = "\/window scroll_unread"$/;"	k	section:key
uchar	suckless/.suckless/st/st.h	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char
ui	suckless/.suckless/dwm/dwm.c	/^	unsigned int ui;$/;"	m	union:__anon3555889b060a	typeref:typename:unsigned int	file:
ui	suckless/.suckless/st/st.h	/^	uint ui;$/;"	m	union:__anon140a125e020a	typeref:typename:uint
uint	suckless/.suckless/st/st.h	/^typedef unsigned int uint;$/;"	t	typeref:typename:unsigned int
ulheight	suckless/.suckless/dwm/config.h	/^static const unsigned int ulheight  = 2;        \/* height of tag underline *\/$/;"	v	typeref:typename:const unsigned int
ulong	suckless/.suckless/st/st.h	/^typedef unsigned long ulong;$/;"	t	typeref:typename:unsigned long
unfocus	suckless/.suckless/dwm/dwm.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
unicodep	suckless/.suckless/st/x.c	/^	Rune unicodep;$/;"	m	struct:__anon6574b7aa0a08	typeref:typename:Rune	file:
uninstall	suckless/.suckless/dmenu/Makefile	/^uninstall:$/;"	t
uninstall	suckless/.suckless/dwm/Makefile	/^uninstall:$/;"	t
uninstall	suckless/.suckless/st/Makefile	/^uninstall:$/;"	t
uninstall	suckless/.suckless/surf/Makefile	/^uninstall:$/;"	t
uninstall	suckless/.suckless/tabbed/Makefile	/^uninstall:$/;"	t
unmanage	suckless/.suckless/dwm/dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmanage	suckless/.suckless/tabbed/tabbed.c	/^unmanage(int c)$/;"	f	typeref:typename:void
unmap	suckless/.suckless/st/x.c	/^unmap(XEvent *ev)$/;"	f	typeref:typename:void
unmapnotify	suckless/.suckless/dwm/dwm.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
unmapnotify	suckless/.suckless/tabbed/tabbed.c	/^unmapnotify(const XEvent *e)$/;"	f	typeref:typename:void
unmarked	weechat/.weechat/fset.conf	/^unmarked = default$/;"	k	section:color
unmarked_selected	weechat/.weechat/fset.conf	/^unmarked_selected = white$/;"	k	section:color
unmarked_string	weechat/.weechat/fset.conf	/^unmarked_string = " "$/;"	k	section:look
untildepath	suckless/.suckless/surf/surf.c	/^untildepath(const char *path)$/;"	f	typeref:typename:char *
updatebarpos	suckless/.suckless/dwm/dwm.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebars	suckless/.suckless/dwm/dwm.c	/^updatebars(void)$/;"	f	typeref:typename:void
updateclientlist	suckless/.suckless/dwm/dwm.c	/^updateclientlist()$/;"	f	typeref:typename:void
updategeom	suckless/.suckless/dwm/dwm.c	/^updategeom(void)$/;"	f	typeref:typename:int
updatenumlockmask	suckless/.suckless/dwm/dwm.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatenumlockmask	suckless/.suckless/tabbed/tabbed.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatesizehints	suckless/.suckless/dwm/dwm.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatestatus	suckless/.suckless/dwm/dwm.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatetitle	suckless/.suckless/dwm/dwm.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatetitle	suckless/.suckless/surf/surf.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatetitle	suckless/.suckless/tabbed/tabbed.c	/^updatetitle(int c)$/;"	f	typeref:typename:void
updatewindowtype	suckless/.suckless/dwm/dwm.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewinid	suckless/.suckless/surf/surf.c	/^updatewinid(Client *c)$/;"	f	typeref:typename:void
updatewmhints	suckless/.suckless/dwm/dwm.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
upload_path	weechat/.weechat/xfer.conf	/^upload_path = "~"$/;"	k	section:file
urg	suckless/.suckless/tabbed/tabbed.c	/^	XftColor urg[ColLast];$/;"	m	struct:__anon0f72b96f0508	typeref:typename:XftColor[]	file:
urgbgcolor	suckless/.suckless/tabbed/config.def.h	/^static const char* urgbgcolor   = "#111111";$/;"	v	typeref:typename:const char *
urgbgcolor	suckless/.suckless/tabbed/config.h	/^static const char* urgbgcolor   = "#111111";$/;"	v	typeref:typename:const char *
urgent	suckless/.suckless/tabbed/tabbed.c	/^	Bool urgent;$/;"	m	struct:__anon0f72b96f0708	typeref:typename:Bool	file:
urgentswitch	suckless/.suckless/tabbed/config.def.h	/^static       Bool urgentswitch  = False;$/;"	v	typeref:typename:Bool
urgentswitch	suckless/.suckless/tabbed/config.h	/^static       Bool urgentswitch  = False;$/;"	v	typeref:typename:Bool
urgfgcolor	suckless/.suckless/tabbed/config.def.h	/^static const char* urgfgcolor   = "#cc0000";$/;"	v	typeref:typename:const char *
urgfgcolor	suckless/.suckless/tabbed/config.h	/^static const char* urgfgcolor   = "#cc0000";$/;"	v	typeref:typename:const char *
uri	suckless/.suckless/surf/surf.c	/^	char *uri;$/;"	m	struct:__anonb95973ab0808	typeref:typename:char *	file:
uri	suckless/.suckless/surf/surf.c	/^	const char *uri;$/;"	m	struct:__anonb95973ab0908	typeref:typename:const char *	file:
uriparams	suckless/.suckless/surf/config.def.h	/^static UriParameters uriparams[] = {$/;"	v	typeref:typename:UriParameters[]
uriparams	suckless/.suckless/surf/config.h	/^static UriParameters uriparams[] = {$/;"	v	typeref:typename:UriParameters[]
url	weechat/.weechat/script.conf	/^url = "https:\/\/weechat.org\/files\/plugins.xml.gz"$/;"	k	section:scripts
usage	bin/.bin/open	/^sub usage$/;"	s
usage	bin/.bin/pacontrol.sh	/^usage() {$/;"	f
usage	bin/.bin/set_keyboard	/^function usage() {$/;"	f
usage	suckless/.suckless/dmenu/dmenu.c	/^usage(void)$/;"	f	typeref:typename:void	file:
usage	suckless/.suckless/dmenu/stest.c	/^usage(void)$/;"	f	typeref:typename:void	file:
usage	suckless/.suckless/st/x.c	/^usage(void)$/;"	f	typeref:typename:void
usage	suckless/.suckless/surf/surf.c	/^usage(void)$/;"	f	typeref:typename:void
usage	suckless/.suckless/tabbed/tabbed.c	/^usage(void)$/;"	f	typeref:typename:void
use_color_value	weechat/.weechat/fset.conf	/^use_color_value = off$/;"	k	section:look
use_keys	weechat/.weechat/fset.conf	/^use_keys = on$/;"	k	section:look
use_keys	weechat/.weechat/script.conf	/^use_keys = on$/;"	k	section:look
use_mute	weechat/.weechat/fset.conf	/^use_mute = off$/;"	k	section:look
use_nick_in_filename	weechat/.weechat/xfer.conf	/^use_nick_in_filename = on$/;"	k	section:file
usedfont	suckless/.suckless/st/x.c	/^static char *usedfont = NULL;$/;"	v	typeref:typename:char *	file:
usedfontsize	suckless/.suckless/st/x.c	/^static double usedfontsize = 0;$/;"	v	typeref:typename:double	file:
useragent	suckless/.suckless/surf/surf.c	/^static const char *useragent;$/;"	v	typeref:typename:const char *	file:
usermode	weechat/.weechat/irc.conf	/^usermode = ""$/;"	k	section:server_default
username	weechat/.weechat/irc.conf	/^BNC.username = "DuckyDev\/freenode"$/;"	k	section:server
username	weechat/.weechat/irc.conf	/^OFTC.username = "DuckyDev\/oftc"$/;"	k	section:server
username	weechat/.weechat/irc.conf	/^username = "daniel"$/;"	k	section:server_default
ushort	suckless/.suckless/st/st.h	/^typedef unsigned short ushort;$/;"	t	typeref:typename:unsigned short
utf8	suckless/.suckless/dmenu/dmenu.c	/^static Atom clip, utf8;$/;"	v	typeref:typename:Atom	file:
utf8decode	suckless/.suckless/dmenu/drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:
utf8decode	suckless/.suckless/dwm/drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:
utf8decode	suckless/.suckless/st/st.c	/^utf8decode(const char *c, Rune *u, size_t clen)$/;"	f	typeref:typename:size_t
utf8decodebyte	suckless/.suckless/dmenu/drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:
utf8decodebyte	suckless/.suckless/dwm/drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:
utf8decodebyte	suckless/.suckless/st/st.c	/^utf8decodebyte(char c, size_t *i)$/;"	f	typeref:typename:Rune
utf8encode	suckless/.suckless/st/st.c	/^utf8encode(Rune u, char *c)$/;"	f	typeref:typename:size_t
utf8encodebyte	suckless/.suckless/st/st.c	/^utf8encodebyte(Rune u, size_t i)$/;"	f	typeref:typename:char
utf8validate	suckless/.suckless/dmenu/drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:
utf8validate	suckless/.suckless/dwm/drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:
utf8validate	suckless/.suckless/st/st.c	/^utf8validate(Rune *u, size_t i)$/;"	f	typeref:typename:size_t
utfbyte	suckless/.suckless/dmenu/drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfbyte	suckless/.suckless/dwm/drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfbyte	suckless/.suckless/st/st.c	/^static uchar utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:uchar[]	file:
utfmask	suckless/.suckless/dmenu/drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	suckless/.suckless/dwm/drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	suckless/.suckless/st/st.c	/^static uchar utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:uchar[]	file:
utfmax	suckless/.suckless/dmenu/drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmax	suckless/.suckless/dwm/drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmax	suckless/.suckless/st/st.c	/^static Rune utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:Rune[]	file:
utfmin	suckless/.suckless/dmenu/drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
utfmin	suckless/.suckless/dwm/drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
utfmin	suckless/.suckless/st/st.c	/^static Rune utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:Rune[]	file:
utmp	suckless/.suckless/st/config.def.h	/^char *utmp = NULL;$/;"	v	typeref:typename:char *
utmp	suckless/.suckless/st/config.h	/^char *utmp = NULL;$/;"	v	typeref:typename:char *
v	suckless/.suckless/dwm/dwm.c	/^	const void *v;$/;"	m	union:__anon3555889b060a	typeref:typename:const void *	file:
v	suckless/.suckless/st/st.h	/^	const void *v;$/;"	m	union:__anon140a125e020a	typeref:typename:const void *
v	suckless/.suckless/surf/surf.c	/^	const void *v;$/;"	m	union:__anonb95973ab040a	typeref:typename:const void *	file:
v	suckless/.suckless/tabbed/tabbed.c	/^	const void *v;$/;"	m	union:__anon0f72b96f030a	typeref:typename:const void *	file:
val	suckless/.suckless/surf/surf.c	/^	Arg val;$/;"	m	struct:__anonb95973ab0508	typeref:typename:Arg	file:
value	weechat/.weechat/fset.conf	/^value = cyan$/;"	k	section:color
value_changed	weechat/.weechat/fset.conf	/^value_changed = brown$/;"	k	section:color
value_changed_selected	weechat/.weechat/fset.conf	/^value_changed_selected = yellow$/;"	k	section:color
value_selected	weechat/.weechat/fset.conf	/^value_selected = lightcyan$/;"	k	section:color
value_undef	weechat/.weechat/fset.conf	/^value_undef = magenta$/;"	k	section:color
value_undef_selected	weechat/.weechat/fset.conf	/^value_undef_selected = lightmagenta$/;"	k	section:color
var	weechat/.weechat/plugins.conf	/^[var]$/;"	s
view	suckless/.suckless/dwm/dwm.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
view	suckless/.suckless/surf/surf.c	/^	WebKitWebView *view;$/;"	m	struct:Client	typeref:typename:WebKitWebView *	file:
view_adjacent	suckless/.suckless/dwm/diffs/nextprevtag.c	/^view_adjacent(const Arg *arg)$/;"	f	typeref:typename:void
view_adjacent	suckless/.suckless/dwm/dwm.c	/^view_adjacent(const Arg *arg)$/;"	f	typeref:typename:void
vis	suckless/.suckless/st/x.c	/^	Visual *vis;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Visual *	file:
visibility	suckless/.suckless/st/x.c	/^visibility(XEvent *ev)$/;"	f	typeref:typename:void
vtiden	suckless/.suckless/st/config.def.h	/^char *vtiden = "\\033[?6c";$/;"	v	typeref:typename:char *
vtiden	suckless/.suckless/st/config.h	/^char *vtiden = "\\033[?6c";$/;"	v	typeref:typename:char *
w	suckless/.suckless/dmenu/drw.h	/^	unsigned int w, h;$/;"	m	struct:__anonacedaf960308	typeref:typename:unsigned int
w	suckless/.suckless/dwm/drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon3552f5450308	typeref:typename:unsigned int
w	suckless/.suckless/dwm/dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
w	suckless/.suckless/st/x.c	/^	int w, h; \/* window width and height *\/$/;"	m	struct:__anon6574b7aa0408	typeref:typename:int	file:
w	suckless/.suckless/tabbed/tabbed.c	/^	int x, y, w, h;$/;"	m	struct:__anon0f72b96f0508	typeref:typename:int	file:
w!!	config/.config/nvim/init.vim	/^cmap w!! call SudoWrite()$/;"	m
wait_or_not	bin/.bin/open	/^sub wait_or_not$/;"	s
webkit_web_extension_initialize_with_user_data	suckless/.suckless/surf/libsurf-webext.c	/^webkit_web_extension_initialize_with_user_data(WebKitWebExtension *e, GVariant *gv)$/;"	f	typeref:typename:G_MODULE_EXPORT void
webpage	suckless/.suckless/surf/libsurf-webext.c	/^	WebKitWebPage *webpage;$/;"	m	struct:Page	typeref:typename:WebKitWebPage *	file:
webpagecreated	suckless/.suckless/surf/libsurf-webext.c	/^webpagecreated(WebKitWebExtension *e, WebKitWebPage *wp, gpointer unused)$/;"	f	typeref:typename:void	file:
webprocessterminated	suckless/.suckless/surf/surf.c	/^webprocessterminated(WebKitWebView *v, WebKitWebProcessTerminationReason r,$/;"	f	typeref:typename:void
websocket_allowed_origins	weechat/.weechat/relay.conf	/^websocket_allowed_origins = ""$/;"	k	section:network
weechat	weechat/.weechat/relay.conf	/^[weechat]$/;"	s
wh	suckless/.suckless/dwm/dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wh	suckless/.suckless/tabbed/tabbed.c	/^static int bh, wx, wy, ww, wh;$/;"	v	typeref:typename:int	file:
whois_double_nick	weechat/.weechat/irc.conf	/^whois_double_nick = off$/;"	k	section:network
width	suckless/.suckless/st/x.c	/^	int width;$/;"	m	struct:__anon6574b7aa0708	typeref:typename:int	file:
win	suckless/.suckless/dmenu/dmenu.c	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window	file:
win	suckless/.suckless/dwm/dwm.c	/^	Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
win	suckless/.suckless/st/x.c	/^	Window win;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Window	file:
win	suckless/.suckless/st/x.c	/^static TermWindow win;$/;"	v	typeref:typename:TermWindow	file:
win	suckless/.suckless/surf/surf.c	/^	GtkWidget *win;$/;"	m	struct:Client	typeref:typename:GtkWidget *	file:
win	suckless/.suckless/tabbed/tabbed.c	/^	Window win;$/;"	m	struct:__anon0f72b96f0708	typeref:typename:Window	file:
win	suckless/.suckless/tabbed/tabbed.c	/^static Window root, win;$/;"	v	typeref:typename:Window	file:
win_mode	suckless/.suckless/st/win.h	/^enum win_mode {$/;"	g
window_auto_zoom	weechat/.weechat/weechat.conf	/^window_auto_zoom = off$/;"	k	section:look
window_separator_horizontal	weechat/.weechat/weechat.conf	/^window_separator_horizontal = on$/;"	k	section:look
window_separator_vertical	weechat/.weechat/weechat.conf	/^window_separator_vertical = on$/;"	k	section:look
window_title	weechat/.weechat/weechat.conf	/^window_title = ""$/;"	k	section:look
winevent	suckless/.suckless/surf/surf.c	/^winevent(GtkWidget *w, GdkEvent *e, Client *c)$/;"	f	typeref:typename:gboolean
winid	suckless/.suckless/surf/surf.c	/^static char winid[64];$/;"	v	typeref:typename:char[64]	file:
winid	suckless/.suckless/tabbed/tabbed.c	/^static char winid[64];$/;"	v	typeref:typename:char[64]	file:
winsize	suckless/.suckless/surf/config.def.h	/^static int winsize[] = { 800, 600 };$/;"	v	typeref:typename:int[]
winsize	suckless/.suckless/surf/config.h	/^static int winsize[] = { 1800, 1600 };$/;"	v	typeref:typename:int[]
wintoclient	suckless/.suckless/dwm/dwm.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintomon	suckless/.suckless/dwm/dwm.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wmatom	suckless/.suckless/dwm/dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmatom	suckless/.suckless/tabbed/tabbed.c	/^static Atom wmatom[WMLast];$/;"	v	typeref:typename:Atom[]	file:
wmcheckwin	suckless/.suckless/dwm/dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
wmdeletewin	suckless/.suckless/st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmpid;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Atom	file:
wmname	suckless/.suckless/tabbed/tabbed.c	/^static char *wmname = "tabbed";$/;"	v	typeref:typename:char *	file:
word_chars_highlight	weechat/.weechat/weechat.conf	/^word_chars_highlight = "!\\u00A0,-,_,|,alnum"$/;"	k	section:look
word_chars_input	weechat/.weechat/weechat.conf	/^word_chars_input = "!\\u00A0,-,_,|,alnum"$/;"	k	section:look
word_min_length	weechat/.weechat/aspell.conf	/^word_min_length = 2$/;"	k	section:check
worddelimiters	suckless/.suckless/dmenu/config.def.h	/^static const char worddelimiters[] = " ";$/;"	v	typeref:typename:const char[]
worddelimiters	suckless/.suckless/dmenu/config.h	/^static const char worddelimiters[] = " ";$/;"	v	typeref:typename:const char[]
worddelimiters	suckless/.suckless/st/config.def.h	/^wchar_t *worddelimiters = L" ";$/;"	v	typeref:typename:wchar_t *
worddelimiters	suckless/.suckless/st/config.h	/^wchar_t *worddelimiters = L" ";$/;"	v	typeref:typename:wchar_t *
ww	suckless/.suckless/dwm/dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
ww	suckless/.suckless/tabbed/tabbed.c	/^static int bh, wx, wy, ww, wh;$/;"	v	typeref:typename:int	file:
wx	suckless/.suckless/dwm/dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	suckless/.suckless/tabbed/tabbed.c	/^static int bh, wx, wy, ww, wh;$/;"	v	typeref:typename:int	file:
wy	suckless/.suckless/dwm/dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	suckless/.suckless/tabbed/tabbed.c	/^static int bh, wx, wy, ww, wh;$/;"	v	typeref:typename:int	file:
x	suckless/.suckless/dwm/dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
x	suckless/.suckless/st/st.c	/^		int x, y;$/;"	m	struct:__anon140a12590208::__anon140a12590308	typeref:typename:int	file:
x	suckless/.suckless/st/st.c	/^	int x;$/;"	m	struct:__anon140a12590108	typeref:typename:int	file:
x	suckless/.suckless/tabbed/tabbed.c	/^	int x, y, w, h;$/;"	m	struct:__anon0f72b96f0508	typeref:typename:int	file:
x	weechat/.weechat/weechat.conf	/^meta-x = "\/input zoom_merged_buffer"$/;"	k	section:key
x.o	suckless/.suckless/st/Makefile	/^x.o: arg.h config.h st.h win.h$/;"	t
xbell	suckless/.suckless/st/x.c	/^xbell(void)$/;"	f	typeref:typename:void
xclear	suckless/.suckless/st/x.c	/^xclear(int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
xclipcopy	suckless/.suckless/st/x.c	/^xclipcopy(void)$/;"	f	typeref:typename:void
xdrawcursor	suckless/.suckless/st/x.c	/^xdrawcursor(int cx, int cy, Glyph g, int ox, int oy, Glyph og)$/;"	f	typeref:typename:void
xdrawglyph	suckless/.suckless/st/x.c	/^xdrawglyph(Glyph g, int x, int y)$/;"	f	typeref:typename:void
xdrawglyphfontspecs	suckless/.suckless/st/x.c	/^xdrawglyphfontspecs(const XftGlyphFontSpec *specs, Glyph base, int len, int x, int y)$/;"	f	typeref:typename:void
xdrawline	suckless/.suckless/st/x.c	/^xdrawline(Line line, int x1, int y1, int x2)$/;"	f	typeref:typename:void
xembed	suckless/.suckless/st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmpid;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:Atom	file:
xerror	suckless/.suckless/dwm/dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerror	suckless/.suckless/tabbed/tabbed.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	suckless/.suckless/dwm/dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	suckless/.suckless/dwm/dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorxlib	suckless/.suckless/dwm/dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xerrorxlib	suckless/.suckless/tabbed/tabbed.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xfinishdraw	suckless/.suckless/st/x.c	/^xfinishdraw(void)$/;"	f	typeref:typename:void
xfont	suckless/.suckless/dmenu/drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont	suckless/.suckless/dwm/drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont	suckless/.suckless/tabbed/tabbed.c	/^		XftFont *xfont;$/;"	m	struct:__anon0f72b96f0508::__anon0f72b96f0608	typeref:typename:XftFont *	file:
xfont_create	suckless/.suckless/dmenu/drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:
xfont_create	suckless/.suckless/dwm/drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:
xfont_free	suckless/.suckless/dmenu/drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:
xfont_free	suckless/.suckless/dwm/drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:
xfps	suckless/.suckless/st/config.def.h	/^static unsigned int xfps = 120;$/;"	v	typeref:typename:unsigned int
xfps	suckless/.suckless/st/config.h	/^static unsigned int xfps = 120;$/;"	v	typeref:typename:unsigned int
xgeommasktogravity	suckless/.suckless/st/x.c	/^xgeommasktogravity(int mask)$/;"	f	typeref:typename:int
xhints	suckless/.suckless/st/x.c	/^xhints(void)$/;"	f	typeref:typename:void
xic	suckless/.suckless/dmenu/dmenu.c	/^static XIC xic;$/;"	v	typeref:typename:XIC	file:
xic	suckless/.suckless/st/x.c	/^	XIC xic;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:XIC	file:
xid	suckless/.suckless/surf/surf.c	/^	Window xid;$/;"	m	struct:Client	typeref:typename:Window	file:
xim	suckless/.suckless/st/x.c	/^	XIM xim;$/;"	m	struct:__anon6574b7aa0508	typeref:typename:XIM	file:
ximdestroy	suckless/.suckless/st/x.c	/^ximdestroy(XIM xim, XPointer client, XPointer call)$/;"	f	typeref:typename:void
ximinstantiate	suckless/.suckless/st/x.c	/^ximinstantiate(Display *dpy, XPointer client, XPointer call)$/;"	f	typeref:typename:void
ximopen	suckless/.suckless/st/x.c	/^ximopen(Display *dpy)$/;"	f	typeref:typename:void
xinit	suckless/.suckless/st/x.c	/^xinit(int cols, int rows)$/;"	f	typeref:typename:void
xloadcolor	suckless/.suckless/st/x.c	/^xloadcolor(int i, const char *name, Color *ncolor)$/;"	f	typeref:typename:int
xloadcols	suckless/.suckless/st/x.c	/^xloadcols(void)$/;"	f	typeref:typename:void
xloadfont	suckless/.suckless/st/x.c	/^xloadfont(Font *f, FcPattern *pattern)$/;"	f	typeref:typename:int
xloadfonts	suckless/.suckless/st/x.c	/^xloadfonts(char *fontstr, double fontsize)$/;"	f	typeref:typename:void
xmakeglyphfontspecs	suckless/.suckless/st/x.c	/^xmakeglyphfontspecs(XftGlyphFontSpec *specs, const Glyph *glyphs, int len, int x, int y)$/;"	f	typeref:typename:int
xmalloc	suckless/.suckless/st/st.c	/^xmalloc(size_t len)$/;"	f	typeref:typename:void *
xrealloc	suckless/.suckless/st/st.c	/^xrealloc(void *p, size_t len)$/;"	f	typeref:typename:void *
xresize	suckless/.suckless/st/x.c	/^xresize(int col, int row)$/;"	f	typeref:typename:void
xsel	suckless/.suckless/st/x.c	/^static XSelection xsel;$/;"	v	typeref:typename:XSelection	file:
xsetcolorname	suckless/.suckless/st/x.c	/^xsetcolorname(int x, const char *name)$/;"	f	typeref:typename:int
xsetcursor	suckless/.suckless/st/x.c	/^xsetcursor(int cursor)$/;"	f	typeref:typename:int
xsetenv	suckless/.suckless/st/x.c	/^xsetenv(void)$/;"	f	typeref:typename:void
xsetmode	suckless/.suckless/st/x.c	/^xsetmode(int set, unsigned int flags)$/;"	f	typeref:typename:void
xsetpointermotion	suckless/.suckless/st/x.c	/^xsetpointermotion(int set)$/;"	f	typeref:typename:void
xsetsel	suckless/.suckless/st/x.c	/^xsetsel(char *str)$/;"	f	typeref:typename:void
xsettitle	suckless/.suckless/st/x.c	/^xsettitle(char *p)$/;"	f	typeref:typename:void
xsettitle	suckless/.suckless/tabbed/tabbed.c	/^xsettitle(Window w, const char *str)$/;"	f	typeref:typename:void
xseturgency	suckless/.suckless/st/x.c	/^xseturgency(int add)$/;"	f	typeref:typename:void
xstartdraw	suckless/.suckless/st/x.c	/^xstartdraw(void)$/;"	f	typeref:typename:int
xstrdup	suckless/.suckless/st/st.c	/^xstrdup(char *s)$/;"	f	typeref:typename:char *
xtarget	suckless/.suckless/st/x.c	/^	Atom xtarget;$/;"	m	struct:__anon6574b7aa0608	typeref:typename:Atom	file:
xunloadfont	suckless/.suckless/st/x.c	/^xunloadfont(Font *f)$/;"	f	typeref:typename:void
xunloadfonts	suckless/.suckless/st/x.c	/^xunloadfonts(void)$/;"	f	typeref:typename:void
xw	suckless/.suckless/st/x.c	/^static XWindow xw;$/;"	v	typeref:typename:XWindow	file:
xwrite	suckless/.suckless/st/st.c	/^xwrite(int fd, const char *s, size_t len)$/;"	f	typeref:typename:ssize_t
xximspot	suckless/.suckless/st/x.c	/^xximspot(int x, int y)$/;"	f	typeref:typename:void
y	suckless/.suckless/dwm/dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
y	suckless/.suckless/st/st.c	/^		int x, y;$/;"	m	struct:__anon140a12590208::__anon140a12590308	typeref:typename:int	file:
y	suckless/.suckless/st/st.c	/^	int y;$/;"	m	struct:__anon140a12590108	typeref:typename:int	file:
y	suckless/.suckless/tabbed/tabbed.c	/^	int x, y, w, h;$/;"	m	struct:__anon0f72b96f0508	typeref:typename:int	file:
z	weechat/.weechat/weechat.conf	/^meta-z = "\/window zoom"$/;"	k	section:key
zoom	suckless/.suckless/dwm/dwm.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
zoom	suckless/.suckless/st/x.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
zoom	suckless/.suckless/surf/surf.c	/^zoom(Client *c, const Arg *a)$/;"	f	typeref:typename:void
zoomabs	suckless/.suckless/st/x.c	/^zoomabs(const Arg *arg)$/;"	f	typeref:typename:void
zoomreset	suckless/.suckless/st/x.c	/^zoomreset(const Arg *arg)$/;"	f	typeref:typename:void
~~i3~~	README.md	/^#### ~~i3~~$/;"	t
